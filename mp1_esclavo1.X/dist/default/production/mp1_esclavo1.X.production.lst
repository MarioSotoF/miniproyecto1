

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Feb 24 21:06:57 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  0105                     	;# 
   273  0107                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0187                     	;# 
   283  0188                     	;# 
   284  0189                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287  0000                     	;# 
   288  0001                     	;# 
   289  0002                     	;# 
   290  0003                     	;# 
   291  0004                     	;# 
   292  0005                     	;# 
   293  0006                     	;# 
   294  0007                     	;# 
   295  0008                     	;# 
   296  0009                     	;# 
   297  000A                     	;# 
   298  000B                     	;# 
   299  000C                     	;# 
   300  000D                     	;# 
   301  000E                     	;# 
   302  000E                     	;# 
   303  000F                     	;# 
   304  0010                     	;# 
   305  0011                     	;# 
   306  0012                     	;# 
   307  0013                     	;# 
   308  0014                     	;# 
   309  0015                     	;# 
   310  0015                     	;# 
   311  0016                     	;# 
   312  0017                     	;# 
   313  0018                     	;# 
   314  0019                     	;# 
   315  001A                     	;# 
   316  001B                     	;# 
   317  001B                     	;# 
   318  001C                     	;# 
   319  001D                     	;# 
   320  001E                     	;# 
   321  001F                     	;# 
   322  0081                     	;# 
   323  0085                     	;# 
   324  0086                     	;# 
   325  0087                     	;# 
   326  0088                     	;# 
   327  0089                     	;# 
   328  008C                     	;# 
   329  008D                     	;# 
   330  008E                     	;# 
   331  008F                     	;# 
   332  0090                     	;# 
   333  0091                     	;# 
   334  0092                     	;# 
   335  0093                     	;# 
   336  0093                     	;# 
   337  0093                     	;# 
   338  0094                     	;# 
   339  0095                     	;# 
   340  0096                     	;# 
   341  0097                     	;# 
   342  0098                     	;# 
   343  0099                     	;# 
   344  009A                     	;# 
   345  009B                     	;# 
   346  009C                     	;# 
   347  009D                     	;# 
   348  009E                     	;# 
   349  009F                     	;# 
   350  0105                     	;# 
   351  0107                     	;# 
   352  0108                     	;# 
   353  0109                     	;# 
   354  010C                     	;# 
   355  010C                     	;# 
   356  010D                     	;# 
   357  010E                     	;# 
   358  010F                     	;# 
   359  0185                     	;# 
   360  0187                     	;# 
   361  0188                     	;# 
   362  0189                     	;# 
   363  018C                     	;# 
   364  018D                     	;# 
   365  0013                     _SSPBUF	set	19
   366  0014                     _SSPCON	set	20
   367  000B                     _INTCONbits	set	11
   368  001E                     _ADRESH	set	30
   369  000C                     _PIR1bits	set	12
   370  001F                     _ADCON0bits	set	31
   371  0008                     _PORTD	set	8
   372  0005                     _PORTA	set	5
   373  0063                     _SSPIF	set	99
   374  0094                     _SSPSTATbits	set	148
   375  0094                     _SSPSTAT	set	148
   376  009F                     _ADCON1bits	set	159
   377  008C                     _PIE1bits	set	140
   378  0087                     _TRISC	set	135
   379  0088                     _TRISD	set	136
   380  0085                     _TRISA	set	133
   381  008F                     _OSCCONbits	set	143
   382  043B                     _TRISC3	set	1083
   383  043D                     _TRISC5	set	1085
   384  042D                     _TRISA5	set	1069
   385  0188                     _ANSELbits	set	392
   386  0189                     _ANSELH	set	393
   387  0188                     _ANSEL	set	392
   388                           
   389                           	psect	cinit
   390  000F                     start_initialization:	
   391                           ; #config settings
   392                           
   393  000F                     __initialization:
   394                           
   395                           ; Clear objects allocated to COMMON
   396  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   397  0010                     end_of_initialization:	
   398                           ;End of C runtime variable initialization code
   399                           
   400  0010                     __end_of__initialization:
   401  0010  0183               	clrf	3
   402  0011  120A  118A  2814   	ljmp	_main	;jump to C main() function
   403                           
   404                           	psect	bssCOMMON
   405  0078                     __pbssCOMMON:
   406  0078                     _ADCV:
   407  0078                     	ds	1
   408                           
   409                           	psect	cstackCOMMON
   410  0070                     __pcstackCOMMON:
   411  0070                     ?_ADCen:
   412  0070                     ?_spiRead:	
   413                           ; 1 bytes @ 0x0
   414                           
   415  0070                     ??_spiRead:	
   416                           ; 1 bytes @ 0x0
   417                           
   418  0070                     ?_spiWrite:	
   419                           ; 1 bytes @ 0x0
   420                           
   421  0070                     ??_spiWrite:	
   422                           ; 1 bytes @ 0x0
   423                           
   424  0070                     ?_main:	
   425                           ; 1 bytes @ 0x0
   426                           
   427  0070                     ?_ISR:	
   428                           ; 1 bytes @ 0x0
   429                           
   430  0070                     ?_spiReceiveWait:	
   431                           ; 1 bytes @ 0x0
   432                           
   433  0070                     ??_spiReceiveWait:	
   434                           ; 1 bytes @ 0x0
   435                           
   436  0070                     spiWrite@dat:	
   437                           ; 1 bytes @ 0x0
   438                           
   439                           
   440                           ; 1 bytes @ 0x0
   441  0070                     	ds	1
   442  0071                     ??_ISR:
   443                           
   444                           ; 1 bytes @ 0x1
   445  0071                     	ds	3
   446  0074                     ?_spiInit:
   447  0074                     ??_ADCen:	
   448                           ; 1 bytes @ 0x4
   449                           
   450  0074                     spiInit@sDataSample:	
   451                           ; 1 bytes @ 0x4
   452                           
   453                           
   454                           ; 1 bytes @ 0x4
   455  0074                     	ds	1
   456  0075                     spiInit@sClockIdle:
   457                           
   458                           ; 1 bytes @ 0x5
   459  0075                     	ds	1
   460  0076                     spiInit@sTransmitEdge:
   461                           
   462                           ; 1 bytes @ 0x6
   463  0076                     	ds	1
   464  0077                     ??_spiInit:
   465  0077                     spiInit@sType:	
   466                           ; 1 bytes @ 0x7
   467                           
   468                           
   469                           ; 1 bytes @ 0x7
   470  0077                     	ds	1
   471                           
   472                           	psect	cstackBANK0
   473  0020                     __pcstackBANK0:
   474  0020                     ??_main:
   475                           
   476                           ; 1 bytes @ 0x0
   477  0020                     	ds	2
   478                           
   479                           	psect	maintext
   480  0014                     __pmaintext:	
   481 ;;
   482 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   483 ;;
   484 ;; *************** function _main *****************
   485 ;; Defined at:
   486 ;;		line 41 in file "main.c"
   487 ;; Parameters:    Size  Location     Type
   488 ;;		None
   489 ;; Auto vars:     Size  Location     Type
   490 ;;		None
   491 ;; Return value:  Size  Location     Type
   492 ;;                  1    wreg      void 
   493 ;; Registers used:
   494 ;;		wreg, status,2, status,0, pclath, cstack
   495 ;; Tracked objects:
   496 ;;		On entry : B00/0
   497 ;;		On exit  : 0/0
   498 ;;		Unchanged: 0/0
   499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   500 ;;      Params:         0       0       0       0       0
   501 ;;      Locals:         0       0       0       0       0
   502 ;;      Temps:          0       2       0       0       0
   503 ;;      Totals:         0       2       0       0       0
   504 ;;Total ram usage:        2 bytes
   505 ;; Hardware stack levels required when called:    4
   506 ;; This function calls:
   507 ;;		_ADCen
   508 ;;		_spiInit
   509 ;; This function is called by:
   510 ;;		Startup code after reset
   511 ;; This function uses a non-reentrant model
   512 ;;
   513                           
   514                           
   515                           ;psect for function _main
   516  0014                     _main:
   517  0014                     l839:	
   518                           ;incstack = 0
   519                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   520                           
   521                           
   522                           ;main.c: 42:     OSCCONbits.IRCF = 0b111;
   523  0014  3070               	movlw	112
   524  0015  1683               	bsf	3,5	;RP0=1, select bank1
   525  0016  1303               	bcf	3,6	;RP1=0, select bank1
   526  0017  048F               	iorwf	15,f	;volatile
   527  0018                     l841:
   528                           
   529                           ;main.c: 43:     OSCCONbits.OSTS = 0;
   530  0018  118F               	bcf	15,3	;volatile
   531  0019                     l843:
   532                           
   533                           ;main.c: 44:     OSCCONbits.HTS = 0;
   534  0019  110F               	bcf	15,2	;volatile
   535  001A                     l845:
   536                           
   537                           ;main.c: 45:     OSCCONbits.LTS = 0;
   538  001A  108F               	bcf	15,1	;volatile
   539  001B                     l847:
   540                           
   541                           ;main.c: 46:     OSCCONbits.SCS = 1;
   542  001B  140F               	bsf	15,0	;volatile
   543  001C                     l849:
   544                           
   545                           ;main.c: 47:     ANSEL = 0;
   546  001C  1683               	bsf	3,5	;RP0=1, select bank3
   547  001D  1703               	bsf	3,6	;RP1=1, select bank3
   548  001E  0188               	clrf	8	;volatile
   549  001F                     l851:
   550                           
   551                           ;main.c: 48:     ANSELH = 0;
   552  001F  0189               	clrf	9	;volatile
   553  0020                     l853:
   554                           
   555                           ;main.c: 49:     TRISA = 0b00000001;
   556  0020  3001               	movlw	1
   557  0021  1683               	bsf	3,5	;RP0=1, select bank1
   558  0022  1303               	bcf	3,6	;RP1=0, select bank1
   559  0023  0085               	movwf	5	;volatile
   560  0024                     l855:
   561                           
   562                           ;main.c: 50:     ANSELbits.ANS0 = 1;
   563  0024  1683               	bsf	3,5	;RP0=1, select bank3
   564  0025  1703               	bsf	3,6	;RP1=1, select bank3
   565  0026  1408               	bsf	8,0	;volatile
   566  0027                     l857:
   567                           
   568                           ;main.c: 51:     PORTA = 0;
   569  0027  1283               	bcf	3,5	;RP0=0, select bank0
   570  0028  1303               	bcf	3,6	;RP1=0, select bank0
   571  0029  0185               	clrf	5	;volatile
   572  002A                     l859:
   573                           
   574                           ;main.c: 52:     TRISD=0;
   575  002A  1683               	bsf	3,5	;RP0=1, select bank1
   576  002B  1303               	bcf	3,6	;RP1=0, select bank1
   577  002C  0188               	clrf	8	;volatile
   578  002D                     l861:
   579                           
   580                           ;main.c: 53:     PORTD=0;
   581  002D  1283               	bcf	3,5	;RP0=0, select bank0
   582  002E  1303               	bcf	3,6	;RP1=0, select bank0
   583  002F  0188               	clrf	8	;volatile
   584  0030                     l863:
   585                           
   586                           ;main.c: 54:     TRISC = 0b00010000;
   587  0030  3010               	movlw	16
   588  0031  1683               	bsf	3,5	;RP0=1, select bank1
   589  0032  1303               	bcf	3,6	;RP1=0, select bank1
   590  0033  0087               	movwf	7	;volatile
   591  0034                     l865:
   592                           
   593                           ;main.c: 55:     TRISA5 = 1;
   594  0034  1685               	bsf	5,5	;volatile
   595  0035                     l867:
   596                           
   597                           ;main.c: 56:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, SP
      +                          I_IDLE_2_ACTIVE);
   598  0035  01F4               	clrf	spiInit@sDataSample
   599  0036  01F5               	clrf	spiInit@sClockIdle
   600  0037  01F6               	clrf	spiInit@sTransmitEdge
   601  0038  3024               	movlw	36
   602  0039  120A  118A  2083  120A  118A  	fcall	_spiInit
   603  003E                     l869:
   604                           
   605                           ;main.c: 60:         ADCen();
   606  003E  120A  118A  2099  120A  118A  	fcall	_ADCen
   607  0043                     l871:
   608                           
   609                           ;main.c: 61:         ADCON0bits.ADON = 1;
   610  0043  1283               	bcf	3,5	;RP0=0, select bank0
   611  0044  1303               	bcf	3,6	;RP1=0, select bank0
   612  0045  141F               	bsf	31,0	;volatile
   613  0046                     l873:
   614                           
   615                           ;main.c: 62:         _delay((unsigned long)((15)*(8000000/4000.0)));
   616  0046  3027               	movlw	39
   617  0047  1283               	bcf	3,5	;RP0=0, select bank0
   618  0048  1303               	bcf	3,6	;RP1=0, select bank0
   619  0049  00A1               	movwf	??_main+1
   620  004A  30F4               	movlw	244
   621  004B  00A0               	movwf	??_main
   622  004C                     u97:
   623  004C  0BA0               	decfsz	??_main,f
   624  004D  284C               	goto	u97
   625  004E  0BA1               	decfsz	??_main+1,f
   626  004F  284C               	goto	u97
   627  0050  0000               	nop
   628  0051                     l875:
   629                           
   630                           ;main.c: 63:         ADCON0bits.GO = 1;
   631  0051  1283               	bcf	3,5	;RP0=0, select bank0
   632  0052  1303               	bcf	3,6	;RP1=0, select bank0
   633  0053  149F               	bsf	31,1	;volatile
   634  0054                     l46:	
   635                           ;main.c: 64:         while (ADCON0bits.GO);
   636                           
   637  0054  189F               	btfsc	31,1	;volatile
   638  0055  2857               	goto	u81
   639  0056  2858               	goto	u80
   640  0057                     u81:
   641  0057  2854               	goto	l46
   642  0058                     u80:
   643  0058                     l877:
   644                           
   645                           ;main.c: 65:         PORTD=ADCV;
   646  0058  0878               	movf	_ADCV,w
   647  0059  0088               	movwf	8	;volatile
   648  005A  283E               	goto	l869
   649  005B  120A  118A  280C   	ljmp	start
   650  005E                     __end_of_main:
   651                           
   652                           	psect	text1
   653  0083                     __ptext1:	
   654 ;; *************** function _spiInit *****************
   655 ;; Defined at:
   656 ;;		line 12 in file "SPI.c"
   657 ;; Parameters:    Size  Location     Type
   658 ;;  sType           1    wreg     enum E1264
   659 ;;  sDataSample     1    4[COMMON] enum E1272
   660 ;;  sClockIdle      1    5[COMMON] enum E1276
   661 ;;  sTransmitEdg    1    6[COMMON] enum E1280
   662 ;; Auto vars:     Size  Location     Type
   663 ;;  sType           1    7[COMMON] enum E1264
   664 ;; Return value:  Size  Location     Type
   665 ;;                  1    wreg      void 
   666 ;; Registers used:
   667 ;;		wreg, status,2, status,0
   668 ;; Tracked objects:
   669 ;;		On entry : 0/0
   670 ;;		On exit  : 0/0
   671 ;;		Unchanged: 0/0
   672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   673 ;;      Params:         3       0       0       0       0
   674 ;;      Locals:         1       0       0       0       0
   675 ;;      Temps:          0       0       0       0       0
   676 ;;      Totals:         4       0       0       0       0
   677 ;;Total ram usage:        4 bytes
   678 ;; Hardware stack levels used:    1
   679 ;; Hardware stack levels required when called:    3
   680 ;; This function calls:
   681 ;;		Nothing
   682 ;; This function is called by:
   683 ;;		_main
   684 ;; This function uses a non-reentrant model
   685 ;;
   686                           
   687                           
   688                           ;psect for function _spiInit
   689  0083                     _spiInit:
   690                           
   691                           ;incstack = 0
   692                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   693                           ;spiInit@sType stored from wreg
   694  0083  00F7               	movwf	spiInit@sType
   695  0084                     l789:
   696                           
   697                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   698  0084  1683               	bsf	3,5	;RP0=1, select bank1
   699  0085  1303               	bcf	3,6	;RP1=0, select bank1
   700  0086  1287               	bcf	7,5	;volatile
   701                           
   702                           ;SPI.c: 15:     if(sType & 0b00000100)
   703  0087  1D77               	btfss	spiInit@sType,2
   704  0088  288A               	goto	u61
   705  0089  288B               	goto	u60
   706  008A                     u61:
   707  008A  288F               	goto	l795
   708  008B                     u60:
   709  008B                     l791:
   710                           
   711                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   712  008B  0876               	movf	spiInit@sTransmitEdge,w
   713  008C  0094               	movwf	20	;volatile
   714  008D                     l793:
   715                           
   716                           ;SPI.c: 18:         TRISC3 = 1;
   717  008D  1587               	bsf	7,3	;volatile
   718                           
   719                           ;SPI.c: 19:     }
   720  008E  2893               	goto	l89
   721  008F                     l795:
   722                           
   723                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   724  008F  0874               	movf	spiInit@sDataSample,w
   725  0090  0476               	iorwf	spiInit@sTransmitEdge,w
   726  0091  0094               	movwf	20	;volatile
   727  0092                     l797:
   728                           
   729                           ;SPI.c: 23:         TRISC3 = 0;
   730  0092  1187               	bcf	7,3	;volatile
   731  0093                     l89:	
   732                           ;SPI.c: 24:     }
   733                           
   734                           
   735                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   736  0093  0877               	movf	spiInit@sType,w
   737  0094  0475               	iorwf	spiInit@sClockIdle,w
   738  0095  1283               	bcf	3,5	;RP0=0, select bank0
   739  0096  1303               	bcf	3,6	;RP1=0, select bank0
   740  0097  0094               	movwf	20	;volatile
   741  0098                     l90:
   742  0098  0008               	return
   743  0099                     __end_of_spiInit:
   744                           
   745                           	psect	text2
   746  0099                     __ptext2:	
   747 ;; *************** function _ADCen *****************
   748 ;; Defined at:
   749 ;;		line 20 in file "ADC.c"
   750 ;; Parameters:    Size  Location     Type
   751 ;;		None
   752 ;; Auto vars:     Size  Location     Type
   753 ;;		None
   754 ;; Return value:  Size  Location     Type
   755 ;;                  1    wreg      void 
   756 ;; Registers used:
   757 ;;		wreg, status,2, status,0
   758 ;; Tracked objects:
   759 ;;		On entry : 0/0
   760 ;;		On exit  : 0/0
   761 ;;		Unchanged: 0/0
   762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   763 ;;      Params:         0       0       0       0       0
   764 ;;      Locals:         0       0       0       0       0
   765 ;;      Temps:          0       0       0       0       0
   766 ;;      Totals:         0       0       0       0       0
   767 ;;Total ram usage:        0 bytes
   768 ;; Hardware stack levels used:    1
   769 ;; Hardware stack levels required when called:    3
   770 ;; This function calls:
   771 ;;		Nothing
   772 ;; This function is called by:
   773 ;;		_main
   774 ;; This function uses a non-reentrant model
   775 ;;
   776                           
   777                           
   778                           ;psect for function _ADCen
   779  0099                     _ADCen:
   780  0099                     l711:	
   781                           ;incstack = 0
   782                           ; Regs used in _ADCen: [wreg+status,2+status,0]
   783                           
   784                           
   785                           ;ADC.c: 22:     INTCONbits.GIE = 1;
   786  0099  178B               	bsf	11,7	;volatile
   787                           
   788                           ;ADC.c: 23:     INTCONbits.PEIE = 1;
   789  009A  170B               	bsf	11,6	;volatile
   790                           
   791                           ;ADC.c: 24:     PIE1bits.ADIE = 1;
   792  009B  1683               	bsf	3,5	;RP0=1, select bank1
   793  009C  1303               	bcf	3,6	;RP1=0, select bank1
   794  009D  170C               	bsf	12,6	;volatile
   795                           
   796                           ;ADC.c: 25:     PIR1bits.ADIF = 0;
   797  009E  1283               	bcf	3,5	;RP0=0, select bank0
   798  009F  1303               	bcf	3,6	;RP1=0, select bank0
   799  00A0  130C               	bcf	12,6	;volatile
   800  00A1                     l713:
   801                           
   802                           ;ADC.c: 26:     ADCON0bits.ADCS = 01;
   803  00A1  081F               	movf	31,w	;volatile
   804  00A2  393F               	andlw	-193
   805  00A3  3840               	iorlw	64
   806  00A4  009F               	movwf	31	;volatile
   807                           
   808                           ;ADC.c: 27:     ADCON0bits.CHS = 0000;
   809  00A5  30C3               	movlw	-61
   810  00A6  059F               	andwf	31,f	;volatile
   811  00A7                     l715:
   812                           
   813                           ;ADC.c: 28:     ADCON0bits.ADON = 1;
   814  00A7  141F               	bsf	31,0	;volatile
   815  00A8                     l717:
   816                           
   817                           ;ADC.c: 29:     ADCON1bits.ADFM = 0;
   818  00A8  1683               	bsf	3,5	;RP0=1, select bank1
   819  00A9  1303               	bcf	3,6	;RP1=0, select bank1
   820  00AA  139F               	bcf	31,7	;volatile
   821  00AB                     l719:
   822                           
   823                           ;ADC.c: 30:     ADCON1bits.VCFG1 = 0;
   824  00AB  129F               	bcf	31,5	;volatile
   825  00AC                     l721:
   826                           
   827                           ;ADC.c: 31:     ADCON1bits.VCFG0 = 0;
   828  00AC  121F               	bcf	31,4	;volatile
   829  00AD                     l73:
   830  00AD  0008               	return
   831  00AE                     __end_of_ADCen:
   832                           
   833                           	psect	text3
   834  005E                     __ptext3:	
   835 ;; *************** function _ISR *****************
   836 ;; Defined at:
   837 ;;		line 71 in file "main.c"
   838 ;; Parameters:    Size  Location     Type
   839 ;;		None
   840 ;; Auto vars:     Size  Location     Type
   841 ;;		None
   842 ;; Return value:  Size  Location     Type
   843 ;;                  1    wreg      void 
   844 ;; Registers used:
   845 ;;		wreg, status,2, status,0, pclath, cstack
   846 ;; Tracked objects:
   847 ;;		On entry : 0/0
   848 ;;		On exit  : 0/0
   849 ;;		Unchanged: 0/0
   850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   851 ;;      Params:         0       0       0       0       0
   852 ;;      Locals:         0       0       0       0       0
   853 ;;      Temps:          3       0       0       0       0
   854 ;;      Totals:         3       0       0       0       0
   855 ;;Total ram usage:        3 bytes
   856 ;; Hardware stack levels used:    1
   857 ;; Hardware stack levels required when called:    2
   858 ;; This function calls:
   859 ;;		_spiRead
   860 ;;		_spiWrite
   861 ;; This function is called by:
   862 ;;		Interrupt level 1
   863 ;; This function uses a non-reentrant model
   864 ;;
   865                           
   866                           
   867                           ;psect for function _ISR
   868  005E                     _ISR:
   869  005E                     i1l771:
   870                           
   871                           ;main.c: 72:     if (PIR1bits.ADIF == 1) {
   872  005E  1283               	bcf	3,5	;RP0=0, select bank0
   873  005F  1303               	bcf	3,6	;RP1=0, select bank0
   874  0060  1F0C               	btfss	12,6	;volatile
   875  0061  2863               	goto	u4_21
   876  0062  2864               	goto	u4_20
   877  0063                     u4_21:
   878  0063  286A               	goto	i1l56
   879  0064                     u4_20:
   880  0064                     i1l773:
   881                           
   882                           ;main.c: 73:         ADCV = ADRESH;
   883  0064  081E               	movf	30,w	;volatile
   884  0065  00F1               	movwf	??_ISR
   885  0066  0871               	movf	??_ISR,w
   886  0067  00F8               	movwf	_ADCV
   887  0068                     i1l775:
   888                           
   889                           ;main.c: 74:         PIR1bits.ADIF = 0;
   890  0068  130C               	bcf	12,6	;volatile
   891  0069  287C               	goto	i1l57
   892  006A                     i1l56:	
   893                           ;main.c: 76:     }
   894                           
   895                           
   896                           ;main.c: 78:     if(SSPIF == 1){
   897  006A  1D8C               	btfss	12,3	;volatile
   898  006B  286D               	goto	u5_21
   899  006C  286E               	goto	u5_20
   900  006D                     u5_21:
   901  006D  287C               	goto	i1l57
   902  006E                     u5_20:
   903  006E                     i1l779:
   904                           
   905                           ;main.c: 79:         spiRead();
   906  006E  120A  118A  20AE  120A  118A  	fcall	_spiRead
   907                           
   908                           ;main.c: 80:         spiWrite(ADCV);
   909  0073  0878               	movf	_ADCV,w
   910  0074  120A  118A  20BE  120A  118A  	fcall	_spiWrite
   911  0079                     i1l781:
   912                           
   913                           ;main.c: 81:         SSPIF = 0;
   914  0079  1283               	bcf	3,5	;RP0=0, select bank0
   915  007A  1303               	bcf	3,6	;RP1=0, select bank0
   916  007B  118C               	bcf	12,3	;volatile
   917  007C                     i1l57:
   918  007C  0873               	movf	??_ISR+2,w
   919  007D  008A               	movwf	10
   920  007E  0E72               	swapf	??_ISR+1,w
   921  007F  0083               	movwf	3
   922  0080  0EFE               	swapf	btemp,f
   923  0081  0E7E               	swapf	btemp,w
   924  0082  0009               	retfie
   925  0083                     __end_of_ISR:
   926                           
   927                           	psect	intentry
   928  0004                     __pintentry:	
   929                           ;incstack = 0
   930                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
   931                           
   932  0004                     interrupt_function:
   933  007E                     saved_w	set	btemp
   934  0004  00FE               	movwf	btemp
   935  0005  0E03               	swapf	3,w
   936  0006  00F2               	movwf	??_ISR+1
   937  0007  080A               	movf	10,w
   938  0008  00F3               	movwf	??_ISR+2
   939  0009  120A  118A  285E   	ljmp	_ISR
   940                           
   941                           	psect	text4
   942  00BE                     __ptext4:	
   943 ;; *************** function _spiWrite *****************
   944 ;; Defined at:
   945 ;;		line 34 in file "SPI.c"
   946 ;; Parameters:    Size  Location     Type
   947 ;;  dat             1    wreg     unsigned char 
   948 ;; Auto vars:     Size  Location     Type
   949 ;;  dat             1    0[COMMON] unsigned char 
   950 ;; Return value:  Size  Location     Type
   951 ;;                  1    wreg      void 
   952 ;; Registers used:
   953 ;;		wreg
   954 ;; Tracked objects:
   955 ;;		On entry : 0/0
   956 ;;		On exit  : 0/0
   957 ;;		Unchanged: 0/0
   958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   959 ;;      Params:         0       0       0       0       0
   960 ;;      Locals:         1       0       0       0       0
   961 ;;      Temps:          0       0       0       0       0
   962 ;;      Totals:         1       0       0       0       0
   963 ;;Total ram usage:        1 bytes
   964 ;; Hardware stack levels used:    1
   965 ;; This function calls:
   966 ;;		Nothing
   967 ;; This function is called by:
   968 ;;		_ISR
   969 ;; This function uses a non-reentrant model
   970 ;;
   971                           
   972                           
   973                           ;psect for function _spiWrite
   974  00BE                     _spiWrite:
   975                           
   976                           ;incstack = 0
   977                           ; Regs used in _spiWrite: [wreg]
   978                           ;spiWrite@dat stored from wreg
   979  00BE  00F0               	movwf	spiWrite@dat
   980  00BF                     i1l729:
   981                           
   982                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
   983  00BF  0870               	movf	spiWrite@dat,w
   984  00C0  1283               	bcf	3,5	;RP0=0, select bank0
   985  00C1  1303               	bcf	3,6	;RP1=0, select bank0
   986  00C2  0093               	movwf	19	;volatile
   987  00C3                     i1l99:
   988  00C3  0008               	return
   989  00C4                     __end_of_spiWrite:
   990                           
   991                           	psect	text5
   992  00AE                     __ptext5:	
   993 ;; *************** function _spiRead *****************
   994 ;; Defined at:
   995 ;;		line 47 in file "SPI.c"
   996 ;; Parameters:    Size  Location     Type
   997 ;;		None
   998 ;; Auto vars:     Size  Location     Type
   999 ;;		None
  1000 ;; Return value:  Size  Location     Type
  1001 ;;                  1    wreg      unsigned char 
  1002 ;; Registers used:
  1003 ;;		wreg, status,2, status,0, pclath, cstack
  1004 ;; Tracked objects:
  1005 ;;		On entry : 0/0
  1006 ;;		On exit  : 0/0
  1007 ;;		Unchanged: 0/0
  1008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1009 ;;      Params:         0       0       0       0       0
  1010 ;;      Locals:         0       0       0       0       0
  1011 ;;      Temps:          0       0       0       0       0
  1012 ;;      Totals:         0       0       0       0       0
  1013 ;;Total ram usage:        0 bytes
  1014 ;; Hardware stack levels used:    1
  1015 ;; Hardware stack levels required when called:    1
  1016 ;; This function calls:
  1017 ;;		_spiReceiveWait
  1018 ;; This function is called by:
  1019 ;;		_ISR
  1020 ;; This function uses a non-reentrant model
  1021 ;;
  1022                           
  1023                           
  1024                           ;psect for function _spiRead
  1025  00AE                     _spiRead:
  1026  00AE                     i1l723:	
  1027                           ;incstack = 0
  1028                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1029                           
  1030                           
  1031                           ;SPI.c: 49:     spiReceiveWait();
  1032  00AE  120A  118A  20B7  120A  118A  	fcall	_spiReceiveWait
  1033  00B3                     i1l725:
  1034                           
  1035                           ;SPI.c: 50:     return(SSPBUF);;	Return value of _spiRead is never used
  1036  00B3  1283               	bcf	3,5	;RP0=0, select bank0
  1037  00B4  1303               	bcf	3,6	;RP1=0, select bank0
  1038  00B5  0813               	movf	19,w	;volatile
  1039  00B6                     i1l107:
  1040  00B6  0008               	return
  1041  00B7                     __end_of_spiRead:
  1042                           
  1043                           	psect	text6
  1044  00B7                     __ptext6:	
  1045 ;; *************** function _spiReceiveWait *****************
  1046 ;; Defined at:
  1047 ;;		line 29 in file "SPI.c"
  1048 ;; Parameters:    Size  Location     Type
  1049 ;;		None
  1050 ;; Auto vars:     Size  Location     Type
  1051 ;;		None
  1052 ;; Return value:  Size  Location     Type
  1053 ;;                  1    wreg      void 
  1054 ;; Registers used:
  1055 ;;		None
  1056 ;; Tracked objects:
  1057 ;;		On entry : 0/0
  1058 ;;		On exit  : 0/0
  1059 ;;		Unchanged: 0/0
  1060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1061 ;;      Params:         0       0       0       0       0
  1062 ;;      Locals:         0       0       0       0       0
  1063 ;;      Temps:          0       0       0       0       0
  1064 ;;      Totals:         0       0       0       0       0
  1065 ;;Total ram usage:        0 bytes
  1066 ;; Hardware stack levels used:    1
  1067 ;; This function calls:
  1068 ;;		Nothing
  1069 ;; This function is called by:
  1070 ;;		_spiRead
  1071 ;; This function uses a non-reentrant model
  1072 ;;
  1073                           
  1074                           
  1075                           ;psect for function _spiReceiveWait
  1076  00B7                     _spiReceiveWait:
  1077  00B7                     i1l699:	
  1078                           ;incstack = 0
  1079                           ; Regs used in _spiReceiveWait: []
  1080                           
  1081  00B7                     i1l93:	
  1082                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  1083                           
  1084  00B7  1683               	bsf	3,5	;RP0=1, select bank1
  1085  00B8  1303               	bcf	3,6	;RP1=0, select bank1
  1086  00B9  1C14               	btfss	20,0	;volatile
  1087  00BA  28BC               	goto	u1_21
  1088  00BB  28BD               	goto	u1_20
  1089  00BC                     u1_21:
  1090  00BC  28B7               	goto	i1l93
  1091  00BD                     u1_20:
  1092  00BD                     i1l96:
  1093  00BD  0008               	return
  1094  00BE                     __end_of_spiReceiveWait:
  1095  007E                     btemp	set	126	;btemp
  1096  007E                     wtemp0	set	126
  1097                           
  1098                           	psect	config
  1099                           
  1100                           ;Config register CONFIG1 @ 0x2007
  1101                           ;	Oscillator Selection bits
  1102                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1103                           ;	Watchdog Timer Enable bit
  1104                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1105                           ;	Power-up Timer Enable bit
  1106                           ;	PWRTE = OFF, PWRT disabled
  1107                           ;	RE3/MCLR pin function select bit
  1108                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1109                           ;	Code Protection bit
  1110                           ;	CP = OFF, Program memory code protection is disabled
  1111                           ;	Data Code Protection bit
  1112                           ;	CPD = OFF, Data memory code protection is disabled
  1113                           ;	Brown Out Reset Selection bits
  1114                           ;	BOREN = OFF, BOR disabled
  1115                           ;	Internal External Switchover bit
  1116                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1117                           ;	Fail-Safe Clock Monitor Enabled bit
  1118                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1119                           ;	Low Voltage Programming Enable bit
  1120                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1121                           ;	In-Circuit Debugger Mode bit
  1122                           ;	DEBUG = 0x1, unprogrammed default
  1123  2007                     	org	8199
  1124  2007  20F4               	dw	8436
  1125                           
  1126                           ;Config register CONFIG2 @ 0x2008
  1127                           ;	Brown-out Reset Selection bit
  1128                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1129                           ;	Flash Program Memory Self Write Enable bits
  1130                           ;	WRT = OFF, Write protection off
  1131  2008                     	org	8200
  1132  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       9
    BANK0            80      2       2
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_spiInit

Critical Paths under _ISR in COMMON

    _ISR->_spiWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     360
                                              0 BANK0      2     2      0
                              _ADCen
                            _spiInit
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     360
                                              4 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _ADCen                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0      15
                                              1 COMMON     3     3      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (3) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (4) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCen
   _spiInit

 _ISR (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2       2       5        2.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       B      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Feb 24 21:06:57 2021

            _SSPSTATbits 0094                       l46 0054                       l73 00AD  
                     l90 0098                       l89 0093                       u60 008B  
                     u61 008A                       u80 0058                       u81 0057  
                     u97 004C                      l711 0099                      l721 00AC  
                    l713 00A1                      l715 00A7                      l717 00A8  
                    l719 00AB                      l841 0018                      l851 001F  
                    l843 0019                      l861 002D                      l853 0020  
                    l845 001A                      l791 008B                      l871 0043  
                    l863 0030                      l855 0024                      l847 001B  
                    l839 0014                      l793 008D                      l873 0046  
                    l865 0034                      l857 0027                      l849 001C  
                    l795 008F                      l875 0051                      l867 0035  
                    l859 002A                      l797 0092                      l789 0084  
                    l877 0058                      l869 003E                      _ISR 005E  
                   ?_ISR 0070                     _ADCV 0078                     i1l56 006A  
                   i1l57 007C                     i1l93 00B7                     i1l96 00BD  
                   i1l99 00C3                     u1_20 00BD                     u1_21 00BC  
                   u4_20 0064                     u4_21 0063                     u5_20 006E  
                   u5_21 006D                     _main 0014                     btemp 007E  
                   start 000C                    ??_ISR 0071                    ?_main 0070  
                  _ADCen 0099                    _ANSEL 0188                    i1l107 00B6  
                  i1l723 00AE                    i1l725 00B3                    i1l729 00BF  
                  i1l771 005E                    i1l781 0079                    i1l773 0064  
                  i1l775 0068                    i1l699 00B7                    i1l779 006E  
                  _PORTA 0005                    _PORTD 0008                    _TRISA 0085  
                  _TRISC 0087                    _TRISD 0088                    _SSPIF 0063  
                  pclath 000A          __end_of_spiInit 0099          __end_of_spiRead 00B7  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 005E                   ??_main 0020                   ?_ADCen 0070  
                 _ADRESH 001E                   _ANSELH 0189                   _TRISA5 042D  
                 _TRISC3 043B                   _TRISC5 043D                   _SSPCON 0014  
                 _SSPBUF 0013                   saved_w 007E         __end_of_spiWrite 00C4  
              ??_spiInit 0077                ??_spiRead 0070  __end_of__initialization 0010  
          __end_of_ADCen 00AE           __pcstackCOMMON 0070                  ??_ADCen 0074  
             __pmaintext 0014               __pintentry 0004  __size_of_spiReceiveWait 0007  
                _SSPSTAT 0094                ?_spiWrite 0070                _ANSELbits 0188  
                __ptext1 0083                  __ptext2 0099                  __ptext3 005E  
                __ptext4 00BE                  __ptext5 00AE                  __ptext6 00B7  
           __size_of_ISR 0025                  _spiInit 0083                  _spiRead 00AE  
   end_of_initialization 0010               ??_spiWrite 0070              spiWrite@dat 0070  
         _spiReceiveWait 00B7      start_initialization 000F              __end_of_ISR 0083  
 __end_of_spiReceiveWait 00BE              __pbssCOMMON 0078                ___latbits 0002  
          __pcstackBANK0 0020          ?_spiReceiveWait 0070        __size_of_spiWrite 0006  
         __size_of_ADCen 0015                 ?_spiInit 0074                 ?_spiRead 0070  
   spiInit@sTransmitEdge 0076        interrupt_function 0004                 _PIE1bits 008C  
     spiInit@sDataSample 0074                 _PIR1bits 000C               _ADCON0bits 001F  
             _ADCON1bits 009F         __size_of_spiInit 0016         __size_of_spiRead 0009  
          __size_of_main 004A                 _spiWrite 00BE             spiInit@sType 0077  
      spiInit@sClockIdle 0075               _INTCONbits 000B                 intlevel1 0000  
       ??_spiReceiveWait 0070               _OSCCONbits 008F  

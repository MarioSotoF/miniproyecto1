

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Feb 24 22:08:51 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 12/02/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  0000                     	;# 
   206  0001                     	;# 
   207  0002                     	;# 
   208  0003                     	;# 
   209  0004                     	;# 
   210  0005                     	;# 
   211  0006                     	;# 
   212  0007                     	;# 
   213  0008                     	;# 
   214  0009                     	;# 
   215  000A                     	;# 
   216  000B                     	;# 
   217  000C                     	;# 
   218  000D                     	;# 
   219  000E                     	;# 
   220  000E                     	;# 
   221  000F                     	;# 
   222  0010                     	;# 
   223  0011                     	;# 
   224  0012                     	;# 
   225  0013                     	;# 
   226  0014                     	;# 
   227  0015                     	;# 
   228  0015                     	;# 
   229  0016                     	;# 
   230  0017                     	;# 
   231  0018                     	;# 
   232  0019                     	;# 
   233  001A                     	;# 
   234  001B                     	;# 
   235  001B                     	;# 
   236  001C                     	;# 
   237  001D                     	;# 
   238  001E                     	;# 
   239  001F                     	;# 
   240  0081                     	;# 
   241  0085                     	;# 
   242  0086                     	;# 
   243  0087                     	;# 
   244  0088                     	;# 
   245  0089                     	;# 
   246  008C                     	;# 
   247  008D                     	;# 
   248  008E                     	;# 
   249  008F                     	;# 
   250  0090                     	;# 
   251  0091                     	;# 
   252  0092                     	;# 
   253  0093                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0094                     	;# 
   257  0095                     	;# 
   258  0096                     	;# 
   259  0097                     	;# 
   260  0098                     	;# 
   261  0099                     	;# 
   262  009A                     	;# 
   263  009B                     	;# 
   264  009C                     	;# 
   265  009D                     	;# 
   266  009E                     	;# 
   267  009F                     	;# 
   268  0105                     	;# 
   269  0107                     	;# 
   270  0108                     	;# 
   271  0109                     	;# 
   272  010C                     	;# 
   273  010C                     	;# 
   274  010D                     	;# 
   275  010E                     	;# 
   276  010F                     	;# 
   277  0185                     	;# 
   278  0187                     	;# 
   279  0188                     	;# 
   280  0189                     	;# 
   281  018C                     	;# 
   282  018D                     	;# 
   283  0013                     _SSPBUF	set	19
   284  0014                     _SSPCON	set	20
   285  0007                     _PORTCbits	set	7
   286  0008                     _PORTD	set	8
   287  0005                     _PORTA	set	5
   288  0094                     _SSPSTATbits	set	148
   289  0094                     _SSPSTAT	set	148
   290  0088                     _TRISD	set	136
   291  0087                     _TRISCbits	set	135
   292  0087                     _TRISC	set	135
   293  0085                     _TRISA	set	133
   294  043B                     _TRISC3	set	1083
   295  043D                     _TRISC5	set	1085
   296  0189                     _ANSELH	set	393
   297  0188                     _ANSEL	set	392
   298                           
   299                           	psect	cinit
   300  07F9                     start_initialization:	
   301                           ; #config settings
   302                           
   303  07F9                     __initialization:
   304                           
   305                           ; Clear objects allocated to COMMON
   306  07F9  01F7               	clrf	__pbssCOMMON& (0+127)
   307  07FA  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   308  07FB  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   309  07FC                     end_of_initialization:	
   310                           ;End of C runtime variable initialization code
   311                           
   312  07FC                     __end_of__initialization:
   313  07FC  0183               	clrf	3
   314  07FD  120A  118A  2F41   	ljmp	_main	;jump to C main() function
   315                           
   316                           	psect	bssCOMMON
   317  0077                     __pbssCOMMON:
   318  0077                     _semaforo:
   319  0077                     	ds	1
   320  0078                     _contador:
   321  0078                     	ds	1
   322  0079                     _potenciometro:
   323  0079                     	ds	1
   324                           
   325                           	psect	cstackCOMMON
   326  0070                     __pcstackCOMMON:
   327  0070                     ?_spiInit:
   328  0070                     ?_spiWrite:	
   329                           ; 1 bytes @ 0x0
   330                           
   331  0070                     ??_spiWrite:	
   332                           ; 1 bytes @ 0x0
   333                           
   334  0070                     ?_spiRead:	
   335                           ; 1 bytes @ 0x0
   336                           
   337  0070                     ??_spiRead:	
   338                           ; 1 bytes @ 0x0
   339                           
   340  0070                     ?_main:	
   341                           ; 1 bytes @ 0x0
   342                           
   343  0070                     ?_spiReceiveWait:	
   344                           ; 1 bytes @ 0x0
   345                           
   346  0070                     ??_spiReceiveWait:	
   347                           ; 1 bytes @ 0x0
   348                           
   349  0070                     spiInit@sDataSample:	
   350                           ; 1 bytes @ 0x0
   351                           
   352  0070                     spiWrite@dat:	
   353                           ; 1 bytes @ 0x0
   354                           
   355                           
   356                           ; 1 bytes @ 0x0
   357  0070                     	ds	1
   358  0071                     spiInit@sClockIdle:
   359                           
   360                           ; 1 bytes @ 0x1
   361  0071                     	ds	1
   362  0072                     spiInit@sTransmitEdge:
   363                           
   364                           ; 1 bytes @ 0x2
   365  0072                     	ds	1
   366  0073                     ??_spiInit:
   367  0073                     spiInit@sType:	
   368                           ; 1 bytes @ 0x3
   369                           
   370                           
   371                           ; 1 bytes @ 0x3
   372  0073                     	ds	1
   373  0074                     ??_main:
   374                           
   375                           ; 1 bytes @ 0x4
   376  0074                     	ds	3
   377                           
   378                           	psect	maintext
   379  0741                     __pmaintext:	
   380 ;;
   381 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   382 ;;
   383 ;; *************** function _main *****************
   384 ;; Defined at:
   385 ;;		line 44 in file "master_main.c"
   386 ;; Parameters:    Size  Location     Type
   387 ;;		None
   388 ;; Auto vars:     Size  Location     Type
   389 ;;		None
   390 ;; Return value:  Size  Location     Type
   391 ;;                  1    wreg      void 
   392 ;; Registers used:
   393 ;;		wreg, status,2, status,0, pclath, cstack
   394 ;; Tracked objects:
   395 ;;		On entry : B00/0
   396 ;;		On exit  : 0/0
   397 ;;		Unchanged: 0/0
   398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   399 ;;      Params:         0       0       0       0       0
   400 ;;      Locals:         0       0       0       0       0
   401 ;;      Temps:          3       0       0       0       0
   402 ;;      Totals:         3       0       0       0       0
   403 ;;Total ram usage:        3 bytes
   404 ;; Hardware stack levels required when called:    2
   405 ;; This function calls:
   406 ;;		_spiInit
   407 ;;		_spiRead
   408 ;;		_spiWrite
   409 ;; This function is called by:
   410 ;;		Startup code after reset
   411 ;; This function uses a non-reentrant model
   412 ;;
   413                           
   414                           
   415                           ;psect for function _main
   416  0741                     _main:
   417  0741                     l750:	
   418                           ;incstack = 0
   419                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   420                           
   421                           
   422                           ;master_main.c: 50:     ANSEL = 0;
   423  0741  1683               	bsf	3,5	;RP0=1, select bank3
   424  0742  1703               	bsf	3,6	;RP1=1, select bank3
   425  0743  0188               	clrf	8	;volatile
   426                           
   427                           ;master_main.c: 51:     ANSELH = 0;
   428  0744  0189               	clrf	9	;volatile
   429                           
   430                           ;master_main.c: 52:     TRISA = 0b00000000;
   431  0745  1683               	bsf	3,5	;RP0=1, select bank1
   432  0746  1303               	bcf	3,6	;RP1=0, select bank1
   433  0747  0185               	clrf	5	;volatile
   434                           
   435                           ;master_main.c: 53:     TRISC = 0b00000000;
   436  0748  0187               	clrf	7	;volatile
   437  0749                     l752:
   438                           
   439                           ;master_main.c: 54:     TRISCbits.TRISC4 = 1;
   440  0749  1607               	bsf	7,4	;volatile
   441                           
   442                           ;master_main.c: 55:     PORTA = 0;
   443  074A  1283               	bcf	3,5	;RP0=0, select bank0
   444  074B  1303               	bcf	3,6	;RP1=0, select bank0
   445  074C  0185               	clrf	5	;volatile
   446                           
   447                           ;master_main.c: 56:     TRISD=0;
   448  074D  1683               	bsf	3,5	;RP0=1, select bank1
   449  074E  1303               	bcf	3,6	;RP1=0, select bank1
   450  074F  0188               	clrf	8	;volatile
   451                           
   452                           ;master_main.c: 57:     PORTD=0;
   453  0750  1283               	bcf	3,5	;RP0=0, select bank0
   454  0751  1303               	bcf	3,6	;RP1=0, select bank0
   455  0752  0188               	clrf	8	;volatile
   456  0753                     l754:
   457                           
   458                           ;master_main.c: 58:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_I
      +                          DLE_LOW, SPI_IDLE_2_ACTIVE);
   459  0753  01F0               	clrf	spiInit@sDataSample
   460  0754  01F1               	clrf	spiInit@sClockIdle
   461  0755  01F2               	clrf	spiInit@sTransmitEdge
   462  0756  3020               	movlw	32
   463  0757  120A  118A  272B  120A  118A  	fcall	_spiInit
   464  075C                     l756:
   465                           
   466                           ;master_main.c: 60:         PORTCbits.RC0 = 0;
   467  075C  1283               	bcf	3,5	;RP0=0, select bank0
   468  075D  1303               	bcf	3,6	;RP1=0, select bank0
   469  075E  1007               	bcf	7,0	;volatile
   470  075F                     l758:
   471                           
   472                           ;master_main.c: 61:         _delay((unsigned long)((1)*((8000000)/4000.0)));
   473  075F  3003               	movlw	3
   474  0760  00F5               	movwf	??_main+1
   475  0761  3097               	movlw	151
   476  0762  00F4               	movwf	??_main
   477  0763                     u47:
   478  0763  0BF4               	decfsz	??_main,f
   479  0764  2F63               	goto	u47
   480  0765  0BF5               	decfsz	??_main+1,f
   481  0766  2F63               	goto	u47
   482  0767  2F68               	nop2
   483  0768                     l760:
   484                           
   485                           ;master_main.c: 63:         spiWrite(1);
   486  0768  3001               	movlw	1
   487  0769  120A  118A  2715  120A  118A  	fcall	_spiWrite
   488  076E                     l762:
   489                           
   490                           ;master_main.c: 64:         potenciometro = spiRead();
   491  076E  120A  118A  2722  120A  118A  	fcall	_spiRead
   492  0773  00F4               	movwf	??_main
   493  0774  0874               	movf	??_main,w
   494  0775  00F9               	movwf	_potenciometro
   495  0776                     l764:
   496                           
   497                           ;master_main.c: 66:         _delay((unsigned long)((1)*((8000000)/4000.0)));
   498  0776  3003               	movlw	3
   499  0777  00F5               	movwf	??_main+1
   500  0778  3097               	movlw	151
   501  0779  00F4               	movwf	??_main
   502  077A                     u57:
   503  077A  0BF4               	decfsz	??_main,f
   504  077B  2F7A               	goto	u57
   505  077C  0BF5               	decfsz	??_main+1,f
   506  077D  2F7A               	goto	u57
   507  077E  2F7F               	nop2
   508  077F                     l766:
   509                           
   510                           ;master_main.c: 67:         PORTCbits.RC0 = 1;
   511  077F  1283               	bcf	3,5	;RP0=0, select bank0
   512  0780  1303               	bcf	3,6	;RP1=0, select bank0
   513  0781  1407               	bsf	7,0	;volatile
   514  0782                     l768:
   515                           
   516                           ;master_main.c: 69:         _delay((unsigned long)((250)*((8000000)/4000.0)));
   517  0782  3003               	movlw	3
   518  0783  00F6               	movwf	??_main+2
   519  0784  308A               	movlw	138
   520  0785  00F5               	movwf	??_main+1
   521  0786  3055               	movlw	85
   522  0787  00F4               	movwf	??_main
   523  0788                     u67:
   524  0788  0BF4               	decfsz	??_main,f
   525  0789  2F88               	goto	u67
   526  078A  0BF5               	decfsz	??_main+1,f
   527  078B  2F88               	goto	u67
   528  078C  0BF6               	decfsz	??_main+2,f
   529  078D  2F88               	goto	u67
   530  078E  2F8F               	nop2
   531  078F                     l770:
   532                           
   533                           ;master_main.c: 71:         PORTCbits.RC1 = 0;
   534  078F  1283               	bcf	3,5	;RP0=0, select bank0
   535  0790  1303               	bcf	3,6	;RP1=0, select bank0
   536  0791  1087               	bcf	7,1	;volatile
   537  0792                     l772:
   538                           
   539                           ;master_main.c: 72:         _delay((unsigned long)((1)*((8000000)/4000.0)));
   540  0792  3003               	movlw	3
   541  0793  00F5               	movwf	??_main+1
   542  0794  3097               	movlw	151
   543  0795  00F4               	movwf	??_main
   544  0796                     u77:
   545  0796  0BF4               	decfsz	??_main,f
   546  0797  2F96               	goto	u77
   547  0798  0BF5               	decfsz	??_main+1,f
   548  0799  2F96               	goto	u77
   549  079A  2F9B               	nop2
   550  079B                     l774:
   551                           
   552                           ;master_main.c: 74:         spiWrite(1);
   553  079B  3001               	movlw	1
   554  079C  120A  118A  2715  120A  118A  	fcall	_spiWrite
   555  07A1                     l776:
   556                           
   557                           ;master_main.c: 75:         contador = spiRead();
   558  07A1  120A  118A  2722  120A  118A  	fcall	_spiRead
   559  07A6  00F4               	movwf	??_main
   560  07A7  0874               	movf	??_main,w
   561  07A8  00F8               	movwf	_contador
   562  07A9                     l778:
   563                           
   564                           ;master_main.c: 77:         _delay((unsigned long)((1)*((8000000)/4000.0)));
   565  07A9  3003               	movlw	3
   566  07AA  00F5               	movwf	??_main+1
   567  07AB  3097               	movlw	151
   568  07AC  00F4               	movwf	??_main
   569  07AD                     u87:
   570  07AD  0BF4               	decfsz	??_main,f
   571  07AE  2FAD               	goto	u87
   572  07AF  0BF5               	decfsz	??_main+1,f
   573  07B0  2FAD               	goto	u87
   574  07B1  2FB2               	nop2
   575  07B2                     l780:
   576                           
   577                           ;master_main.c: 78:         PORTCbits.RC1 = 1;
   578  07B2  1283               	bcf	3,5	;RP0=0, select bank0
   579  07B3  1303               	bcf	3,6	;RP1=0, select bank0
   580  07B4  1487               	bsf	7,1	;volatile
   581  07B5                     l782:
   582                           
   583                           ;master_main.c: 80:         _delay((unsigned long)((250)*((8000000)/4000.0)));
   584  07B5  3003               	movlw	3
   585  07B6  00F6               	movwf	??_main+2
   586  07B7  308A               	movlw	138
   587  07B8  00F5               	movwf	??_main+1
   588  07B9  3055               	movlw	85
   589  07BA  00F4               	movwf	??_main
   590  07BB                     u97:
   591  07BB  0BF4               	decfsz	??_main,f
   592  07BC  2FBB               	goto	u97
   593  07BD  0BF5               	decfsz	??_main+1,f
   594  07BE  2FBB               	goto	u97
   595  07BF  0BF6               	decfsz	??_main+2,f
   596  07C0  2FBB               	goto	u97
   597  07C1  2FC2               	nop2
   598  07C2                     l784:
   599                           
   600                           ;master_main.c: 82:         PORTCbits.RC2 = 0;
   601  07C2  1283               	bcf	3,5	;RP0=0, select bank0
   602  07C3  1303               	bcf	3,6	;RP1=0, select bank0
   603  07C4  1107               	bcf	7,2	;volatile
   604  07C5                     l786:
   605                           
   606                           ;master_main.c: 83:         _delay((unsigned long)((1)*((8000000)/4000.0)));
   607  07C5  3003               	movlw	3
   608  07C6  00F5               	movwf	??_main+1
   609  07C7  3097               	movlw	151
   610  07C8  00F4               	movwf	??_main
   611  07C9                     u107:
   612  07C9  0BF4               	decfsz	??_main,f
   613  07CA  2FC9               	goto	u107
   614  07CB  0BF5               	decfsz	??_main+1,f
   615  07CC  2FC9               	goto	u107
   616  07CD  2FCE               	nop2
   617  07CE                     l788:
   618                           
   619                           ;master_main.c: 85:         spiWrite(1);
   620  07CE  3001               	movlw	1
   621  07CF  120A  118A  2715  120A  118A  	fcall	_spiWrite
   622  07D4                     l790:
   623                           
   624                           ;master_main.c: 86:         semaforo = spiRead();
   625  07D4  120A  118A  2722  120A  118A  	fcall	_spiRead
   626  07D9  00F4               	movwf	??_main
   627  07DA  0874               	movf	??_main,w
   628  07DB  00F7               	movwf	_semaforo
   629  07DC                     l792:
   630                           
   631                           ;master_main.c: 88:         _delay((unsigned long)((1)*((8000000)/4000.0)));
   632  07DC  3003               	movlw	3
   633  07DD  00F5               	movwf	??_main+1
   634  07DE  3097               	movlw	151
   635  07DF  00F4               	movwf	??_main
   636  07E0                     u117:
   637  07E0  0BF4               	decfsz	??_main,f
   638  07E1  2FE0               	goto	u117
   639  07E2  0BF5               	decfsz	??_main+1,f
   640  07E3  2FE0               	goto	u117
   641  07E4  2FE5               	nop2
   642  07E5                     l794:
   643                           
   644                           ;master_main.c: 89:         PORTCbits.RC2 = 1;
   645  07E5  1283               	bcf	3,5	;RP0=0, select bank0
   646  07E6  1303               	bcf	3,6	;RP1=0, select bank0
   647  07E7  1507               	bsf	7,2	;volatile
   648  07E8                     l796:
   649                           
   650                           ;master_main.c: 91:         _delay((unsigned long)((250)*((8000000)/4000.0)));
   651  07E8  3003               	movlw	3
   652  07E9  00F6               	movwf	??_main+2
   653  07EA  308A               	movlw	138
   654  07EB  00F5               	movwf	??_main+1
   655  07EC  3055               	movlw	85
   656  07ED  00F4               	movwf	??_main
   657  07EE                     u127:
   658  07EE  0BF4               	decfsz	??_main,f
   659  07EF  2FEE               	goto	u127
   660  07F0  0BF5               	decfsz	??_main+1,f
   661  07F1  2FEE               	goto	u127
   662  07F2  0BF6               	decfsz	??_main+2,f
   663  07F3  2FEE               	goto	u127
   664  07F4  2FF5               	nop2
   665  07F5  2F5C               	goto	l756
   666  07F6  120A  118A  2800   	ljmp	start
   667  07F9                     __end_of_main:
   668                           
   669                           	psect	text1
   670  0715                     __ptext1:	
   671 ;; *************** function _spiWrite *****************
   672 ;; Defined at:
   673 ;;		line 34 in file "SPI.c"
   674 ;; Parameters:    Size  Location     Type
   675 ;;  dat             1    wreg     unsigned char 
   676 ;; Auto vars:     Size  Location     Type
   677 ;;  dat             1    0[COMMON] unsigned char 
   678 ;; Return value:  Size  Location     Type
   679 ;;                  1    wreg      void 
   680 ;; Registers used:
   681 ;;		wreg
   682 ;; Tracked objects:
   683 ;;		On entry : 0/0
   684 ;;		On exit  : 0/0
   685 ;;		Unchanged: 0/0
   686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   687 ;;      Params:         0       0       0       0       0
   688 ;;      Locals:         1       0       0       0       0
   689 ;;      Temps:          0       0       0       0       0
   690 ;;      Totals:         1       0       0       0       0
   691 ;;Total ram usage:        1 bytes
   692 ;; Hardware stack levels used:    1
   693 ;; This function calls:
   694 ;;		Nothing
   695 ;; This function is called by:
   696 ;;		_main
   697 ;; This function uses a non-reentrant model
   698 ;;
   699                           
   700                           
   701                           ;psect for function _spiWrite
   702  0715                     _spiWrite:
   703                           
   704                           ;incstack = 0
   705                           ; Regs used in _spiWrite: [wreg]
   706                           ;spiWrite@dat stored from wreg
   707  0715  00F0               	movwf	spiWrite@dat
   708  0716                     l678:
   709                           
   710                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
   711  0716  0870               	movf	spiWrite@dat,w
   712  0717  1283               	bcf	3,5	;RP0=0, select bank0
   713  0718  1303               	bcf	3,6	;RP1=0, select bank0
   714  0719  0093               	movwf	19	;volatile
   715  071A                     l66:
   716  071A  0008               	return
   717  071B                     __end_of_spiWrite:
   718                           
   719                           	psect	text2
   720  0722                     __ptext2:	
   721 ;; *************** function _spiRead *****************
   722 ;; Defined at:
   723 ;;		line 47 in file "SPI.c"
   724 ;; Parameters:    Size  Location     Type
   725 ;;		None
   726 ;; Auto vars:     Size  Location     Type
   727 ;;		None
   728 ;; Return value:  Size  Location     Type
   729 ;;                  1    wreg      unsigned char 
   730 ;; Registers used:
   731 ;;		wreg, status,2, status,0, pclath, cstack
   732 ;; Tracked objects:
   733 ;;		On entry : 0/0
   734 ;;		On exit  : 0/0
   735 ;;		Unchanged: 0/0
   736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   737 ;;      Params:         0       0       0       0       0
   738 ;;      Locals:         0       0       0       0       0
   739 ;;      Temps:          0       0       0       0       0
   740 ;;      Totals:         0       0       0       0       0
   741 ;;Total ram usage:        0 bytes
   742 ;; Hardware stack levels used:    1
   743 ;; Hardware stack levels required when called:    1
   744 ;; This function calls:
   745 ;;		_spiReceiveWait
   746 ;; This function is called by:
   747 ;;		_main
   748 ;; This function uses a non-reentrant model
   749 ;;
   750                           
   751                           
   752                           ;psect for function _spiRead
   753  0722                     _spiRead:
   754  0722                     l680:	
   755                           ;incstack = 0
   756                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
   757                           
   758                           
   759                           ;SPI.c: 49:     spiReceiveWait();
   760  0722  120A  118A  271B  120A  118A  	fcall	_spiReceiveWait
   761  0727                     l682:
   762                           
   763                           ;SPI.c: 50:     return(SSPBUF);
   764  0727  1283               	bcf	3,5	;RP0=0, select bank0
   765  0728  1303               	bcf	3,6	;RP1=0, select bank0
   766  0729  0813               	movf	19,w	;volatile
   767  072A                     l74:
   768  072A  0008               	return
   769  072B                     __end_of_spiRead:
   770                           
   771                           	psect	text3
   772  071B                     __ptext3:	
   773 ;; *************** function _spiReceiveWait *****************
   774 ;; Defined at:
   775 ;;		line 29 in file "SPI.c"
   776 ;; Parameters:    Size  Location     Type
   777 ;;		None
   778 ;; Auto vars:     Size  Location     Type
   779 ;;		None
   780 ;; Return value:  Size  Location     Type
   781 ;;                  1    wreg      void 
   782 ;; Registers used:
   783 ;;		None
   784 ;; Tracked objects:
   785 ;;		On entry : 0/0
   786 ;;		On exit  : 0/0
   787 ;;		Unchanged: 0/0
   788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   789 ;;      Params:         0       0       0       0       0
   790 ;;      Locals:         0       0       0       0       0
   791 ;;      Temps:          0       0       0       0       0
   792 ;;      Totals:         0       0       0       0       0
   793 ;;Total ram usage:        0 bytes
   794 ;; Hardware stack levels used:    1
   795 ;; This function calls:
   796 ;;		Nothing
   797 ;; This function is called by:
   798 ;;		_spiRead
   799 ;; This function uses a non-reentrant model
   800 ;;
   801                           
   802                           
   803                           ;psect for function _spiReceiveWait
   804  071B                     _spiReceiveWait:
   805  071B                     l666:	
   806                           ;incstack = 0
   807                           ; Regs used in _spiReceiveWait: []
   808                           
   809  071B                     l60:	
   810                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
   811                           
   812  071B  1683               	bsf	3,5	;RP0=1, select bank1
   813  071C  1303               	bcf	3,6	;RP1=0, select bank1
   814  071D  1C14               	btfss	20,0	;volatile
   815  071E  2F20               	goto	u11
   816  071F  2F21               	goto	u10
   817  0720                     u11:
   818  0720  2F1B               	goto	l60
   819  0721                     u10:
   820  0721                     l63:
   821  0721  0008               	return
   822  0722                     __end_of_spiReceiveWait:
   823                           
   824                           	psect	text4
   825  072B                     __ptext4:	
   826 ;; *************** function _spiInit *****************
   827 ;; Defined at:
   828 ;;		line 12 in file "SPI.c"
   829 ;; Parameters:    Size  Location     Type
   830 ;;  sType           1    wreg     enum E1264
   831 ;;  sDataSample     1    0[COMMON] enum E1272
   832 ;;  sClockIdle      1    1[COMMON] enum E1276
   833 ;;  sTransmitEdg    1    2[COMMON] enum E1280
   834 ;; Auto vars:     Size  Location     Type
   835 ;;  sType           1    3[COMMON] enum E1264
   836 ;; Return value:  Size  Location     Type
   837 ;;                  1    wreg      void 
   838 ;; Registers used:
   839 ;;		wreg, status,2, status,0
   840 ;; Tracked objects:
   841 ;;		On entry : 0/0
   842 ;;		On exit  : 0/0
   843 ;;		Unchanged: 0/0
   844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   845 ;;      Params:         3       0       0       0       0
   846 ;;      Locals:         1       0       0       0       0
   847 ;;      Temps:          0       0       0       0       0
   848 ;;      Totals:         4       0       0       0       0
   849 ;;Total ram usage:        4 bytes
   850 ;; Hardware stack levels used:    1
   851 ;; This function calls:
   852 ;;		Nothing
   853 ;; This function is called by:
   854 ;;		_main
   855 ;; This function uses a non-reentrant model
   856 ;;
   857                           
   858                           
   859                           ;psect for function _spiInit
   860  072B                     _spiInit:
   861                           
   862                           ;incstack = 0
   863                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   864                           ;spiInit@sType stored from wreg
   865  072B  00F3               	movwf	spiInit@sType
   866  072C                     l740:
   867                           
   868                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   869  072C  1683               	bsf	3,5	;RP0=1, select bank1
   870  072D  1303               	bcf	3,6	;RP1=0, select bank1
   871  072E  1287               	bcf	7,5	;volatile
   872                           
   873                           ;SPI.c: 15:     if(sType & 0b00000100)
   874  072F  1D73               	btfss	spiInit@sType,2
   875  0730  2F32               	goto	u31
   876  0731  2F33               	goto	u30
   877  0732                     u31:
   878  0732  2F37               	goto	l746
   879  0733                     u30:
   880  0733                     l742:
   881                           
   882                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   883  0733  0872               	movf	spiInit@sTransmitEdge,w
   884  0734  0094               	movwf	20	;volatile
   885  0735                     l744:
   886                           
   887                           ;SPI.c: 18:         TRISC3 = 1;
   888  0735  1587               	bsf	7,3	;volatile
   889                           
   890                           ;SPI.c: 19:     }
   891  0736  2F3B               	goto	l56
   892  0737                     l746:
   893                           
   894                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   895  0737  0870               	movf	spiInit@sDataSample,w
   896  0738  0472               	iorwf	spiInit@sTransmitEdge,w
   897  0739  0094               	movwf	20	;volatile
   898  073A                     l748:
   899                           
   900                           ;SPI.c: 23:         TRISC3 = 0;
   901  073A  1187               	bcf	7,3	;volatile
   902  073B                     l56:	
   903                           ;SPI.c: 24:     }
   904                           
   905                           
   906                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   907  073B  0873               	movf	spiInit@sType,w
   908  073C  0471               	iorwf	spiInit@sClockIdle,w
   909  073D  1283               	bcf	3,5	;RP0=0, select bank0
   910  073E  1303               	bcf	3,6	;RP1=0, select bank0
   911  073F  0094               	movwf	20	;volatile
   912  0740                     l57:
   913  0740  0008               	return
   914  0741                     __end_of_spiInit:
   915  007E                     btemp	set	126	;btemp
   916  007E                     wtemp0	set	126
   917                           
   918                           	psect	config
   919                           
   920                           ;Config register CONFIG1 @ 0x2007
   921                           ;	Oscillator Selection bits
   922                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   923                           ;	Watchdog Timer Enable bit
   924                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   925                           ;	Power-up Timer Enable bit
   926                           ;	PWRTE = OFF, PWRT disabled
   927                           ;	RE3/MCLR pin function select bit
   928                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
   929                           ;	Code Protection bit
   930                           ;	CP = OFF, Program memory code protection is disabled
   931                           ;	Data Code Protection bit
   932                           ;	CPD = OFF, Data memory code protection is disabled
   933                           ;	Brown Out Reset Selection bits
   934                           ;	BOREN = OFF, BOR disabled
   935                           ;	Internal External Switchover bit
   936                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   937                           ;	Fail-Safe Clock Monitor Enabled bit
   938                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   939                           ;	Low Voltage Programming Enable bit
   940                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   941                           ;	In-Circuit Debugger Mode bit
   942                           ;	DEBUG = 0x1, unprogrammed default
   943  2007                     	org	8199
   944  2007  20F4               	dw	8436
   945                           
   946                           ;Config register CONFIG2 @ 0x2008
   947                           ;	Brown-out Reset Selection bit
   948                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   949                           ;	Flash Program Memory Self Write Enable bits
   950                           ;	WRT = OFF, Write protection off
   951  2008                     	org	8200
   952  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_spiInit

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     375
                                              4 COMMON     3     3      0
                            _spiInit
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       A      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Feb 24 22:08:51 2021

            _SSPSTATbits 0094                       l60 071B                       l63 0721  
                     l56 073B                       l57 0740                       l74 072A  
                     l66 071A                       u10 0721                       u11 0720  
                     u30 0733                       u31 0732                       u47 0763  
                     u57 077A                       u67 0788                       u77 0796  
                     u87 07AD                       u97 07BB                      l740 072C  
                    l742 0733                      l750 0741                      l744 0735  
                    l680 0722                      l760 0768                      l752 0749  
                    l746 0737                      l666 071B                      l682 0727  
                    l770 078F                      l762 076E                      l754 0753  
                    l748 073A                      l780 07B2                      l772 0792  
                    l764 0776                      l756 075C                      l678 0716  
                    l790 07D4                      l782 07B5                      l774 079B  
                    l766 077F                      l758 075F                      l792 07DC  
                    l784 07C2                      l776 07A1                      l768 0782  
                    l794 07E5                      l786 07C5                      l778 07A9  
                    l796 07E8                      l788 07CE                      u107 07C9  
                    u117 07E0                      u127 07EE                     _main 0741  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _ANSEL 0188                    _PORTA 0005                    _PORTD 0008  
                  _TRISA 0085                    _TRISC 0087                    _TRISD 0088  
        __end_of_spiInit 0741          __end_of_spiRead 072B                    status 0003  
                  wtemp0 007E          __initialization 07F9             __end_of_main 07F9  
                 ??_main 0074                   _ANSELH 0189                   _TRISC3 043B  
                 _TRISC5 043D                   _SSPCON 0014                   _SSPBUF 0013  
       __end_of_spiWrite 071B                ??_spiInit 0073                ??_spiRead 0070  
__end_of__initialization 07FC           __pcstackCOMMON 0070               __pmaintext 0741  
__size_of_spiReceiveWait 0007                  _SSPSTAT 0094                ?_spiWrite 0070  
                __ptext1 0715                  __ptext2 0722                  __ptext3 071B  
                __ptext4 072B                  _spiInit 072B                  _spiRead 0722  
   end_of_initialization 07FC               ??_spiWrite 0070                _PORTCbits 0007  
              _TRISCbits 0087              spiWrite@dat 0070           _spiReceiveWait 071B  
    start_initialization 07F9   __end_of_spiReceiveWait 0722              __pbssCOMMON 0077  
              ___latbits 0002          ?_spiReceiveWait 0070        __size_of_spiWrite 0006  
               ?_spiInit 0070                 ?_spiRead 0070     spiInit@sTransmitEdge 0072  
     spiInit@sDataSample 0070         __size_of_spiInit 0016         __size_of_spiRead 0009  
               _contador 0078            __size_of_main 00B8                 _semaforo 0077  
               _spiWrite 0715             spiInit@sType 0073        spiInit@sClockIdle 0071  
       ??_spiReceiveWait 0070            _potenciometro 0079  

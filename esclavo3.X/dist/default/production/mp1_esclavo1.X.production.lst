

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 23 23:46:43 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.20
    15                           ; Generated 12/02/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F887 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  0105                     	;# 
   112  0107                     	;# 
   113  0108                     	;# 
   114  0109                     	;# 
   115  010C                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  0185                     	;# 
   121  0187                     	;# 
   122  0188                     	;# 
   123  0189                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0000                     	;# 
   127  0001                     	;# 
   128  0002                     	;# 
   129  0003                     	;# 
   130  0004                     	;# 
   131  0005                     	;# 
   132  0006                     	;# 
   133  0007                     	;# 
   134  0008                     	;# 
   135  0009                     	;# 
   136  000A                     	;# 
   137  000B                     	;# 
   138  000C                     	;# 
   139  000D                     	;# 
   140  000E                     	;# 
   141  000E                     	;# 
   142  000F                     	;# 
   143  0010                     	;# 
   144  0011                     	;# 
   145  0012                     	;# 
   146  0013                     	;# 
   147  0014                     	;# 
   148  0015                     	;# 
   149  0015                     	;# 
   150  0016                     	;# 
   151  0017                     	;# 
   152  0018                     	;# 
   153  0019                     	;# 
   154  001A                     	;# 
   155  001B                     	;# 
   156  001B                     	;# 
   157  001C                     	;# 
   158  001D                     	;# 
   159  001E                     	;# 
   160  001F                     	;# 
   161  0081                     	;# 
   162  0085                     	;# 
   163  0086                     	;# 
   164  0087                     	;# 
   165  0088                     	;# 
   166  0089                     	;# 
   167  008C                     	;# 
   168  008D                     	;# 
   169  008E                     	;# 
   170  008F                     	;# 
   171  0090                     	;# 
   172  0091                     	;# 
   173  0092                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0094                     	;# 
   178  0095                     	;# 
   179  0096                     	;# 
   180  0097                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009A                     	;# 
   184  009B                     	;# 
   185  009C                     	;# 
   186  009D                     	;# 
   187  009E                     	;# 
   188  009F                     	;# 
   189  0105                     	;# 
   190  0107                     	;# 
   191  0108                     	;# 
   192  0109                     	;# 
   193  010C                     	;# 
   194  010C                     	;# 
   195  010D                     	;# 
   196  010E                     	;# 
   197  010F                     	;# 
   198  0185                     	;# 
   199  0187                     	;# 
   200  0188                     	;# 
   201  0189                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204  0000                     	;# 
   205  0001                     	;# 
   206  0002                     	;# 
   207  0003                     	;# 
   208  0004                     	;# 
   209  0005                     	;# 
   210  0006                     	;# 
   211  0007                     	;# 
   212  0008                     	;# 
   213  0009                     	;# 
   214  000A                     	;# 
   215  000B                     	;# 
   216  000C                     	;# 
   217  000D                     	;# 
   218  000E                     	;# 
   219  000E                     	;# 
   220  000F                     	;# 
   221  0010                     	;# 
   222  0011                     	;# 
   223  0012                     	;# 
   224  0013                     	;# 
   225  0014                     	;# 
   226  0015                     	;# 
   227  0015                     	;# 
   228  0016                     	;# 
   229  0017                     	;# 
   230  0018                     	;# 
   231  0019                     	;# 
   232  001A                     	;# 
   233  001B                     	;# 
   234  001B                     	;# 
   235  001C                     	;# 
   236  001D                     	;# 
   237  001E                     	;# 
   238  001F                     	;# 
   239  0081                     	;# 
   240  0085                     	;# 
   241  0086                     	;# 
   242  0087                     	;# 
   243  0088                     	;# 
   244  0089                     	;# 
   245  008C                     	;# 
   246  008D                     	;# 
   247  008E                     	;# 
   248  008F                     	;# 
   249  0090                     	;# 
   250  0091                     	;# 
   251  0092                     	;# 
   252  0093                     	;# 
   253  0093                     	;# 
   254  0093                     	;# 
   255  0094                     	;# 
   256  0095                     	;# 
   257  0096                     	;# 
   258  0097                     	;# 
   259  0098                     	;# 
   260  0099                     	;# 
   261  009A                     	;# 
   262  009B                     	;# 
   263  009C                     	;# 
   264  009D                     	;# 
   265  009E                     	;# 
   266  009F                     	;# 
   267  0105                     	;# 
   268  0107                     	;# 
   269  0108                     	;# 
   270  0109                     	;# 
   271  010C                     	;# 
   272  010C                     	;# 
   273  010D                     	;# 
   274  010E                     	;# 
   275  010F                     	;# 
   276  0185                     	;# 
   277  0187                     	;# 
   278  0188                     	;# 
   279  0189                     	;# 
   280  018C                     	;# 
   281  018D                     	;# 
   282  000B                     _INTCONbits	set	11
   283  000C                     _PIR1bits	set	12
   284  0007                     _PORTCbits	set	7
   285  001F                     _ADCON0bits	set	31
   286  0008                     _PORTD	set	8
   287  0005                     _PORTA	set	5
   288  008C                     _PIE1bits	set	140
   289  009E                     _ADRESL	set	158
   290  009F                     _ADCON1bits	set	159
   291  0088                     _TRISD	set	136
   292  0087                     _TRISC	set	135
   293  0085                     _TRISA	set	133
   294  008F                     _OSCCONbits	set	143
   295  0189                     _ANSELH	set	393
   296  0188                     _ANSEL	set	392
   297                           
   298                           	psect	cinit
   299  000F                     start_initialization:	
   300                           ; #config settings
   301                           
   302  000F                     __initialization:
   303                           
   304                           ; Clear objects allocated to COMMON
   305  000F  01F3               	clrf	__pbssCOMMON& (0+127)
   306  0010                     end_of_initialization:	
   307                           ;End of C runtime variable initialization code
   308                           
   309  0010                     __end_of__initialization:
   310  0010  0183               	clrf	3
   311  0011  120A  118A  2814   	ljmp	_main	;jump to C main() function
   312                           
   313                           	psect	bssCOMMON
   314  0073                     __pbssCOMMON:
   315  0073                     _ADCV:
   316  0073                     	ds	1
   317                           
   318                           	psect	cstackCOMMON
   319  0070                     __pcstackCOMMON:
   320  0070                     ?_ADCen:
   321  0070                     ?_main:	
   322                           ; 1 bytes @ 0x0
   323                           
   324  0070                     ?_ISR:	
   325                           ; 1 bytes @ 0x0
   326                           
   327  0070                     ??_ISR:	
   328                           ; 1 bytes @ 0x0
   329                           
   330                           
   331                           ; 1 bytes @ 0x0
   332  0070                     	ds	3
   333  0073                     ??_ADCen:
   334  0073                     ??_main:	
   335                           ; 1 bytes @ 0x3
   336                           
   337                           
   338                           	psect	maintext
   339  0014                     __pmaintext:	
   340                           ; 1 bytes @ 0x3
   341 ;;
   342 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   343 ;;
   344 ;; *************** function _main *****************
   345 ;; Defined at:
   346 ;;		line 37 in file "main.c"
   347 ;; Parameters:    Size  Location     Type
   348 ;;		None
   349 ;; Auto vars:     Size  Location     Type
   350 ;;		None
   351 ;; Return value:  Size  Location     Type
   352 ;;                  1    wreg      void 
   353 ;; Registers used:
   354 ;;		wreg, status,2, status,0, pclath, cstack
   355 ;; Tracked objects:
   356 ;;		On entry : B00/0
   357 ;;		On exit  : 0/0
   358 ;;		Unchanged: 0/0
   359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   360 ;;      Params:         0       0       0       0       0
   361 ;;      Locals:         0       0       0       0       0
   362 ;;      Temps:          0       0       0       0       0
   363 ;;      Totals:         0       0       0       0       0
   364 ;;Total ram usage:        0 bytes
   365 ;; Hardware stack levels required when called:    2
   366 ;; This function calls:
   367 ;;		_ADCen
   368 ;; This function is called by:
   369 ;;		Startup code after reset
   370 ;; This function uses a non-reentrant model
   371 ;;
   372                           
   373                           
   374                           ;psect for function _main
   375  0014                     _main:
   376  0014                     l669:	
   377                           ;incstack = 0
   378                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   379                           
   380                           
   381                           ;main.c: 38:     OSCCONbits.IRCF = 0b111;
   382  0014  3070               	movlw	112
   383  0015  1683               	bsf	3,5	;RP0=1, select bank1
   384  0016  1303               	bcf	3,6	;RP1=0, select bank1
   385  0017  048F               	iorwf	15,f	;volatile
   386  0018                     l671:
   387                           
   388                           ;main.c: 39:     OSCCONbits.OSTS = 0;
   389  0018  118F               	bcf	15,3	;volatile
   390  0019                     l673:
   391                           
   392                           ;main.c: 40:     OSCCONbits.HTS = 0;
   393  0019  110F               	bcf	15,2	;volatile
   394  001A                     l675:
   395                           
   396                           ;main.c: 41:     OSCCONbits.LTS = 0;
   397  001A  108F               	bcf	15,1	;volatile
   398  001B                     l677:
   399                           
   400                           ;main.c: 42:     OSCCONbits.SCS = 1;
   401  001B  140F               	bsf	15,0	;volatile
   402  001C                     l679:
   403                           
   404                           ;main.c: 43:     ANSEL = 0b00000001;
   405  001C  3001               	movlw	1
   406  001D  1683               	bsf	3,5	;RP0=1, select bank3
   407  001E  1703               	bsf	3,6	;RP1=1, select bank3
   408  001F  0088               	movwf	8	;volatile
   409  0020                     l681:
   410                           
   411                           ;main.c: 44:     ANSELH = 0;
   412  0020  0189               	clrf	9	;volatile
   413  0021                     l683:
   414                           
   415                           ;main.c: 45:     TRISA = 0b00000001;
   416  0021  3001               	movlw	1
   417  0022  1683               	bsf	3,5	;RP0=1, select bank1
   418  0023  1303               	bcf	3,6	;RP1=0, select bank1
   419  0024  0085               	movwf	5	;volatile
   420  0025                     l685:
   421                           
   422                           ;main.c: 46:     PORTA = 0;
   423  0025  1283               	bcf	3,5	;RP0=0, select bank0
   424  0026  1303               	bcf	3,6	;RP1=0, select bank0
   425  0027  0185               	clrf	5	;volatile
   426  0028                     l687:
   427                           
   428                           ;main.c: 47:     TRISC = 0;
   429  0028  1683               	bsf	3,5	;RP0=1, select bank1
   430  0029  1303               	bcf	3,6	;RP1=0, select bank1
   431  002A  0187               	clrf	7	;volatile
   432  002B                     l689:
   433                           
   434                           ;main.c: 48:     TRISD = 0;
   435  002B  0188               	clrf	8	;volatile
   436  002C                     l691:
   437                           
   438                           ;main.c: 49:     PORTD = 0;
   439  002C  1283               	bcf	3,5	;RP0=0, select bank0
   440  002D  1303               	bcf	3,6	;RP1=0, select bank0
   441  002E  0188               	clrf	8	;volatile
   442  002F                     l693:
   443                           
   444                           ;main.c: 51:         ADCen();
   445  002F  120A  118A  207A  120A  118A  	fcall	_ADCen
   446  0034                     l695:
   447                           
   448                           ;main.c: 52:         ADCON1bits.ADFM = 1;
   449  0034  1683               	bsf	3,5	;RP0=1, select bank1
   450  0035  1303               	bcf	3,6	;RP1=0, select bank1
   451  0036  179F               	bsf	31,7	;volatile
   452  0037                     l697:
   453                           
   454                           ;main.c: 53:         ADCON0bits.ADON = 1;
   455  0037  1283               	bcf	3,5	;RP0=0, select bank0
   456  0038  1303               	bcf	3,6	;RP1=0, select bank0
   457  0039  141F               	bsf	31,0	;volatile
   458  003A                     l699:
   459                           
   460                           ;main.c: 54:         ADCON0bits.GO = 1;
   461  003A  149F               	bsf	31,1	;volatile
   462  003B                     l36:	
   463                           ;main.c: 55:         while (ADCON0bits.GO);
   464                           
   465  003B  189F               	btfsc	31,1	;volatile
   466  003C  283E               	goto	u11
   467  003D  283F               	goto	u10
   468  003E                     u11:
   469  003E  283B               	goto	l36
   470  003F                     u10:
   471  003F                     l701:
   472                           
   473                           ;main.c: 56:         if (ADCV < 51) {
   474  003F  3033               	movlw	51
   475  0040  0273               	subwf	_ADCV,w
   476  0041  1803               	skipnc
   477  0042  2844               	goto	u21
   478  0043  2845               	goto	u20
   479  0044                     u21:
   480  0044  2848               	goto	l705
   481  0045                     u20:
   482  0045                     l703:
   483                           
   484                           ;main.c: 58:             PORTCbits.RC0 = 1;
   485  0045  1407               	bsf	7,0	;volatile
   486                           
   487                           ;main.c: 59:             PORTCbits.RC1 = 0;
   488  0046  1087               	bcf	7,1	;volatile
   489                           
   490                           ;main.c: 60:             PORTCbits.RC2 = 0;
   491  0047  1107               	bcf	7,2	;volatile
   492  0048                     l705:
   493                           
   494                           ;main.c: 63:         if (ADCV >= 51 && ADCV <= 73) {
   495  0048  3033               	movlw	51
   496  0049  0273               	subwf	_ADCV,w
   497  004A  1C03               	skipc
   498  004B  284D               	goto	u31
   499  004C  284E               	goto	u30
   500  004D                     u31:
   501  004D  2857               	goto	l711
   502  004E                     u30:
   503  004E                     l707:
   504  004E  304A               	movlw	74
   505  004F  0273               	subwf	_ADCV,w
   506  0050  1803               	skipnc
   507  0051  2853               	goto	u41
   508  0052  2854               	goto	u40
   509  0053                     u41:
   510  0053  2857               	goto	l711
   511  0054                     u40:
   512  0054                     l709:
   513                           
   514                           ;main.c: 65:             PORTCbits.RC0 = 0;
   515  0054  1007               	bcf	7,0	;volatile
   516                           
   517                           ;main.c: 66:             PORTCbits.RC1 = 1;
   518  0055  1487               	bsf	7,1	;volatile
   519                           
   520                           ;main.c: 67:             PORTCbits.RC2 = 0;
   521  0056  1107               	bcf	7,2	;volatile
   522  0057                     l711:
   523                           
   524                           ;main.c: 70:         if (ADCV > 73) {
   525  0057  304A               	movlw	74
   526  0058  0273               	subwf	_ADCV,w
   527  0059  1C03               	skipc
   528  005A  285C               	goto	u51
   529  005B  285D               	goto	u50
   530  005C                     u51:
   531  005C  282F               	goto	l693
   532  005D                     u50:
   533  005D                     l713:
   534                           
   535                           ;main.c: 72:             PORTCbits.RC0 = 0;
   536  005D  1007               	bcf	7,0	;volatile
   537                           
   538                           ;main.c: 73:             PORTCbits.RC1 = 0;
   539  005E  1087               	bcf	7,1	;volatile
   540                           
   541                           ;main.c: 74:             PORTCbits.RC2 = 1;
   542  005F  1507               	bsf	7,2	;volatile
   543  0060  282F               	goto	l693
   544  0061  120A  118A  280C   	ljmp	start
   545  0064                     __end_of_main:
   546                           
   547                           	psect	text1
   548  007A                     __ptext1:	
   549 ;; *************** function _ADCen *****************
   550 ;; Defined at:
   551 ;;		line 20 in file "ADC.c"
   552 ;; Parameters:    Size  Location     Type
   553 ;;		None
   554 ;; Auto vars:     Size  Location     Type
   555 ;;		None
   556 ;; Return value:  Size  Location     Type
   557 ;;                  1    wreg      void 
   558 ;; Registers used:
   559 ;;		wreg, status,2, status,0
   560 ;; Tracked objects:
   561 ;;		On entry : 0/0
   562 ;;		On exit  : 0/0
   563 ;;		Unchanged: 0/0
   564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   565 ;;      Params:         0       0       0       0       0
   566 ;;      Locals:         0       0       0       0       0
   567 ;;      Temps:          0       0       0       0       0
   568 ;;      Totals:         0       0       0       0       0
   569 ;;Total ram usage:        0 bytes
   570 ;; Hardware stack levels used:    1
   571 ;; Hardware stack levels required when called:    1
   572 ;; This function calls:
   573 ;;		Nothing
   574 ;; This function is called by:
   575 ;;		_main
   576 ;; This function uses a non-reentrant model
   577 ;;
   578                           
   579                           
   580                           ;psect for function _ADCen
   581  007A                     _ADCen:
   582  007A                     l657:	
   583                           ;incstack = 0
   584                           ; Regs used in _ADCen: [wreg+status,2+status,0]
   585                           
   586                           
   587                           ;ADC.c: 22:     INTCONbits.GIE = 1;
   588  007A  178B               	bsf	11,7	;volatile
   589                           
   590                           ;ADC.c: 23:     INTCONbits.PEIE = 1;
   591  007B  170B               	bsf	11,6	;volatile
   592                           
   593                           ;ADC.c: 24:     PIE1bits.ADIE = 1;
   594  007C  1683               	bsf	3,5	;RP0=1, select bank1
   595  007D  1303               	bcf	3,6	;RP1=0, select bank1
   596  007E  170C               	bsf	12,6	;volatile
   597                           
   598                           ;ADC.c: 25:     PIR1bits.ADIF = 0;
   599  007F  1283               	bcf	3,5	;RP0=0, select bank0
   600  0080  1303               	bcf	3,6	;RP1=0, select bank0
   601  0081  130C               	bcf	12,6	;volatile
   602  0082                     l659:
   603                           
   604                           ;ADC.c: 26:     ADCON0bits.ADCS = 01;
   605  0082  081F               	movf	31,w	;volatile
   606  0083  393F               	andlw	-193
   607  0084  3840               	iorlw	64
   608  0085  009F               	movwf	31	;volatile
   609                           
   610                           ;ADC.c: 27:     ADCON0bits.CHS = 0000;
   611  0086  30C3               	movlw	-61
   612  0087  059F               	andwf	31,f	;volatile
   613  0088                     l661:
   614                           
   615                           ;ADC.c: 28:     ADCON0bits.ADON = 1;
   616  0088  141F               	bsf	31,0	;volatile
   617  0089                     l663:
   618                           
   619                           ;ADC.c: 29:     ADCON1bits.ADFM = 0;
   620  0089  1683               	bsf	3,5	;RP0=1, select bank1
   621  008A  1303               	bcf	3,6	;RP1=0, select bank1
   622  008B  139F               	bcf	31,7	;volatile
   623  008C                     l665:
   624                           
   625                           ;ADC.c: 30:     ADCON1bits.VCFG1 = 0;
   626  008C  129F               	bcf	31,5	;volatile
   627  008D                     l667:
   628                           
   629                           ;ADC.c: 31:     ADCON1bits.VCFG0 = 0;
   630  008D  121F               	bcf	31,4	;volatile
   631  008E                     l65:
   632  008E  0008               	return
   633  008F                     __end_of_ADCen:
   634                           
   635                           	psect	text2
   636  0064                     __ptext2:	
   637 ;; *************** function _ISR *****************
   638 ;; Defined at:
   639 ;;		line 81 in file "main.c"
   640 ;; Parameters:    Size  Location     Type
   641 ;;		None
   642 ;; Auto vars:     Size  Location     Type
   643 ;;		None
   644 ;; Return value:  Size  Location     Type
   645 ;;                  1    wreg      void 
   646 ;; Registers used:
   647 ;;		wreg
   648 ;; Tracked objects:
   649 ;;		On entry : 0/0
   650 ;;		On exit  : 0/0
   651 ;;		Unchanged: 0/0
   652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   653 ;;      Params:         0       0       0       0       0
   654 ;;      Locals:         0       0       0       0       0
   655 ;;      Temps:          3       0       0       0       0
   656 ;;      Totals:         3       0       0       0       0
   657 ;;Total ram usage:        3 bytes
   658 ;; Hardware stack levels used:    1
   659 ;; This function calls:
   660 ;;		Nothing
   661 ;; This function is called by:
   662 ;;		Interrupt level 1
   663 ;; This function uses a non-reentrant model
   664 ;;
   665                           
   666                           
   667                           ;psect for function _ISR
   668  0064                     _ISR:
   669  0064                     i1l715:
   670                           
   671                           ;main.c: 82:     if (PIR1bits.ADIF == 1) {
   672  0064  1283               	bcf	3,5	;RP0=0, select bank0
   673  0065  1303               	bcf	3,6	;RP1=0, select bank0
   674  0066  1F0C               	btfss	12,6	;volatile
   675  0067  2869               	goto	u6_21
   676  0068  286A               	goto	u6_20
   677  0069                     u6_21:
   678  0069  2873               	goto	i1l50
   679  006A                     u6_20:
   680  006A                     i1l717:
   681                           
   682                           ;main.c: 83:         ADCV = ADRESL;
   683  006A  1683               	bsf	3,5	;RP0=1, select bank1
   684  006B  1303               	bcf	3,6	;RP1=0, select bank1
   685  006C  081E               	movf	30,w	;volatile
   686  006D  00F0               	movwf	??_ISR
   687  006E  0870               	movf	??_ISR,w
   688  006F  00F3               	movwf	_ADCV
   689  0070                     i1l719:
   690                           
   691                           ;main.c: 84:         PIR1bits.ADIF = 0;
   692  0070  1283               	bcf	3,5	;RP0=0, select bank0
   693  0071  1303               	bcf	3,6	;RP1=0, select bank0
   694  0072  130C               	bcf	12,6	;volatile
   695  0073                     i1l50:
   696  0073  0872               	movf	??_ISR+2,w
   697  0074  008A               	movwf	10
   698  0075  0E71               	swapf	??_ISR+1,w
   699  0076  0083               	movwf	3
   700  0077  0EFE               	swapf	btemp,f
   701  0078  0E7E               	swapf	btemp,w
   702  0079  0009               	retfie
   703  007A                     __end_of_ISR:
   704  007E                     btemp	set	126	;btemp
   705  007E                     wtemp0	set	126
   706                           
   707                           	psect	intentry
   708  0004                     __pintentry:	
   709                           ;incstack = 0
   710                           ; Regs used in _ISR: [wreg]
   711                           
   712  0004                     interrupt_function:
   713  007E                     saved_w	set	btemp
   714  0004  00FE               	movwf	btemp
   715  0005  0E03               	swapf	3,w
   716  0006  00F1               	movwf	??_ISR+1
   717  0007  080A               	movf	10,w
   718  0008  00F2               	movwf	??_ISR+2
   719  0009  120A  118A  2864   	ljmp	_ISR
   720                           
   721                           	psect	config
   722                           
   723                           ;Config register CONFIG1 @ 0x2007
   724                           ;	Oscillator Selection bits
   725                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   726                           ;	Watchdog Timer Enable bit
   727                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   728                           ;	Power-up Timer Enable bit
   729                           ;	PWRTE = OFF, PWRT disabled
   730                           ;	RE3/MCLR pin function select bit
   731                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
   732                           ;	Code Protection bit
   733                           ;	CP = OFF, Program memory code protection is disabled
   734                           ;	Data Code Protection bit
   735                           ;	CPD = OFF, Data memory code protection is disabled
   736                           ;	Brown Out Reset Selection bits
   737                           ;	BOREN = OFF, BOR disabled
   738                           ;	Internal External Switchover bit
   739                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   740                           ;	Fail-Safe Clock Monitor Enabled bit
   741                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   742                           ;	Low Voltage Programming Enable bit
   743                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   744                           ;	In-Circuit Debugger Mode bit
   745                           ;	DEBUG = 0x1, unprogrammed default
   746  2007                     	org	8199
   747  2007  20F4               	dw	8436
   748                           
   749                           ;Config register CONFIG2 @ 0x2008
   750                           ;	Brown-out Reset Selection bit
   751                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   752                           ;	Flash Program Memory Self Write Enable bits
   753                           ;	WRT = OFF, Write protection off
   754  2008                     	org	8200
   755  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                              _ADCen
 ---------------------------------------------------------------------------------
 (1) _ADCen                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCen

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       4       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       4      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 23 23:46:43 2021

                     l36 003B                       l65 008E                       u10 003F  
                     u11 003E                       u20 0045                       u21 0044  
                     u30 004E                       u31 004D                       u40 0054  
                     u41 0053                       u50 005D                       u51 005C  
                    l701 003F                      l711 0057                      l703 0045  
                    l713 005D                      l705 0048                      l707 004E  
                    l661 0088                      l709 0054                      l663 0089  
                    l671 0018                      l665 008C                      l657 007A  
                    l681 0020                      l673 0019                      l667 008D  
                    l659 0082                      l691 002C                      l683 0021  
                    l675 001A                      l693 002F                      l685 0025  
                    l677 001B                      l669 0014                      l695 0034  
                    l687 0028                      l679 001C                      l697 0037  
                    l689 002B                      l699 003A                      _ISR 0064  
                   ?_ISR 0070                     _ADCV 0073                     i1l50 0073  
                   u6_20 006A                     u6_21 0069                     _main 0014  
                   btemp 007E                     start 000C                    ??_ISR 0070  
                  ?_main 0070                    _ADCen 007A                    _ANSEL 0188  
                  i1l715 0064                    i1l717 006A                    i1l719 0070  
                  _PORTA 0005                    _PORTD 0008                    _TRISA 0085  
                  _TRISC 0087                    _TRISD 0088                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 0064                   ??_main 0073                   ?_ADCen 0070  
                 _ADRESL 009E                   _ANSELH 0189                   saved_w 007E  
__end_of__initialization 0010            __end_of_ADCen 008F           __pcstackCOMMON 0070  
                ??_ADCen 0073               __pmaintext 0014               __pintentry 0004  
                __ptext1 007A                  __ptext2 0064             __size_of_ISR 0016  
   end_of_initialization 0010                _PORTCbits 0007      start_initialization 000F  
            __end_of_ISR 007A              __pbssCOMMON 0073                ___latbits 0002  
         __size_of_ADCen 0015        interrupt_function 0004                 _PIE1bits 008C  
               _PIR1bits 000C               _ADCON0bits 001F               _ADCON1bits 009F  
          __size_of_main 0050               _INTCONbits 000B                 intlevel1 0000  
             _OSCCONbits 008F  

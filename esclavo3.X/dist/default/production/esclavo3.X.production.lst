

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Feb 24 21:07:45 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  0105                     	;# 
   273  0107                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0187                     	;# 
   283  0188                     	;# 
   284  0189                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287  0000                     	;# 
   288  0001                     	;# 
   289  0002                     	;# 
   290  0003                     	;# 
   291  0004                     	;# 
   292  0005                     	;# 
   293  0006                     	;# 
   294  0007                     	;# 
   295  0008                     	;# 
   296  0009                     	;# 
   297  000A                     	;# 
   298  000B                     	;# 
   299  000C                     	;# 
   300  000D                     	;# 
   301  000E                     	;# 
   302  000E                     	;# 
   303  000F                     	;# 
   304  0010                     	;# 
   305  0011                     	;# 
   306  0012                     	;# 
   307  0013                     	;# 
   308  0014                     	;# 
   309  0015                     	;# 
   310  0015                     	;# 
   311  0016                     	;# 
   312  0017                     	;# 
   313  0018                     	;# 
   314  0019                     	;# 
   315  001A                     	;# 
   316  001B                     	;# 
   317  001B                     	;# 
   318  001C                     	;# 
   319  001D                     	;# 
   320  001E                     	;# 
   321  001F                     	;# 
   322  0081                     	;# 
   323  0085                     	;# 
   324  0086                     	;# 
   325  0087                     	;# 
   326  0088                     	;# 
   327  0089                     	;# 
   328  008C                     	;# 
   329  008D                     	;# 
   330  008E                     	;# 
   331  008F                     	;# 
   332  0090                     	;# 
   333  0091                     	;# 
   334  0092                     	;# 
   335  0093                     	;# 
   336  0093                     	;# 
   337  0093                     	;# 
   338  0094                     	;# 
   339  0095                     	;# 
   340  0096                     	;# 
   341  0097                     	;# 
   342  0098                     	;# 
   343  0099                     	;# 
   344  009A                     	;# 
   345  009B                     	;# 
   346  009C                     	;# 
   347  009D                     	;# 
   348  009E                     	;# 
   349  009F                     	;# 
   350  0105                     	;# 
   351  0107                     	;# 
   352  0108                     	;# 
   353  0109                     	;# 
   354  010C                     	;# 
   355  010C                     	;# 
   356  010D                     	;# 
   357  010E                     	;# 
   358  010F                     	;# 
   359  0185                     	;# 
   360  0187                     	;# 
   361  0188                     	;# 
   362  0189                     	;# 
   363  018C                     	;# 
   364  018D                     	;# 
   365  0013                     _SSPBUF	set	19
   366  0014                     _SSPCON	set	20
   367  000B                     _INTCONbits	set	11
   368  000C                     _PIR1bits	set	12
   369  0007                     _PORTCbits	set	7
   370  001F                     _ADCON0bits	set	31
   371  0008                     _PORTD	set	8
   372  0005                     _PORTA	set	5
   373  0063                     _SSPIF	set	99
   374  0094                     _SSPSTATbits	set	148
   375  0094                     _SSPSTAT	set	148
   376  008C                     _PIE1bits	set	140
   377  009E                     _ADRESL	set	158
   378  009F                     _ADCON1bits	set	159
   379  0088                     _TRISD	set	136
   380  0087                     _TRISC	set	135
   381  0085                     _TRISA	set	133
   382  008F                     _OSCCONbits	set	143
   383  043B                     _TRISC3	set	1083
   384  043D                     _TRISC5	set	1085
   385  042D                     _TRISA5	set	1069
   386  0189                     _ANSELH	set	393
   387  0188                     _ANSEL	set	392
   388                           
   389                           	psect	cinit
   390  000F                     start_initialization:	
   391                           ; #config settings
   392                           
   393  000F                     __initialization:
   394                           
   395                           ; Clear objects allocated to COMMON
   396  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   397  0010                     end_of_initialization:	
   398                           ;End of C runtime variable initialization code
   399                           
   400  0010                     __end_of__initialization:
   401  0010  0183               	clrf	3
   402  0011  120A  118A  2814   	ljmp	_main	;jump to C main() function
   403                           
   404                           	psect	bssCOMMON
   405  0078                     __pbssCOMMON:
   406  0078                     _ADCV:
   407  0078                     	ds	1
   408                           
   409                           	psect	cstackCOMMON
   410  0070                     __pcstackCOMMON:
   411  0070                     ?_ADCen:
   412  0070                     ?_spiRead:	
   413                           ; 1 bytes @ 0x0
   414                           
   415  0070                     ??_spiRead:	
   416                           ; 1 bytes @ 0x0
   417                           
   418  0070                     ?_spiWrite:	
   419                           ; 1 bytes @ 0x0
   420                           
   421  0070                     ??_spiWrite:	
   422                           ; 1 bytes @ 0x0
   423                           
   424  0070                     ?_main:	
   425                           ; 1 bytes @ 0x0
   426                           
   427  0070                     ?_ISR:	
   428                           ; 1 bytes @ 0x0
   429                           
   430  0070                     ?_spiReceiveWait:	
   431                           ; 1 bytes @ 0x0
   432                           
   433  0070                     ??_spiReceiveWait:	
   434                           ; 1 bytes @ 0x0
   435                           
   436  0070                     spiWrite@dat:	
   437                           ; 1 bytes @ 0x0
   438                           
   439                           
   440                           ; 1 bytes @ 0x0
   441  0070                     	ds	1
   442  0071                     ??_ISR:
   443                           
   444                           ; 1 bytes @ 0x1
   445  0071                     	ds	3
   446  0074                     ?_spiInit:
   447  0074                     ??_ADCen:	
   448                           ; 1 bytes @ 0x4
   449                           
   450  0074                     spiInit@sDataSample:	
   451                           ; 1 bytes @ 0x4
   452                           
   453                           
   454                           ; 1 bytes @ 0x4
   455  0074                     	ds	1
   456  0075                     spiInit@sClockIdle:
   457                           
   458                           ; 1 bytes @ 0x5
   459  0075                     	ds	1
   460  0076                     spiInit@sTransmitEdge:
   461                           
   462                           ; 1 bytes @ 0x6
   463  0076                     	ds	1
   464  0077                     ??_spiInit:
   465  0077                     spiInit@sType:	
   466                           ; 1 bytes @ 0x7
   467                           
   468                           
   469                           ; 1 bytes @ 0x7
   470  0077                     	ds	1
   471                           
   472                           	psect	cstackBANK0
   473  0020                     __pcstackBANK0:
   474  0020                     ??_main:
   475                           
   476                           ; 1 bytes @ 0x0
   477  0020                     	ds	2
   478                           
   479                           	psect	maintext
   480  0014                     __pmaintext:	
   481 ;;
   482 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   483 ;;
   484 ;; *************** function _main *****************
   485 ;; Defined at:
   486 ;;		line 39 in file "main.c"
   487 ;; Parameters:    Size  Location     Type
   488 ;;		None
   489 ;; Auto vars:     Size  Location     Type
   490 ;;		None
   491 ;; Return value:  Size  Location     Type
   492 ;;                  1    wreg      void 
   493 ;; Registers used:
   494 ;;		wreg, status,2, status,0, pclath, cstack
   495 ;; Tracked objects:
   496 ;;		On entry : B00/0
   497 ;;		On exit  : 0/0
   498 ;;		Unchanged: 0/0
   499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   500 ;;      Params:         0       0       0       0       0
   501 ;;      Locals:         0       0       0       0       0
   502 ;;      Temps:          0       2       0       0       0
   503 ;;      Totals:         0       2       0       0       0
   504 ;;Total ram usage:        2 bytes
   505 ;; Hardware stack levels required when called:    4
   506 ;; This function calls:
   507 ;;		_ADCen
   508 ;;		_spiInit
   509 ;; This function is called by:
   510 ;;		Startup code after reset
   511 ;; This function uses a non-reentrant model
   512 ;;
   513                           
   514                           
   515                           ;psect for function _main
   516  0014                     _main:
   517  0014                     l872:	
   518                           ;incstack = 0
   519                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   520                           
   521                           
   522                           ;main.c: 40:     OSCCONbits.IRCF = 0b111;
   523  0014  3070               	movlw	112
   524  0015  1683               	bsf	3,5	;RP0=1, select bank1
   525  0016  1303               	bcf	3,6	;RP1=0, select bank1
   526  0017  048F               	iorwf	15,f	;volatile
   527  0018                     l874:
   528                           
   529                           ;main.c: 41:     OSCCONbits.OSTS = 0;
   530  0018  118F               	bcf	15,3	;volatile
   531  0019                     l876:
   532                           
   533                           ;main.c: 42:     OSCCONbits.HTS = 0;
   534  0019  110F               	bcf	15,2	;volatile
   535  001A                     l878:
   536                           
   537                           ;main.c: 43:     OSCCONbits.LTS = 0;
   538  001A  108F               	bcf	15,1	;volatile
   539  001B                     l880:
   540                           
   541                           ;main.c: 44:     OSCCONbits.SCS = 1;
   542  001B  140F               	bsf	15,0	;volatile
   543  001C                     l882:
   544                           
   545                           ;main.c: 45:     ANSEL = 0b00000001;
   546  001C  3001               	movlw	1
   547  001D  1683               	bsf	3,5	;RP0=1, select bank3
   548  001E  1703               	bsf	3,6	;RP1=1, select bank3
   549  001F  0088               	movwf	8	;volatile
   550  0020                     l884:
   551                           
   552                           ;main.c: 46:     ANSELH = 0;
   553  0020  0189               	clrf	9	;volatile
   554  0021                     l886:
   555                           
   556                           ;main.c: 47:     TRISA = 0b00000001;
   557  0021  3001               	movlw	1
   558  0022  1683               	bsf	3,5	;RP0=1, select bank1
   559  0023  1303               	bcf	3,6	;RP1=0, select bank1
   560  0024  0085               	movwf	5	;volatile
   561  0025                     l888:
   562                           
   563                           ;main.c: 48:     PORTA = 0;
   564  0025  1283               	bcf	3,5	;RP0=0, select bank0
   565  0026  1303               	bcf	3,6	;RP1=0, select bank0
   566  0027  0185               	clrf	5	;volatile
   567  0028                     l890:
   568                           
   569                           ;main.c: 49:     TRISC = 0;
   570  0028  1683               	bsf	3,5	;RP0=1, select bank1
   571  0029  1303               	bcf	3,6	;RP1=0, select bank1
   572  002A  0187               	clrf	7	;volatile
   573  002B                     l892:
   574                           
   575                           ;main.c: 50:     TRISD = 0;
   576  002B  0188               	clrf	8	;volatile
   577  002C                     l894:
   578                           
   579                           ;main.c: 51:     PORTD = 0;
   580  002C  1283               	bcf	3,5	;RP0=0, select bank0
   581  002D  1303               	bcf	3,6	;RP1=0, select bank0
   582  002E  0188               	clrf	8	;volatile
   583  002F                     l896:
   584                           
   585                           ;main.c: 52:     TRISC = 0b00010000;
   586  002F  3010               	movlw	16
   587  0030  1683               	bsf	3,5	;RP0=1, select bank1
   588  0031  1303               	bcf	3,6	;RP1=0, select bank1
   589  0032  0087               	movwf	7	;volatile
   590  0033                     l898:
   591                           
   592                           ;main.c: 53:     TRISA5 = 1;
   593  0033  1685               	bsf	5,5	;volatile
   594  0034                     l900:
   595                           
   596                           ;main.c: 54:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, SP
      +                          I_IDLE_2_ACTIVE);
   597  0034  01F4               	clrf	spiInit@sDataSample
   598  0035  01F5               	clrf	spiInit@sClockIdle
   599  0036  01F6               	clrf	spiInit@sTransmitEdge
   600  0037  3024               	movlw	36
   601  0038  120A  118A  20A8  120A  118A  	fcall	_spiInit
   602  003D                     l902:
   603                           
   604                           ;main.c: 57:         ADCen();
   605  003D  120A  118A  20BE  120A  118A  	fcall	_ADCen
   606  0042                     l904:
   607                           
   608                           ;main.c: 58:         ADCON1bits.ADFM = 1;
   609  0042  1683               	bsf	3,5	;RP0=1, select bank1
   610  0043  1303               	bcf	3,6	;RP1=0, select bank1
   611  0044  179F               	bsf	31,7	;volatile
   612  0045                     l906:
   613                           
   614                           ;main.c: 59:         ADCON0bits.ADON = 1;
   615  0045  1283               	bcf	3,5	;RP0=0, select bank0
   616  0046  1303               	bcf	3,6	;RP1=0, select bank0
   617  0047  141F               	bsf	31,0	;volatile
   618  0048                     l908:
   619                           
   620                           ;main.c: 60:         _delay((unsigned long)((15)*(8000000/4000.0)));
   621  0048  3027               	movlw	39
   622  0049  1283               	bcf	3,5	;RP0=0, select bank0
   623  004A  1303               	bcf	3,6	;RP1=0, select bank0
   624  004B  00A1               	movwf	??_main+1
   625  004C  30F4               	movlw	244
   626  004D  00A0               	movwf	??_main
   627  004E                     u217:
   628  004E  0BA0               	decfsz	??_main,f
   629  004F  284E               	goto	u217
   630  0050  0BA1               	decfsz	??_main+1,f
   631  0051  284E               	goto	u217
   632  0052  0000               	nop
   633  0053                     l910:
   634                           
   635                           ;main.c: 61:         ADCON0bits.GO = 1;
   636  0053  1283               	bcf	3,5	;RP0=0, select bank0
   637  0054  1303               	bcf	3,6	;RP1=0, select bank0
   638  0055  149F               	bsf	31,1	;volatile
   639  0056                     l48:	
   640                           ;main.c: 62:         while (ADCON0bits.GO);
   641                           
   642  0056  189F               	btfsc	31,1	;volatile
   643  0057  2859               	goto	u161
   644  0058  285A               	goto	u160
   645  0059                     u161:
   646  0059  2856               	goto	l48
   647  005A                     u160:
   648  005A                     l912:
   649                           
   650                           ;main.c: 63:         if (ADCV < 51) {
   651  005A  3033               	movlw	51
   652  005B  0278               	subwf	_ADCV,w
   653  005C  1803               	skipnc
   654  005D  285F               	goto	u171
   655  005E  2860               	goto	u170
   656  005F                     u171:
   657  005F  2863               	goto	l916
   658  0060                     u170:
   659  0060                     l914:
   660                           
   661                           ;main.c: 65:             PORTCbits.RC0 = 1;
   662  0060  1407               	bsf	7,0	;volatile
   663                           
   664                           ;main.c: 66:             PORTCbits.RC1 = 0;
   665  0061  1087               	bcf	7,1	;volatile
   666                           
   667                           ;main.c: 67:             PORTCbits.RC2 = 0;
   668  0062  1107               	bcf	7,2	;volatile
   669  0063                     l916:
   670                           
   671                           ;main.c: 70:         if (ADCV >= 51 && ADCV <= 73) {
   672  0063  3033               	movlw	51
   673  0064  0278               	subwf	_ADCV,w
   674  0065  1C03               	skipc
   675  0066  2868               	goto	u181
   676  0067  2869               	goto	u180
   677  0068                     u181:
   678  0068  2872               	goto	l922
   679  0069                     u180:
   680  0069                     l918:
   681  0069  304A               	movlw	74
   682  006A  0278               	subwf	_ADCV,w
   683  006B  1803               	skipnc
   684  006C  286E               	goto	u191
   685  006D  286F               	goto	u190
   686  006E                     u191:
   687  006E  2872               	goto	l922
   688  006F                     u190:
   689  006F                     l920:
   690                           
   691                           ;main.c: 72:             PORTCbits.RC0 = 0;
   692  006F  1007               	bcf	7,0	;volatile
   693                           
   694                           ;main.c: 73:             PORTCbits.RC1 = 1;
   695  0070  1487               	bsf	7,1	;volatile
   696                           
   697                           ;main.c: 74:             PORTCbits.RC2 = 0;
   698  0071  1107               	bcf	7,2	;volatile
   699  0072                     l922:
   700                           
   701                           ;main.c: 77:         if (ADCV > 73) {
   702  0072  304A               	movlw	74
   703  0073  0278               	subwf	_ADCV,w
   704  0074  1C03               	skipc
   705  0075  2877               	goto	u201
   706  0076  2878               	goto	u200
   707  0077                     u201:
   708  0077  283D               	goto	l902
   709  0078                     u200:
   710  0078                     l924:
   711                           
   712                           ;main.c: 79:             PORTCbits.RC0 = 0;
   713  0078  1007               	bcf	7,0	;volatile
   714                           
   715                           ;main.c: 80:             PORTCbits.RC1 = 0;
   716  0079  1087               	bcf	7,1	;volatile
   717                           
   718                           ;main.c: 81:             PORTCbits.RC2 = 1;
   719  007A  1507               	bsf	7,2	;volatile
   720  007B  283D               	goto	l902
   721  007C  120A  118A  280C   	ljmp	start
   722  007F                     __end_of_main:
   723                           
   724                           	psect	text1
   725  00A8                     __ptext1:	
   726 ;; *************** function _spiInit *****************
   727 ;; Defined at:
   728 ;;		line 12 in file "SPI.c"
   729 ;; Parameters:    Size  Location     Type
   730 ;;  sType           1    wreg     enum E1264
   731 ;;  sDataSample     1    4[COMMON] enum E1272
   732 ;;  sClockIdle      1    5[COMMON] enum E1276
   733 ;;  sTransmitEdg    1    6[COMMON] enum E1280
   734 ;; Auto vars:     Size  Location     Type
   735 ;;  sType           1    7[COMMON] enum E1264
   736 ;; Return value:  Size  Location     Type
   737 ;;                  1    wreg      void 
   738 ;; Registers used:
   739 ;;		wreg, status,2, status,0
   740 ;; Tracked objects:
   741 ;;		On entry : 0/0
   742 ;;		On exit  : 0/0
   743 ;;		Unchanged: 0/0
   744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   745 ;;      Params:         3       0       0       0       0
   746 ;;      Locals:         1       0       0       0       0
   747 ;;      Temps:          0       0       0       0       0
   748 ;;      Totals:         4       0       0       0       0
   749 ;;Total ram usage:        4 bytes
   750 ;; Hardware stack levels used:    1
   751 ;; Hardware stack levels required when called:    3
   752 ;; This function calls:
   753 ;;		Nothing
   754 ;; This function is called by:
   755 ;;		_main
   756 ;; This function uses a non-reentrant model
   757 ;;
   758                           
   759                           
   760                           ;psect for function _spiInit
   761  00A8                     _spiInit:
   762                           
   763                           ;incstack = 0
   764                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   765                           ;spiInit@sType stored from wreg
   766  00A8  00F7               	movwf	spiInit@sType
   767  00A9                     l808:
   768                           
   769                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   770  00A9  1683               	bsf	3,5	;RP0=1, select bank1
   771  00AA  1303               	bcf	3,6	;RP1=0, select bank1
   772  00AB  1287               	bcf	7,5	;volatile
   773                           
   774                           ;SPI.c: 15:     if(sType & 0b00000100)
   775  00AC  1D77               	btfss	spiInit@sType,2
   776  00AD  28AF               	goto	u101
   777  00AE  28B0               	goto	u100
   778  00AF                     u101:
   779  00AF  28B4               	goto	l814
   780  00B0                     u100:
   781  00B0                     l810:
   782                           
   783                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   784  00B0  0876               	movf	spiInit@sTransmitEdge,w
   785  00B1  0094               	movwf	20	;volatile
   786  00B2                     l812:
   787                           
   788                           ;SPI.c: 18:         TRISC3 = 1;
   789  00B2  1587               	bsf	7,3	;volatile
   790                           
   791                           ;SPI.c: 19:     }
   792  00B3  28B8               	goto	l94
   793  00B4                     l814:
   794                           
   795                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   796  00B4  0874               	movf	spiInit@sDataSample,w
   797  00B5  0476               	iorwf	spiInit@sTransmitEdge,w
   798  00B6  0094               	movwf	20	;volatile
   799  00B7                     l816:
   800                           
   801                           ;SPI.c: 23:         TRISC3 = 0;
   802  00B7  1187               	bcf	7,3	;volatile
   803  00B8                     l94:	
   804                           ;SPI.c: 24:     }
   805                           
   806                           
   807                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   808  00B8  0877               	movf	spiInit@sType,w
   809  00B9  0475               	iorwf	spiInit@sClockIdle,w
   810  00BA  1283               	bcf	3,5	;RP0=0, select bank0
   811  00BB  1303               	bcf	3,6	;RP1=0, select bank0
   812  00BC  0094               	movwf	20	;volatile
   813  00BD                     l95:
   814  00BD  0008               	return
   815  00BE                     __end_of_spiInit:
   816                           
   817                           	psect	text2
   818  00BE                     __ptext2:	
   819 ;; *************** function _ADCen *****************
   820 ;; Defined at:
   821 ;;		line 20 in file "ADC.c"
   822 ;; Parameters:    Size  Location     Type
   823 ;;		None
   824 ;; Auto vars:     Size  Location     Type
   825 ;;		None
   826 ;; Return value:  Size  Location     Type
   827 ;;                  1    wreg      void 
   828 ;; Registers used:
   829 ;;		wreg, status,2, status,0
   830 ;; Tracked objects:
   831 ;;		On entry : 0/0
   832 ;;		On exit  : 0/0
   833 ;;		Unchanged: 0/0
   834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   835 ;;      Params:         0       0       0       0       0
   836 ;;      Locals:         0       0       0       0       0
   837 ;;      Temps:          0       0       0       0       0
   838 ;;      Totals:         0       0       0       0       0
   839 ;;Total ram usage:        0 bytes
   840 ;; Hardware stack levels used:    1
   841 ;; Hardware stack levels required when called:    3
   842 ;; This function calls:
   843 ;;		Nothing
   844 ;; This function is called by:
   845 ;;		_main
   846 ;; This function uses a non-reentrant model
   847 ;;
   848                           
   849                           
   850                           ;psect for function _ADCen
   851  00BE                     _ADCen:
   852  00BE                     l716:	
   853                           ;incstack = 0
   854                           ; Regs used in _ADCen: [wreg+status,2+status,0]
   855                           
   856                           
   857                           ;ADC.c: 22:     INTCONbits.GIE = 1;
   858  00BE  178B               	bsf	11,7	;volatile
   859                           
   860                           ;ADC.c: 23:     INTCONbits.PEIE = 1;
   861  00BF  170B               	bsf	11,6	;volatile
   862                           
   863                           ;ADC.c: 24:     PIE1bits.ADIE = 1;
   864  00C0  1683               	bsf	3,5	;RP0=1, select bank1
   865  00C1  1303               	bcf	3,6	;RP1=0, select bank1
   866  00C2  170C               	bsf	12,6	;volatile
   867                           
   868                           ;ADC.c: 25:     PIR1bits.ADIF = 0;
   869  00C3  1283               	bcf	3,5	;RP0=0, select bank0
   870  00C4  1303               	bcf	3,6	;RP1=0, select bank0
   871  00C5  130C               	bcf	12,6	;volatile
   872  00C6                     l718:
   873                           
   874                           ;ADC.c: 26:     ADCON0bits.ADCS = 01;
   875  00C6  081F               	movf	31,w	;volatile
   876  00C7  393F               	andlw	-193
   877  00C8  3840               	iorlw	64
   878  00C9  009F               	movwf	31	;volatile
   879                           
   880                           ;ADC.c: 27:     ADCON0bits.CHS = 0000;
   881  00CA  30C3               	movlw	-61
   882  00CB  059F               	andwf	31,f	;volatile
   883  00CC                     l720:
   884                           
   885                           ;ADC.c: 28:     ADCON0bits.ADON = 1;
   886  00CC  141F               	bsf	31,0	;volatile
   887  00CD                     l722:
   888                           
   889                           ;ADC.c: 29:     ADCON1bits.ADFM = 0;
   890  00CD  1683               	bsf	3,5	;RP0=1, select bank1
   891  00CE  1303               	bcf	3,6	;RP1=0, select bank1
   892  00CF  139F               	bcf	31,7	;volatile
   893  00D0                     l724:
   894                           
   895                           ;ADC.c: 30:     ADCON1bits.VCFG1 = 0;
   896  00D0  129F               	bcf	31,5	;volatile
   897  00D1                     l726:
   898                           
   899                           ;ADC.c: 31:     ADCON1bits.VCFG0 = 0;
   900  00D1  121F               	bcf	31,4	;volatile
   901  00D2                     l78:
   902  00D2  0008               	return
   903  00D3                     __end_of_ADCen:
   904                           
   905                           	psect	text3
   906  007F                     __ptext3:	
   907 ;; *************** function _ISR *****************
   908 ;; Defined at:
   909 ;;		line 88 in file "main.c"
   910 ;; Parameters:    Size  Location     Type
   911 ;;		None
   912 ;; Auto vars:     Size  Location     Type
   913 ;;		None
   914 ;; Return value:  Size  Location     Type
   915 ;;                  1    wreg      void 
   916 ;; Registers used:
   917 ;;		wreg, status,2, status,0, pclath, cstack
   918 ;; Tracked objects:
   919 ;;		On entry : 0/0
   920 ;;		On exit  : 0/0
   921 ;;		Unchanged: 0/0
   922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   923 ;;      Params:         0       0       0       0       0
   924 ;;      Locals:         0       0       0       0       0
   925 ;;      Temps:          3       0       0       0       0
   926 ;;      Totals:         3       0       0       0       0
   927 ;;Total ram usage:        3 bytes
   928 ;; Hardware stack levels used:    1
   929 ;; Hardware stack levels required when called:    2
   930 ;; This function calls:
   931 ;;		_spiRead
   932 ;;		_spiWrite
   933 ;; This function is called by:
   934 ;;		Interrupt level 1
   935 ;; This function uses a non-reentrant model
   936 ;;
   937                           
   938                           
   939                           ;psect for function _ISR
   940  007F                     _ISR:
   941  007F                     i1l790:
   942                           
   943                           ;main.c: 89:     if (PIR1bits.ADIF == 1) {
   944  007F  1283               	bcf	3,5	;RP0=0, select bank0
   945  0080  1303               	bcf	3,6	;RP1=0, select bank0
   946  0081  1F0C               	btfss	12,6	;volatile
   947  0082  2884               	goto	u8_21
   948  0083  2885               	goto	u8_20
   949  0084                     u8_21:
   950  0084  288F               	goto	i1l61
   951  0085                     u8_20:
   952  0085                     i1l792:
   953                           
   954                           ;main.c: 90:         ADCV = ADRESL;
   955  0085  1683               	bsf	3,5	;RP0=1, select bank1
   956  0086  1303               	bcf	3,6	;RP1=0, select bank1
   957  0087  081E               	movf	30,w	;volatile
   958  0088  00F1               	movwf	??_ISR
   959  0089  0871               	movf	??_ISR,w
   960  008A  00F8               	movwf	_ADCV
   961  008B                     i1l794:
   962                           
   963                           ;main.c: 91:         PIR1bits.ADIF = 0;
   964  008B  1283               	bcf	3,5	;RP0=0, select bank0
   965  008C  1303               	bcf	3,6	;RP1=0, select bank0
   966  008D  130C               	bcf	12,6	;volatile
   967  008E  28A1               	goto	i1l62
   968  008F                     i1l61:	
   969                           ;main.c: 93:     }
   970                           
   971                           
   972                           ;main.c: 95:     if(SSPIF == 1){
   973  008F  1D8C               	btfss	12,3	;volatile
   974  0090  2892               	goto	u9_21
   975  0091  2893               	goto	u9_20
   976  0092                     u9_21:
   977  0092  28A1               	goto	i1l62
   978  0093                     u9_20:
   979  0093                     i1l798:
   980                           
   981                           ;main.c: 96:         spiRead();
   982  0093  120A  118A  20D3  120A  118A  	fcall	_spiRead
   983                           
   984                           ;main.c: 97:         spiWrite(ADCV);
   985  0098  0878               	movf	_ADCV,w
   986  0099  120A  118A  20E3  120A  118A  	fcall	_spiWrite
   987  009E                     i1l800:
   988                           
   989                           ;main.c: 98:         SSPIF = 0;
   990  009E  1283               	bcf	3,5	;RP0=0, select bank0
   991  009F  1303               	bcf	3,6	;RP1=0, select bank0
   992  00A0  118C               	bcf	12,3	;volatile
   993  00A1                     i1l62:
   994  00A1  0873               	movf	??_ISR+2,w
   995  00A2  008A               	movwf	10
   996  00A3  0E72               	swapf	??_ISR+1,w
   997  00A4  0083               	movwf	3
   998  00A5  0EFE               	swapf	btemp,f
   999  00A6  0E7E               	swapf	btemp,w
  1000  00A7  0009               	retfie
  1001  00A8                     __end_of_ISR:
  1002                           
  1003                           	psect	intentry
  1004  0004                     __pintentry:	
  1005                           ;incstack = 0
  1006                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  1007                           
  1008  0004                     interrupt_function:
  1009  007E                     saved_w	set	btemp
  1010  0004  00FE               	movwf	btemp
  1011  0005  0E03               	swapf	3,w
  1012  0006  00F2               	movwf	??_ISR+1
  1013  0007  080A               	movf	10,w
  1014  0008  00F3               	movwf	??_ISR+2
  1015  0009  120A  118A  287F   	ljmp	_ISR
  1016                           
  1017                           	psect	text4
  1018  00E3                     __ptext4:	
  1019 ;; *************** function _spiWrite *****************
  1020 ;; Defined at:
  1021 ;;		line 34 in file "SPI.c"
  1022 ;; Parameters:    Size  Location     Type
  1023 ;;  dat             1    wreg     unsigned char 
  1024 ;; Auto vars:     Size  Location     Type
  1025 ;;  dat             1    0[COMMON] unsigned char 
  1026 ;; Return value:  Size  Location     Type
  1027 ;;                  1    wreg      void 
  1028 ;; Registers used:
  1029 ;;		wreg
  1030 ;; Tracked objects:
  1031 ;;		On entry : 0/0
  1032 ;;		On exit  : 0/0
  1033 ;;		Unchanged: 0/0
  1034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1035 ;;      Params:         0       0       0       0       0
  1036 ;;      Locals:         1       0       0       0       0
  1037 ;;      Temps:          0       0       0       0       0
  1038 ;;      Totals:         1       0       0       0       0
  1039 ;;Total ram usage:        1 bytes
  1040 ;; Hardware stack levels used:    1
  1041 ;; This function calls:
  1042 ;;		Nothing
  1043 ;; This function is called by:
  1044 ;;		_ISR
  1045 ;; This function uses a non-reentrant model
  1046 ;;
  1047                           
  1048                           
  1049                           ;psect for function _spiWrite
  1050  00E3                     _spiWrite:
  1051                           
  1052                           ;incstack = 0
  1053                           ; Regs used in _spiWrite: [wreg]
  1054                           ;spiWrite@dat stored from wreg
  1055  00E3  00F0               	movwf	spiWrite@dat
  1056  00E4                     i1l734:
  1057                           
  1058                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  1059  00E4  0870               	movf	spiWrite@dat,w
  1060  00E5  1283               	bcf	3,5	;RP0=0, select bank0
  1061  00E6  1303               	bcf	3,6	;RP1=0, select bank0
  1062  00E7  0093               	movwf	19	;volatile
  1063  00E8                     i1l104:
  1064  00E8  0008               	return
  1065  00E9                     __end_of_spiWrite:
  1066                           
  1067                           	psect	text5
  1068  00D3                     __ptext5:	
  1069 ;; *************** function _spiRead *****************
  1070 ;; Defined at:
  1071 ;;		line 47 in file "SPI.c"
  1072 ;; Parameters:    Size  Location     Type
  1073 ;;		None
  1074 ;; Auto vars:     Size  Location     Type
  1075 ;;		None
  1076 ;; Return value:  Size  Location     Type
  1077 ;;                  1    wreg      unsigned char 
  1078 ;; Registers used:
  1079 ;;		wreg, status,2, status,0, pclath, cstack
  1080 ;; Tracked objects:
  1081 ;;		On entry : 0/0
  1082 ;;		On exit  : 0/0
  1083 ;;		Unchanged: 0/0
  1084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1085 ;;      Params:         0       0       0       0       0
  1086 ;;      Locals:         0       0       0       0       0
  1087 ;;      Temps:          0       0       0       0       0
  1088 ;;      Totals:         0       0       0       0       0
  1089 ;;Total ram usage:        0 bytes
  1090 ;; Hardware stack levels used:    1
  1091 ;; Hardware stack levels required when called:    1
  1092 ;; This function calls:
  1093 ;;		_spiReceiveWait
  1094 ;; This function is called by:
  1095 ;;		_ISR
  1096 ;; This function uses a non-reentrant model
  1097 ;;
  1098                           
  1099                           
  1100                           ;psect for function _spiRead
  1101  00D3                     _spiRead:
  1102  00D3                     i1l728:	
  1103                           ;incstack = 0
  1104                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1105                           
  1106                           
  1107                           ;SPI.c: 49:     spiReceiveWait();
  1108  00D3  120A  118A  20DC  120A  118A  	fcall	_spiReceiveWait
  1109  00D8                     i1l730:
  1110                           
  1111                           ;SPI.c: 50:     return(SSPBUF);;	Return value of _spiRead is never used
  1112  00D8  1283               	bcf	3,5	;RP0=0, select bank0
  1113  00D9  1303               	bcf	3,6	;RP1=0, select bank0
  1114  00DA  0813               	movf	19,w	;volatile
  1115  00DB                     i1l112:
  1116  00DB  0008               	return
  1117  00DC                     __end_of_spiRead:
  1118                           
  1119                           	psect	text6
  1120  00DC                     __ptext6:	
  1121 ;; *************** function _spiReceiveWait *****************
  1122 ;; Defined at:
  1123 ;;		line 29 in file "SPI.c"
  1124 ;; Parameters:    Size  Location     Type
  1125 ;;		None
  1126 ;; Auto vars:     Size  Location     Type
  1127 ;;		None
  1128 ;; Return value:  Size  Location     Type
  1129 ;;                  1    wreg      void 
  1130 ;; Registers used:
  1131 ;;		None
  1132 ;; Tracked objects:
  1133 ;;		On entry : 0/0
  1134 ;;		On exit  : 0/0
  1135 ;;		Unchanged: 0/0
  1136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1137 ;;      Params:         0       0       0       0       0
  1138 ;;      Locals:         0       0       0       0       0
  1139 ;;      Temps:          0       0       0       0       0
  1140 ;;      Totals:         0       0       0       0       0
  1141 ;;Total ram usage:        0 bytes
  1142 ;; Hardware stack levels used:    1
  1143 ;; This function calls:
  1144 ;;		Nothing
  1145 ;; This function is called by:
  1146 ;;		_spiRead
  1147 ;; This function uses a non-reentrant model
  1148 ;;
  1149                           
  1150                           
  1151                           ;psect for function _spiReceiveWait
  1152  00DC                     _spiReceiveWait:
  1153  00DC                     i1l704:	
  1154                           ;incstack = 0
  1155                           ; Regs used in _spiReceiveWait: []
  1156                           
  1157  00DC                     i1l98:	
  1158                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  1159                           
  1160  00DC  1683               	bsf	3,5	;RP0=1, select bank1
  1161  00DD  1303               	bcf	3,6	;RP1=0, select bank1
  1162  00DE  1C14               	btfss	20,0	;volatile
  1163  00DF  28E1               	goto	u1_21
  1164  00E0  28E2               	goto	u1_20
  1165  00E1                     u1_21:
  1166  00E1  28DC               	goto	i1l98
  1167  00E2                     u1_20:
  1168  00E2                     i1l101:
  1169  00E2  0008               	return
  1170  00E3                     __end_of_spiReceiveWait:
  1171  007E                     btemp	set	126	;btemp
  1172  007E                     wtemp0	set	126
  1173                           
  1174                           	psect	config
  1175                           
  1176                           ;Config register CONFIG1 @ 0x2007
  1177                           ;	Oscillator Selection bits
  1178                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1179                           ;	Watchdog Timer Enable bit
  1180                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1181                           ;	Power-up Timer Enable bit
  1182                           ;	PWRTE = OFF, PWRT disabled
  1183                           ;	RE3/MCLR pin function select bit
  1184                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1185                           ;	Code Protection bit
  1186                           ;	CP = OFF, Program memory code protection is disabled
  1187                           ;	Data Code Protection bit
  1188                           ;	CPD = OFF, Data memory code protection is disabled
  1189                           ;	Brown Out Reset Selection bits
  1190                           ;	BOREN = OFF, BOR disabled
  1191                           ;	Internal External Switchover bit
  1192                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1193                           ;	Fail-Safe Clock Monitor Enabled bit
  1194                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1195                           ;	Low Voltage Programming Enable bit
  1196                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1197                           ;	In-Circuit Debugger Mode bit
  1198                           ;	DEBUG = 0x1, unprogrammed default
  1199  2007                     	org	8199
  1200  2007  20F4               	dw	8436
  1201                           
  1202                           ;Config register CONFIG2 @ 0x2008
  1203                           ;	Brown-out Reset Selection bit
  1204                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1205                           ;	Flash Program Memory Self Write Enable bits
  1206                           ;	WRT = OFF, Write protection off
  1207  2008                     	org	8200
  1208  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       9
    BANK0            80      2       2
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_spiInit

Critical Paths under _ISR in COMMON

    _ISR->_spiWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     360
                                              0 BANK0      2     2      0
                              _ADCen
                            _spiInit
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     360
                                              4 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _ADCen                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0      15
                                              1 COMMON     3     3      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (3) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (4) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCen
   _spiInit

 _ISR (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2       2       5        2.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       B      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Feb 24 21:07:45 2021

            _SSPSTATbits 0094                       l48 0056                       l78 00D2  
                     l94 00B8                       l95 00BD                      l720 00CC  
                    l722 00CD                      l810 00B0                      l724 00D0  
                    l716 00BE                      l812 00B2                      l900 0034  
                    l726 00D1                      l718 00C6                      l814 00B4  
                    l910 0053                      l902 003D                      l816 00B7  
                    l808 00A9                      l920 006F                      l912 005A  
                    l904 0042                      l922 0072                      l914 0060  
                    l906 0045                      l924 0078                      l916 0063  
                    l908 0048                      l918 0069                      l880 001B  
                    l872 0014                      l890 0028                      l882 001C  
                    l874 0018                      l892 002B                      l884 0020  
                    l876 0019                      l894 002C                      l886 0021  
                    l878 001A                      l896 002F                      l888 0025  
                    l898 0033                      u100 00B0                      u101 00AF  
                    u200 0078                      u201 0077                      u160 005A  
                    u161 0059                      u217 004E                      u170 0060  
                    u171 005F                      u180 0069                      u181 0068  
                    u190 006F                      u191 006E                      _ISR 007F  
                   ?_ISR 0070                     _ADCV 0078                     i1l61 008F  
                   i1l62 00A1                     i1l98 00DC                     u1_20 00E2  
                   u1_21 00E1                     u8_20 0085                     u8_21 0084  
                   u9_20 0093                     u9_21 0092                     _main 0014  
                   btemp 007E                     start 000C                    ??_ISR 0071  
                  ?_main 0070                    _ADCen 00BE                    _ANSEL 0188  
                  i1l101 00E2                    i1l112 00DB                    i1l104 00E8  
                  i1l704 00DC                    i1l800 009E                    i1l730 00D8  
                  i1l734 00E4                    i1l728 00D3                    i1l790 007F  
                  i1l792 0085                    i1l794 008B                    i1l798 0093  
                  _PORTA 0005                    _PORTD 0008                    _TRISA 0085  
                  _TRISC 0087                    _TRISD 0088                    _SSPIF 0063  
                  pclath 000A          __end_of_spiInit 00BE          __end_of_spiRead 00DC  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 007F                   ??_main 0020                   ?_ADCen 0070  
                 _ADRESL 009E                   _ANSELH 0189                   _TRISA5 042D  
                 _TRISC3 043B                   _TRISC5 043D                   _SSPCON 0014  
                 _SSPBUF 0013                   saved_w 007E         __end_of_spiWrite 00E9  
              ??_spiInit 0077                ??_spiRead 0070  __end_of__initialization 0010  
          __end_of_ADCen 00D3           __pcstackCOMMON 0070                  ??_ADCen 0074  
             __pmaintext 0014               __pintentry 0004  __size_of_spiReceiveWait 0007  
                _SSPSTAT 0094                ?_spiWrite 0070                  __ptext1 00A8  
                __ptext2 00BE                  __ptext3 007F                  __ptext4 00E3  
                __ptext5 00D3                  __ptext6 00DC             __size_of_ISR 0029  
                _spiInit 00A8                  _spiRead 00D3     end_of_initialization 0010  
             ??_spiWrite 0070                _PORTCbits 0007              spiWrite@dat 0070  
         _spiReceiveWait 00DC      start_initialization 000F              __end_of_ISR 00A8  
 __end_of_spiReceiveWait 00E3              __pbssCOMMON 0078                ___latbits 0002  
          __pcstackBANK0 0020          ?_spiReceiveWait 0070        __size_of_spiWrite 0006  
         __size_of_ADCen 0015                 ?_spiInit 0074                 ?_spiRead 0070  
   spiInit@sTransmitEdge 0076        interrupt_function 0004                 _PIE1bits 008C  
     spiInit@sDataSample 0074                 _PIR1bits 000C               _ADCON0bits 001F  
             _ADCON1bits 009F         __size_of_spiInit 0016         __size_of_spiRead 0009  
          __size_of_main 006B                 _spiWrite 00E3             spiInit@sType 0077  
      spiInit@sClockIdle 0075               _INTCONbits 000B                 intlevel1 0000  
       ??_spiReceiveWait 0070               _OSCCONbits 008F  



Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Feb 24 22:06:16 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 12/02/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0000                     	;# 
   207  0001                     	;# 
   208  0002                     	;# 
   209  0003                     	;# 
   210  0004                     	;# 
   211  0005                     	;# 
   212  0006                     	;# 
   213  0007                     	;# 
   214  0008                     	;# 
   215  0009                     	;# 
   216  000A                     	;# 
   217  000B                     	;# 
   218  000C                     	;# 
   219  000D                     	;# 
   220  000E                     	;# 
   221  000E                     	;# 
   222  000F                     	;# 
   223  0010                     	;# 
   224  0011                     	;# 
   225  0012                     	;# 
   226  0013                     	;# 
   227  0014                     	;# 
   228  0015                     	;# 
   229  0015                     	;# 
   230  0016                     	;# 
   231  0017                     	;# 
   232  0018                     	;# 
   233  0019                     	;# 
   234  001A                     	;# 
   235  001B                     	;# 
   236  001B                     	;# 
   237  001C                     	;# 
   238  001D                     	;# 
   239  001E                     	;# 
   240  001F                     	;# 
   241  0081                     	;# 
   242  0085                     	;# 
   243  0086                     	;# 
   244  0087                     	;# 
   245  0088                     	;# 
   246  0089                     	;# 
   247  008C                     	;# 
   248  008D                     	;# 
   249  008E                     	;# 
   250  008F                     	;# 
   251  0090                     	;# 
   252  0091                     	;# 
   253  0092                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0094                     	;# 
   258  0095                     	;# 
   259  0096                     	;# 
   260  0097                     	;# 
   261  0098                     	;# 
   262  0099                     	;# 
   263  009A                     	;# 
   264  009B                     	;# 
   265  009C                     	;# 
   266  009D                     	;# 
   267  009E                     	;# 
   268  009F                     	;# 
   269  0105                     	;# 
   270  0107                     	;# 
   271  0108                     	;# 
   272  0109                     	;# 
   273  010C                     	;# 
   274  010C                     	;# 
   275  010D                     	;# 
   276  010E                     	;# 
   277  010F                     	;# 
   278  0185                     	;# 
   279  0187                     	;# 
   280  0188                     	;# 
   281  0189                     	;# 
   282  018C                     	;# 
   283  018D                     	;# 
   284  0000                     	;# 
   285  0001                     	;# 
   286  0002                     	;# 
   287  0003                     	;# 
   288  0004                     	;# 
   289  0005                     	;# 
   290  0006                     	;# 
   291  0007                     	;# 
   292  0008                     	;# 
   293  0009                     	;# 
   294  000A                     	;# 
   295  000B                     	;# 
   296  000C                     	;# 
   297  000D                     	;# 
   298  000E                     	;# 
   299  000E                     	;# 
   300  000F                     	;# 
   301  0010                     	;# 
   302  0011                     	;# 
   303  0012                     	;# 
   304  0013                     	;# 
   305  0014                     	;# 
   306  0015                     	;# 
   307  0015                     	;# 
   308  0016                     	;# 
   309  0017                     	;# 
   310  0018                     	;# 
   311  0019                     	;# 
   312  001A                     	;# 
   313  001B                     	;# 
   314  001B                     	;# 
   315  001C                     	;# 
   316  001D                     	;# 
   317  001E                     	;# 
   318  001F                     	;# 
   319  0081                     	;# 
   320  0085                     	;# 
   321  0086                     	;# 
   322  0087                     	;# 
   323  0088                     	;# 
   324  0089                     	;# 
   325  008C                     	;# 
   326  008D                     	;# 
   327  008E                     	;# 
   328  008F                     	;# 
   329  0090                     	;# 
   330  0091                     	;# 
   331  0092                     	;# 
   332  0093                     	;# 
   333  0093                     	;# 
   334  0093                     	;# 
   335  0094                     	;# 
   336  0095                     	;# 
   337  0096                     	;# 
   338  0097                     	;# 
   339  0098                     	;# 
   340  0099                     	;# 
   341  009A                     	;# 
   342  009B                     	;# 
   343  009C                     	;# 
   344  009D                     	;# 
   345  009E                     	;# 
   346  009F                     	;# 
   347  0105                     	;# 
   348  0107                     	;# 
   349  0108                     	;# 
   350  0109                     	;# 
   351  010C                     	;# 
   352  010C                     	;# 
   353  010D                     	;# 
   354  010E                     	;# 
   355  010F                     	;# 
   356  0185                     	;# 
   357  0187                     	;# 
   358  0188                     	;# 
   359  0189                     	;# 
   360  018C                     	;# 
   361  018D                     	;# 
   362  0013                     _SSPBUF	set	19
   363  0014                     _SSPCON	set	20
   364  000B                     _INTCONbits	set	11
   365  000C                     _PIR1bits	set	12
   366  0007                     _PORTCbits	set	7
   367  001F                     _ADCON0bits	set	31
   368  0008                     _PORTD	set	8
   369  0005                     _PORTA	set	5
   370  0094                     _SSPSTATbits	set	148
   371  0094                     _SSPSTAT	set	148
   372  008C                     _PIE1bits	set	140
   373  009E                     _ADRESL	set	158
   374  009F                     _ADCON1bits	set	159
   375  0085                     _TRISAbits	set	133
   376  0088                     _TRISD	set	136
   377  0087                     _TRISC	set	135
   378  0085                     _TRISA	set	133
   379  008F                     _OSCCONbits	set	143
   380  043B                     _TRISC3	set	1083
   381  043D                     _TRISC5	set	1085
   382  0189                     _ANSELH	set	393
   383  0188                     _ANSEL	set	392
   384                           
   385                           	psect	cinit
   386  000F                     start_initialization:	
   387                           ; #config settings
   388                           
   389  000F                     __initialization:
   390                           
   391                           ; Clear objects allocated to COMMON
   392  000F  01F9               	clrf	__pbssCOMMON& (0+127)
   393  0010                     end_of_initialization:	
   394                           ;End of C runtime variable initialization code
   395                           
   396  0010                     __end_of__initialization:
   397  0010  0183               	clrf	3
   398  0011  120A  118A  2814   	ljmp	_main	;jump to C main() function
   399                           
   400                           	psect	bssCOMMON
   401  0079                     __pbssCOMMON:
   402  0079                     _ADCV:
   403  0079                     	ds	1
   404                           
   405                           	psect	cstackCOMMON
   406  0070                     __pcstackCOMMON:
   407  0070                     ?_spiWrite:
   408  0070                     ?_ADCen:	
   409                           ; 1 bytes @ 0x0
   410                           
   411  0070                     ?_main:	
   412                           ; 1 bytes @ 0x0
   413                           
   414  0070                     ?_ISR:	
   415                           ; 1 bytes @ 0x0
   416                           
   417  0070                     ??_ISR:	
   418                           ; 1 bytes @ 0x0
   419                           
   420                           
   421                           ; 1 bytes @ 0x0
   422  0070                     	ds	3
   423  0073                     ?_spiInit:
   424  0073                     ??_spiWrite:	
   425                           ; 1 bytes @ 0x3
   426                           
   427  0073                     ??_ADCen:	
   428                           ; 1 bytes @ 0x3
   429                           
   430  0073                     spiInit@sDataSample:	
   431                           ; 1 bytes @ 0x3
   432                           
   433  0073                     spiWrite@dat:	
   434                           ; 1 bytes @ 0x3
   435                           
   436                           
   437                           ; 1 bytes @ 0x3
   438  0073                     	ds	1
   439  0074                     spiInit@sClockIdle:
   440                           
   441                           ; 1 bytes @ 0x4
   442  0074                     	ds	1
   443  0075                     spiInit@sTransmitEdge:
   444                           
   445                           ; 1 bytes @ 0x5
   446  0075                     	ds	1
   447  0076                     ??_spiInit:
   448  0076                     spiInit@sType:	
   449                           ; 1 bytes @ 0x6
   450                           
   451                           
   452                           ; 1 bytes @ 0x6
   453  0076                     	ds	1
   454  0077                     ??_main:
   455                           
   456                           ; 1 bytes @ 0x7
   457  0077                     	ds	2
   458                           
   459                           	psect	maintext
   460  0014                     __pmaintext:	
   461 ;;
   462 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   463 ;;
   464 ;; *************** function _main *****************
   465 ;; Defined at:
   466 ;;		line 39 in file "main.c"
   467 ;; Parameters:    Size  Location     Type
   468 ;;		None
   469 ;; Auto vars:     Size  Location     Type
   470 ;;		None
   471 ;; Return value:  Size  Location     Type
   472 ;;                  1    wreg      void 
   473 ;; Registers used:
   474 ;;		wreg, status,2, status,0, pclath, cstack
   475 ;; Tracked objects:
   476 ;;		On entry : B00/0
   477 ;;		On exit  : 0/0
   478 ;;		Unchanged: 0/0
   479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   480 ;;      Params:         0       0       0       0       0
   481 ;;      Locals:         0       0       0       0       0
   482 ;;      Temps:          2       0       0       0       0
   483 ;;      Totals:         2       0       0       0       0
   484 ;;Total ram usage:        2 bytes
   485 ;; Hardware stack levels required when called:    2
   486 ;; This function calls:
   487 ;;		_ADCen
   488 ;;		_spiInit
   489 ;;		_spiWrite
   490 ;; This function is called by:
   491 ;;		Startup code after reset
   492 ;; This function uses a non-reentrant model
   493 ;;
   494                           
   495                           
   496                           ;psect for function _main
   497  0014                     _main:
   498  0014                     l811:	
   499                           ;incstack = 0
   500                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   501                           
   502                           
   503                           ;main.c: 40:     OSCCONbits.IRCF = 0b111;
   504  0014  3070               	movlw	112
   505  0015  1683               	bsf	3,5	;RP0=1, select bank1
   506  0016  1303               	bcf	3,6	;RP1=0, select bank1
   507  0017  048F               	iorwf	15,f	;volatile
   508  0018                     l813:
   509                           
   510                           ;main.c: 41:     OSCCONbits.OSTS = 0;
   511  0018  118F               	bcf	15,3	;volatile
   512  0019                     l815:
   513                           
   514                           ;main.c: 42:     OSCCONbits.HTS = 0;
   515  0019  110F               	bcf	15,2	;volatile
   516  001A                     l817:
   517                           
   518                           ;main.c: 43:     OSCCONbits.LTS = 0;
   519  001A  108F               	bcf	15,1	;volatile
   520  001B                     l819:
   521                           
   522                           ;main.c: 44:     OSCCONbits.SCS = 1;
   523  001B  140F               	bsf	15,0	;volatile
   524  001C                     l821:
   525                           
   526                           ;main.c: 45:     ANSEL = 0b00000001;
   527  001C  3001               	movlw	1
   528  001D  1683               	bsf	3,5	;RP0=1, select bank3
   529  001E  1703               	bsf	3,6	;RP1=1, select bank3
   530  001F  0088               	movwf	8	;volatile
   531  0020                     l823:
   532                           
   533                           ;main.c: 46:     ANSELH = 0;
   534  0020  0189               	clrf	9	;volatile
   535  0021                     l825:
   536                           
   537                           ;main.c: 47:     TRISA = 0b00000001;
   538  0021  3001               	movlw	1
   539  0022  1683               	bsf	3,5	;RP0=1, select bank1
   540  0023  1303               	bcf	3,6	;RP1=0, select bank1
   541  0024  0085               	movwf	5	;volatile
   542  0025                     l827:
   543                           
   544                           ;main.c: 48:     PORTA = 0;
   545  0025  1283               	bcf	3,5	;RP0=0, select bank0
   546  0026  1303               	bcf	3,6	;RP1=0, select bank0
   547  0027  0185               	clrf	5	;volatile
   548  0028                     l829:
   549                           
   550                           ;main.c: 49:     TRISC = 0;
   551  0028  1683               	bsf	3,5	;RP0=1, select bank1
   552  0029  1303               	bcf	3,6	;RP1=0, select bank1
   553  002A  0187               	clrf	7	;volatile
   554  002B                     l831:
   555                           
   556                           ;main.c: 50:     TRISD = 0;
   557  002B  0188               	clrf	8	;volatile
   558  002C                     l833:
   559                           
   560                           ;main.c: 51:     PORTD = 0;
   561  002C  1283               	bcf	3,5	;RP0=0, select bank0
   562  002D  1303               	bcf	3,6	;RP1=0, select bank0
   563  002E  0188               	clrf	8	;volatile
   564  002F                     l835:
   565                           
   566                           ;main.c: 52:     TRISC = 0b00010000;
   567  002F  3010               	movlw	16
   568  0030  1683               	bsf	3,5	;RP0=1, select bank1
   569  0031  1303               	bcf	3,6	;RP1=0, select bank1
   570  0032  0087               	movwf	7	;volatile
   571  0033                     l837:
   572                           
   573                           ;main.c: 53:     TRISAbits.TRISA5 = 1;
   574  0033  1685               	bsf	5,5	;volatile
   575  0034                     l839:
   576                           
   577                           ;main.c: 54:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, SP
      +                          I_IDLE_2_ACTIVE);
   578  0034  01F3               	clrf	spiInit@sDataSample
   579  0035  01F4               	clrf	spiInit@sClockIdle
   580  0036  01F5               	clrf	spiInit@sTransmitEdge
   581  0037  3024               	movlw	36
   582  0038  120A  118A  2082  120A  118A  	fcall	_spiInit
   583  003D                     l841:
   584                           
   585                           ;main.c: 57:         spiWrite(ADCV);
   586  003D  0879               	movf	_ADCV,w
   587  003E  120A  118A  20C3  120A  118A  	fcall	_spiWrite
   588  0043                     l843:
   589                           
   590                           ;main.c: 58:         ADCen();
   591  0043  120A  118A  20AE  120A  118A  	fcall	_ADCen
   592  0048                     l845:
   593                           
   594                           ;main.c: 59:         ADCON1bits.ADFM = 1;
   595  0048  1683               	bsf	3,5	;RP0=1, select bank1
   596  0049  1303               	bcf	3,6	;RP1=0, select bank1
   597  004A  179F               	bsf	31,7	;volatile
   598  004B                     l847:
   599                           
   600                           ;main.c: 60:         ADCON0bits.ADON = 1;
   601  004B  1283               	bcf	3,5	;RP0=0, select bank0
   602  004C  1303               	bcf	3,6	;RP1=0, select bank0
   603  004D  141F               	bsf	31,0	;volatile
   604  004E                     l849:
   605                           
   606                           ;main.c: 61:         _delay((unsigned long)((15)*(8000000/4000.0)));
   607  004E  3027               	movlw	39
   608  004F  00F8               	movwf	??_main+1
   609  0050  30F5               	movlw	245
   610  0051  00F7               	movwf	??_main
   611  0052                     u157:
   612  0052  0BF7               	decfsz	??_main,f
   613  0053  2852               	goto	u157
   614  0054  0BF8               	decfsz	??_main+1,f
   615  0055  2852               	goto	u157
   616  0056                     l851:
   617                           
   618                           ;main.c: 62:         ADCON0bits.GO = 1;
   619  0056  1283               	bcf	3,5	;RP0=0, select bank0
   620  0057  1303               	bcf	3,6	;RP1=0, select bank0
   621  0058  149F               	bsf	31,1	;volatile
   622  0059                     l44:	
   623                           ;main.c: 63:         while (ADCON0bits.GO);
   624                           
   625  0059  189F               	btfsc	31,1	;volatile
   626  005A  285C               	goto	u101
   627  005B  285D               	goto	u100
   628  005C                     u101:
   629  005C  2859               	goto	l44
   630  005D                     u100:
   631  005D                     l853:
   632                           
   633                           ;main.c: 64:         if (ADCV < 51) {
   634  005D  3033               	movlw	51
   635  005E  0279               	subwf	_ADCV,w
   636  005F  1803               	skipnc
   637  0060  2862               	goto	u111
   638  0061  2863               	goto	u110
   639  0062                     u111:
   640  0062  2866               	goto	l857
   641  0063                     u110:
   642  0063                     l855:
   643                           
   644                           ;main.c: 66:             PORTCbits.RC0 = 1;
   645  0063  1407               	bsf	7,0	;volatile
   646                           
   647                           ;main.c: 67:             PORTCbits.RC1 = 0;
   648  0064  1087               	bcf	7,1	;volatile
   649                           
   650                           ;main.c: 68:             PORTCbits.RC2 = 0;
   651  0065  1107               	bcf	7,2	;volatile
   652  0066                     l857:
   653                           
   654                           ;main.c: 71:         if (ADCV >= 51 && ADCV <= 73) {
   655  0066  3033               	movlw	51
   656  0067  0279               	subwf	_ADCV,w
   657  0068  1C03               	skipc
   658  0069  286B               	goto	u121
   659  006A  286C               	goto	u120
   660  006B                     u121:
   661  006B  2875               	goto	l863
   662  006C                     u120:
   663  006C                     l859:
   664  006C  304A               	movlw	74
   665  006D  0279               	subwf	_ADCV,w
   666  006E  1803               	skipnc
   667  006F  2871               	goto	u131
   668  0070  2872               	goto	u130
   669  0071                     u131:
   670  0071  2875               	goto	l863
   671  0072                     u130:
   672  0072                     l861:
   673                           
   674                           ;main.c: 73:             PORTCbits.RC0 = 0;
   675  0072  1007               	bcf	7,0	;volatile
   676                           
   677                           ;main.c: 74:             PORTCbits.RC1 = 1;
   678  0073  1487               	bsf	7,1	;volatile
   679                           
   680                           ;main.c: 75:             PORTCbits.RC2 = 0;
   681  0074  1107               	bcf	7,2	;volatile
   682  0075                     l863:
   683                           
   684                           ;main.c: 78:         if (ADCV > 73) {
   685  0075  304A               	movlw	74
   686  0076  0279               	subwf	_ADCV,w
   687  0077  1C03               	skipc
   688  0078  287A               	goto	u141
   689  0079  287B               	goto	u140
   690  007A                     u141:
   691  007A  283D               	goto	l841
   692  007B                     u140:
   693  007B                     l865:
   694                           
   695                           ;main.c: 80:             PORTCbits.RC0 = 0;
   696  007B  1007               	bcf	7,0	;volatile
   697                           
   698                           ;main.c: 81:             PORTCbits.RC1 = 0;
   699  007C  1087               	bcf	7,1	;volatile
   700                           
   701                           ;main.c: 82:             PORTCbits.RC2 = 1;
   702  007D  1507               	bsf	7,2	;volatile
   703  007E  283D               	goto	l841
   704  007F  120A  118A  280C   	ljmp	start
   705  0082                     __end_of_main:
   706                           
   707                           	psect	text1
   708  00C3                     __ptext1:	
   709 ;; *************** function _spiWrite *****************
   710 ;; Defined at:
   711 ;;		line 34 in file "SPI.c"
   712 ;; Parameters:    Size  Location     Type
   713 ;;  dat             1    wreg     unsigned char 
   714 ;; Auto vars:     Size  Location     Type
   715 ;;  dat             1    3[COMMON] unsigned char 
   716 ;; Return value:  Size  Location     Type
   717 ;;                  1    wreg      void 
   718 ;; Registers used:
   719 ;;		wreg
   720 ;; Tracked objects:
   721 ;;		On entry : 0/0
   722 ;;		On exit  : 0/0
   723 ;;		Unchanged: 0/0
   724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   725 ;;      Params:         0       0       0       0       0
   726 ;;      Locals:         1       0       0       0       0
   727 ;;      Temps:          0       0       0       0       0
   728 ;;      Totals:         1       0       0       0       0
   729 ;;Total ram usage:        1 bytes
   730 ;; Hardware stack levels used:    1
   731 ;; Hardware stack levels required when called:    1
   732 ;; This function calls:
   733 ;;		Nothing
   734 ;; This function is called by:
   735 ;;		_main
   736 ;; This function uses a non-reentrant model
   737 ;;
   738                           
   739                           
   740                           ;psect for function _spiWrite
   741  00C3                     _spiWrite:
   742                           
   743                           ;incstack = 0
   744                           ; Regs used in _spiWrite: [wreg]
   745                           ;spiWrite@dat stored from wreg
   746  00C3  00F3               	movwf	spiWrite@dat
   747  00C4                     l709:
   748                           
   749                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
   750  00C4  0873               	movf	spiWrite@dat,w
   751  00C5  1283               	bcf	3,5	;RP0=0, select bank0
   752  00C6  1303               	bcf	3,6	;RP1=0, select bank0
   753  00C7  0093               	movwf	19	;volatile
   754  00C8                     l99:
   755  00C8  0008               	return
   756  00C9                     __end_of_spiWrite:
   757                           
   758                           	psect	text2
   759  0082                     __ptext2:	
   760 ;; *************** function _spiInit *****************
   761 ;; Defined at:
   762 ;;		line 12 in file "SPI.c"
   763 ;; Parameters:    Size  Location     Type
   764 ;;  sType           1    wreg     enum E1264
   765 ;;  sDataSample     1    3[COMMON] enum E1272
   766 ;;  sClockIdle      1    4[COMMON] enum E1276
   767 ;;  sTransmitEdg    1    5[COMMON] enum E1280
   768 ;; Auto vars:     Size  Location     Type
   769 ;;  sType           1    6[COMMON] enum E1264
   770 ;; Return value:  Size  Location     Type
   771 ;;                  1    wreg      void 
   772 ;; Registers used:
   773 ;;		wreg, status,2, status,0
   774 ;; Tracked objects:
   775 ;;		On entry : 0/0
   776 ;;		On exit  : 0/0
   777 ;;		Unchanged: 0/0
   778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   779 ;;      Params:         3       0       0       0       0
   780 ;;      Locals:         1       0       0       0       0
   781 ;;      Temps:          0       0       0       0       0
   782 ;;      Totals:         4       0       0       0       0
   783 ;;Total ram usage:        4 bytes
   784 ;; Hardware stack levels used:    1
   785 ;; Hardware stack levels required when called:    1
   786 ;; This function calls:
   787 ;;		Nothing
   788 ;; This function is called by:
   789 ;;		_main
   790 ;; This function uses a non-reentrant model
   791 ;;
   792                           
   793                           
   794                           ;psect for function _spiInit
   795  0082                     _spiInit:
   796                           
   797                           ;incstack = 0
   798                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   799                           ;spiInit@sType stored from wreg
   800  0082  00F6               	movwf	spiInit@sType
   801  0083                     l801:
   802                           
   803                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   804  0083  1683               	bsf	3,5	;RP0=1, select bank1
   805  0084  1303               	bcf	3,6	;RP1=0, select bank1
   806  0085  1287               	bcf	7,5	;volatile
   807                           
   808                           ;SPI.c: 15:     if(sType & 0b00000100)
   809  0086  1D76               	btfss	spiInit@sType,2
   810  0087  2889               	goto	u91
   811  0088  288A               	goto	u90
   812  0089                     u91:
   813  0089  288E               	goto	l807
   814  008A                     u90:
   815  008A                     l803:
   816                           
   817                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   818  008A  0875               	movf	spiInit@sTransmitEdge,w
   819  008B  0094               	movwf	20	;volatile
   820  008C                     l805:
   821                           
   822                           ;SPI.c: 18:         TRISC3 = 1;
   823  008C  1587               	bsf	7,3	;volatile
   824                           
   825                           ;SPI.c: 19:     }
   826  008D  2892               	goto	l89
   827  008E                     l807:
   828                           
   829                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   830  008E  0873               	movf	spiInit@sDataSample,w
   831  008F  0475               	iorwf	spiInit@sTransmitEdge,w
   832  0090  0094               	movwf	20	;volatile
   833  0091                     l809:
   834                           
   835                           ;SPI.c: 23:         TRISC3 = 0;
   836  0091  1187               	bcf	7,3	;volatile
   837  0092                     l89:	
   838                           ;SPI.c: 24:     }
   839                           
   840                           
   841                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   842  0092  0876               	movf	spiInit@sType,w
   843  0093  0474               	iorwf	spiInit@sClockIdle,w
   844  0094  1283               	bcf	3,5	;RP0=0, select bank0
   845  0095  1303               	bcf	3,6	;RP1=0, select bank0
   846  0096  0094               	movwf	20	;volatile
   847  0097                     l90:
   848  0097  0008               	return
   849  0098                     __end_of_spiInit:
   850                           
   851                           	psect	text3
   852  00AE                     __ptext3:	
   853 ;; *************** function _ADCen *****************
   854 ;; Defined at:
   855 ;;		line 20 in file "ADC.c"
   856 ;; Parameters:    Size  Location     Type
   857 ;;		None
   858 ;; Auto vars:     Size  Location     Type
   859 ;;		None
   860 ;; Return value:  Size  Location     Type
   861 ;;                  1    wreg      void 
   862 ;; Registers used:
   863 ;;		wreg, status,2, status,0
   864 ;; Tracked objects:
   865 ;;		On entry : 0/0
   866 ;;		On exit  : 0/0
   867 ;;		Unchanged: 0/0
   868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   869 ;;      Params:         0       0       0       0       0
   870 ;;      Locals:         0       0       0       0       0
   871 ;;      Temps:          0       0       0       0       0
   872 ;;      Totals:         0       0       0       0       0
   873 ;;Total ram usage:        0 bytes
   874 ;; Hardware stack levels used:    1
   875 ;; Hardware stack levels required when called:    1
   876 ;; This function calls:
   877 ;;		Nothing
   878 ;; This function is called by:
   879 ;;		_main
   880 ;; This function uses a non-reentrant model
   881 ;;
   882                           
   883                           
   884                           ;psect for function _ADCen
   885  00AE                     _ADCen:
   886  00AE                     l711:	
   887                           ;incstack = 0
   888                           ; Regs used in _ADCen: [wreg+status,2+status,0]
   889                           
   890                           
   891                           ;ADC.c: 22:     INTCONbits.GIE = 1;
   892  00AE  178B               	bsf	11,7	;volatile
   893                           
   894                           ;ADC.c: 23:     INTCONbits.PEIE = 1;
   895  00AF  170B               	bsf	11,6	;volatile
   896                           
   897                           ;ADC.c: 24:     PIE1bits.ADIE = 1;
   898  00B0  1683               	bsf	3,5	;RP0=1, select bank1
   899  00B1  1303               	bcf	3,6	;RP1=0, select bank1
   900  00B2  170C               	bsf	12,6	;volatile
   901                           
   902                           ;ADC.c: 25:     PIR1bits.ADIF = 0;
   903  00B3  1283               	bcf	3,5	;RP0=0, select bank0
   904  00B4  1303               	bcf	3,6	;RP1=0, select bank0
   905  00B5  130C               	bcf	12,6	;volatile
   906  00B6                     l713:
   907                           
   908                           ;ADC.c: 26:     ADCON0bits.ADCS = 01;
   909  00B6  081F               	movf	31,w	;volatile
   910  00B7  393F               	andlw	-193
   911  00B8  3840               	iorlw	64
   912  00B9  009F               	movwf	31	;volatile
   913                           
   914                           ;ADC.c: 27:     ADCON0bits.CHS = 0000;
   915  00BA  30C3               	movlw	-61
   916  00BB  059F               	andwf	31,f	;volatile
   917  00BC                     l715:
   918                           
   919                           ;ADC.c: 28:     ADCON0bits.ADON = 1;
   920  00BC  141F               	bsf	31,0	;volatile
   921  00BD                     l717:
   922                           
   923                           ;ADC.c: 29:     ADCON1bits.ADFM = 0;
   924  00BD  1683               	bsf	3,5	;RP0=1, select bank1
   925  00BE  1303               	bcf	3,6	;RP1=0, select bank1
   926  00BF  139F               	bcf	31,7	;volatile
   927  00C0                     l719:
   928                           
   929                           ;ADC.c: 30:     ADCON1bits.VCFG1 = 0;
   930  00C0  129F               	bcf	31,5	;volatile
   931  00C1                     l721:
   932                           
   933                           ;ADC.c: 31:     ADCON1bits.VCFG0 = 0;
   934  00C1  121F               	bcf	31,4	;volatile
   935  00C2                     l73:
   936  00C2  0008               	return
   937  00C3                     __end_of_ADCen:
   938                           
   939                           	psect	text4
   940  0098                     __ptext4:	
   941 ;; *************** function _ISR *****************
   942 ;; Defined at:
   943 ;;		line 89 in file "main.c"
   944 ;; Parameters:    Size  Location     Type
   945 ;;		None
   946 ;; Auto vars:     Size  Location     Type
   947 ;;		None
   948 ;; Return value:  Size  Location     Type
   949 ;;                  1    wreg      void 
   950 ;; Registers used:
   951 ;;		wreg
   952 ;; Tracked objects:
   953 ;;		On entry : 0/0
   954 ;;		On exit  : 0/0
   955 ;;		Unchanged: 0/0
   956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   957 ;;      Params:         0       0       0       0       0
   958 ;;      Locals:         0       0       0       0       0
   959 ;;      Temps:          3       0       0       0       0
   960 ;;      Totals:         3       0       0       0       0
   961 ;;Total ram usage:        3 bytes
   962 ;; Hardware stack levels used:    1
   963 ;; This function calls:
   964 ;;		Nothing
   965 ;; This function is called by:
   966 ;;		Interrupt level 1
   967 ;; This function uses a non-reentrant model
   968 ;;
   969                           
   970                           
   971                           ;psect for function _ISR
   972  0098                     _ISR:
   973  0098                     i1l781:
   974                           
   975                           ;main.c: 90:     if (PIR1bits.ADIF == 1) {
   976  0098  1283               	bcf	3,5	;RP0=0, select bank0
   977  0099  1303               	bcf	3,6	;RP1=0, select bank0
   978  009A  1F0C               	btfss	12,6	;volatile
   979  009B  289D               	goto	u8_21
   980  009C  289E               	goto	u8_20
   981  009D                     u8_21:
   982  009D  28A7               	goto	i1l58
   983  009E                     u8_20:
   984  009E                     i1l783:
   985                           
   986                           ;main.c: 91:         ADCV = ADRESL;
   987  009E  1683               	bsf	3,5	;RP0=1, select bank1
   988  009F  1303               	bcf	3,6	;RP1=0, select bank1
   989  00A0  081E               	movf	30,w	;volatile
   990  00A1  00F0               	movwf	??_ISR
   991  00A2  0870               	movf	??_ISR,w
   992  00A3  00F9               	movwf	_ADCV
   993  00A4                     i1l785:
   994                           
   995                           ;main.c: 92:         PIR1bits.ADIF = 0;
   996  00A4  1283               	bcf	3,5	;RP0=0, select bank0
   997  00A5  1303               	bcf	3,6	;RP1=0, select bank0
   998  00A6  130C               	bcf	12,6	;volatile
   999  00A7                     i1l58:
  1000  00A7  0872               	movf	??_ISR+2,w
  1001  00A8  008A               	movwf	10
  1002  00A9  0E71               	swapf	??_ISR+1,w
  1003  00AA  0083               	movwf	3
  1004  00AB  0EFE               	swapf	btemp,f
  1005  00AC  0E7E               	swapf	btemp,w
  1006  00AD  0009               	retfie
  1007  00AE                     __end_of_ISR:
  1008  007E                     btemp	set	126	;btemp
  1009  007E                     wtemp0	set	126
  1010                           
  1011                           	psect	intentry
  1012  0004                     __pintentry:	
  1013                           ;incstack = 0
  1014                           ; Regs used in _ISR: [wreg]
  1015                           
  1016  0004                     interrupt_function:
  1017  007E                     saved_w	set	btemp
  1018  0004  00FE               	movwf	btemp
  1019  0005  0E03               	swapf	3,w
  1020  0006  00F1               	movwf	??_ISR+1
  1021  0007  080A               	movf	10,w
  1022  0008  00F2               	movwf	??_ISR+2
  1023  0009  120A  118A  2898   	ljmp	_ISR
  1024                           
  1025                           	psect	config
  1026                           
  1027                           ;Config register CONFIG1 @ 0x2007
  1028                           ;	Oscillator Selection bits
  1029                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1030                           ;	Watchdog Timer Enable bit
  1031                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1032                           ;	Power-up Timer Enable bit
  1033                           ;	PWRTE = OFF, PWRT disabled
  1034                           ;	RE3/MCLR pin function select bit
  1035                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1036                           ;	Code Protection bit
  1037                           ;	CP = OFF, Program memory code protection is disabled
  1038                           ;	Data Code Protection bit
  1039                           ;	CPD = OFF, Data memory code protection is disabled
  1040                           ;	Brown Out Reset Selection bits
  1041                           ;	BOREN = OFF, BOR disabled
  1042                           ;	Internal External Switchover bit
  1043                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1044                           ;	Fail-Safe Clock Monitor Enabled bit
  1045                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1046                           ;	Low Voltage Programming Enable bit
  1047                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1048                           ;	In-Circuit Debugger Mode bit
  1049                           ;	DEBUG = 0x1, unprogrammed default
  1050  2007                     	org	8199
  1051  2007  20F4               	dw	8436
  1052                           
  1053                           ;Config register CONFIG2 @ 0x2008
  1054                           ;	Brown-out Reset Selection bit
  1055                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1056                           ;	Flash Program Memory Self Write Enable bits
  1057                           ;	WRT = OFF, Write protection off
  1058  2008                     	org	8200
  1059  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_spiInit

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     375
                                              7 COMMON     2     2      0
                              _ADCen
                            _spiInit
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      15
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     360
                                              3 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _ADCen                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCen
   _spiInit
   _spiWrite

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       A      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Feb 24 22:06:16 2021

            _SSPSTATbits 0094                       l44 0059                       l73 00C2  
                     l90 0097                       l89 0092                       l99 00C8  
                     u90 008A                       u91 0089                      l711 00AE  
                    l721 00C1                      l713 00B6                      l801 0083  
                    l715 00BC                      l803 008A                      l811 0014  
                    l717 00BD                      l805 008C                      l709 00C4  
                    l821 001C                      l813 0018                      l719 00C0  
                    l807 008E                      l831 002B                      l823 0020  
                    l815 0019                      l809 0091                      l841 003D  
                    l833 002C                      l825 0021                      l817 001A  
                    l851 0056                      l843 0043                      l835 002F  
                    l827 0025                      l819 001B                      l861 0072  
                    l853 005D                      l845 0048                      l837 0033  
                    l829 0028                      l863 0075                      l855 0063  
                    l847 004B                      l839 0034                      l865 007B  
                    l857 0066                      l849 004E                      l859 006C  
                    u100 005D                      u101 005C                      u110 0063  
                    u111 0062                      u120 006C                      u121 006B  
                    u130 0072                      u131 0071                      u140 007B  
                    u141 007A                      u157 0052                      _ISR 0098  
                   ?_ISR 0070                     _ADCV 0079                     i1l58 00A7  
                   u8_20 009E                     u8_21 009D                     _main 0014  
                   btemp 007E                     start 000C                    ??_ISR 0070  
                  ?_main 0070                    _ADCen 00AE                    _ANSEL 0188  
                  i1l781 0098                    i1l783 009E                    i1l785 00A4  
                  _PORTA 0005                    _PORTD 0008                    _TRISA 0085  
                  _TRISC 0087                    _TRISD 0088                    pclath 000A  
        __end_of_spiInit 0098                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 0082                   ??_main 0077  
                 ?_ADCen 0070                   _ADRESL 009E                   _ANSELH 0189  
                 _TRISC3 043B                   _TRISC5 043D                   _SSPCON 0014  
                 _SSPBUF 0013                   saved_w 007E         __end_of_spiWrite 00C9  
              ??_spiInit 0076  __end_of__initialization 0010            __end_of_ADCen 00C3  
         __pcstackCOMMON 0070                  ??_ADCen 0073               __pmaintext 0014  
             __pintentry 0004                  _SSPSTAT 0094                ?_spiWrite 0070  
                __ptext1 00C3                  __ptext2 0082                  __ptext3 00AE  
                __ptext4 0098             __size_of_ISR 0016                  _spiInit 0082  
   end_of_initialization 0010               ??_spiWrite 0073                _PORTCbits 0007  
              _TRISAbits 0085              spiWrite@dat 0073      start_initialization 000F  
            __end_of_ISR 00AE              __pbssCOMMON 0079                ___latbits 0002  
      __size_of_spiWrite 0006           __size_of_ADCen 0015                 ?_spiInit 0073  
   spiInit@sTransmitEdge 0075        interrupt_function 0004                 _PIE1bits 008C  
     spiInit@sDataSample 0073                 _PIR1bits 000C               _ADCON0bits 001F  
             _ADCON1bits 009F         __size_of_spiInit 0016            __size_of_main 006E  
               _spiWrite 00C3             spiInit@sType 0076        spiInit@sClockIdle 0074  
             _INTCONbits 000B                 intlevel1 0000               _OSCCONbits 008F  

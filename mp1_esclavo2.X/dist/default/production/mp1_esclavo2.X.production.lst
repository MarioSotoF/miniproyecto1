

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Feb 24 22:06:39 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 12/02/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  0000                     	;# 
   206  0001                     	;# 
   207  0002                     	;# 
   208  0003                     	;# 
   209  0004                     	;# 
   210  0005                     	;# 
   211  0006                     	;# 
   212  0007                     	;# 
   213  0008                     	;# 
   214  0009                     	;# 
   215  000A                     	;# 
   216  000B                     	;# 
   217  000C                     	;# 
   218  000D                     	;# 
   219  000E                     	;# 
   220  000E                     	;# 
   221  000F                     	;# 
   222  0010                     	;# 
   223  0011                     	;# 
   224  0012                     	;# 
   225  0013                     	;# 
   226  0014                     	;# 
   227  0015                     	;# 
   228  0015                     	;# 
   229  0016                     	;# 
   230  0017                     	;# 
   231  0018                     	;# 
   232  0019                     	;# 
   233  001A                     	;# 
   234  001B                     	;# 
   235  001B                     	;# 
   236  001C                     	;# 
   237  001D                     	;# 
   238  001E                     	;# 
   239  001F                     	;# 
   240  0081                     	;# 
   241  0085                     	;# 
   242  0086                     	;# 
   243  0087                     	;# 
   244  0088                     	;# 
   245  0089                     	;# 
   246  008C                     	;# 
   247  008D                     	;# 
   248  008E                     	;# 
   249  008F                     	;# 
   250  0090                     	;# 
   251  0091                     	;# 
   252  0092                     	;# 
   253  0093                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0094                     	;# 
   257  0095                     	;# 
   258  0096                     	;# 
   259  0097                     	;# 
   260  0098                     	;# 
   261  0099                     	;# 
   262  009A                     	;# 
   263  009B                     	;# 
   264  009C                     	;# 
   265  009D                     	;# 
   266  009E                     	;# 
   267  009F                     	;# 
   268  0105                     	;# 
   269  0107                     	;# 
   270  0108                     	;# 
   271  0109                     	;# 
   272  010C                     	;# 
   273  010C                     	;# 
   274  010D                     	;# 
   275  010E                     	;# 
   276  010F                     	;# 
   277  0185                     	;# 
   278  0187                     	;# 
   279  0188                     	;# 
   280  0189                     	;# 
   281  018C                     	;# 
   282  018D                     	;# 
   283  0013                     _SSPBUF	set	19
   284  0014                     _SSPCON	set	20
   285  0006                     _PORTBbits	set	6
   286  0008                     _PORTD	set	8
   287  0006                     _PORTB	set	6
   288  0005                     _PORTA	set	5
   289  000B                     _INTCONbits	set	11
   290  0094                     _SSPSTATbits	set	148
   291  0094                     _SSPSTAT	set	148
   292  0088                     _TRISD	set	136
   293  0087                     _TRISC	set	135
   294  0086                     _TRISB	set	134
   295  0085                     _TRISA	set	133
   296  0096                     _IOCBbits	set	150
   297  008F                     _OSCCONbits	set	143
   298  043B                     _TRISC3	set	1083
   299  043D                     _TRISC5	set	1085
   300  042D                     _TRISA5	set	1069
   301  0189                     _ANSELH	set	393
   302  0188                     _ANSEL	set	392
   303                           
   304                           	psect	cinit
   305  000F                     start_initialization:	
   306                           ; #config settings
   307                           
   308  000F                     __initialization:
   309                           
   310                           ; Clear objects allocated to COMMON
   311  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   312  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   313  0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   314  0012                     end_of_initialization:	
   315                           ;End of C runtime variable initialization code
   316                           
   317  0012                     __end_of__initialization:
   318  0012  0183               	clrf	3
   319  0013  120A  118A  2816   	ljmp	_main	;jump to C main() function
   320                           
   321                           	psect	bssCOMMON
   322  0077                     __pbssCOMMON:
   323  0077                     _Counter:
   324  0077                     	ds	1
   325  0078                     _Decremento:
   326  0078                     	ds	1
   327  0079                     _Incremento:
   328  0079                     	ds	1
   329                           
   330                           	psect	cstackCOMMON
   331  0070                     __pcstackCOMMON:
   332  0070                     ?_spiWrite:
   333  0070                     ?_main:	
   334                           ; 1 bytes @ 0x0
   335                           
   336  0070                     ?_ISR:	
   337                           ; 1 bytes @ 0x0
   338                           
   339  0070                     ??_ISR:	
   340                           ; 1 bytes @ 0x0
   341                           
   342                           
   343                           ; 1 bytes @ 0x0
   344  0070                     	ds	3
   345  0073                     ?_spiInit:
   346  0073                     ??_spiWrite:	
   347                           ; 1 bytes @ 0x3
   348                           
   349  0073                     spiInit@sDataSample:	
   350                           ; 1 bytes @ 0x3
   351                           
   352  0073                     spiWrite@dat:	
   353                           ; 1 bytes @ 0x3
   354                           
   355                           
   356                           ; 1 bytes @ 0x3
   357  0073                     	ds	1
   358  0074                     spiInit@sClockIdle:
   359                           
   360                           ; 1 bytes @ 0x4
   361  0074                     	ds	1
   362  0075                     spiInit@sTransmitEdge:
   363                           
   364                           ; 1 bytes @ 0x5
   365  0075                     	ds	1
   366  0076                     ??_spiInit:
   367  0076                     spiInit@sType:	
   368                           ; 1 bytes @ 0x6
   369                           
   370                           
   371                           ; 1 bytes @ 0x6
   372  0076                     	ds	1
   373  0077                     ??_main:
   374                           
   375                           	psect	maintext
   376  0016                     __pmaintext:	
   377                           ; 1 bytes @ 0x7
   378 ;;
   379 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   380 ;;
   381 ;; *************** function _main *****************
   382 ;; Defined at:
   383 ;;		line 43 in file "main.c"
   384 ;; Parameters:    Size  Location     Type
   385 ;;		None
   386 ;; Auto vars:     Size  Location     Type
   387 ;;		None
   388 ;; Return value:  Size  Location     Type
   389 ;;                  1    wreg      void 
   390 ;; Registers used:
   391 ;;		wreg, status,2, status,0, pclath, cstack
   392 ;; Tracked objects:
   393 ;;		On entry : B00/0
   394 ;;		On exit  : 0/0
   395 ;;		Unchanged: 0/0
   396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   397 ;;      Params:         0       0       0       0       0
   398 ;;      Locals:         0       0       0       0       0
   399 ;;      Temps:          0       0       0       0       0
   400 ;;      Totals:         0       0       0       0       0
   401 ;;Total ram usage:        0 bytes
   402 ;; Hardware stack levels required when called:    2
   403 ;; This function calls:
   404 ;;		_spiInit
   405 ;;		_spiWrite
   406 ;; This function is called by:
   407 ;;		Startup code after reset
   408 ;; This function uses a non-reentrant model
   409 ;;
   410                           
   411                           
   412                           ;psect for function _main
   413  0016                     _main:
   414  0016                     l792:	
   415                           ;incstack = 0
   416                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   417                           
   418                           
   419                           ;main.c: 44:     OSCCONbits.IRCF = 0b111;
   420  0016  3070               	movlw	112
   421  0017  1683               	bsf	3,5	;RP0=1, select bank1
   422  0018  1303               	bcf	3,6	;RP1=0, select bank1
   423  0019  048F               	iorwf	15,f	;volatile
   424  001A                     l794:
   425                           
   426                           ;main.c: 45:     OSCCONbits.OSTS = 0;
   427  001A  118F               	bcf	15,3	;volatile
   428  001B                     l796:
   429                           
   430                           ;main.c: 46:     OSCCONbits.HTS = 0;
   431  001B  110F               	bcf	15,2	;volatile
   432  001C                     l798:
   433                           
   434                           ;main.c: 47:     OSCCONbits.LTS = 0;
   435  001C  108F               	bcf	15,1	;volatile
   436  001D                     l800:
   437                           
   438                           ;main.c: 48:     OSCCONbits.SCS = 1;
   439  001D  140F               	bsf	15,0	;volatile
   440  001E                     l802:
   441                           
   442                           ;main.c: 49:     INTCONbits.GIE = 1;
   443  001E  178B               	bsf	11,7	;volatile
   444  001F                     l804:
   445                           
   446                           ;main.c: 50:     INTCONbits.PEIE = 1;
   447  001F  170B               	bsf	11,6	;volatile
   448  0020                     l806:
   449                           
   450                           ;main.c: 51:     INTCONbits.RBIE = 1;
   451  0020  158B               	bsf	11,3	;volatile
   452  0021                     l808:
   453                           
   454                           ;main.c: 52:     INTCONbits.RBIF = 0;
   455  0021  100B               	bcf	11,0	;volatile
   456  0022                     l810:
   457                           
   458                           ;main.c: 53:     IOCBbits.IOCB0 = 1;
   459  0022  1416               	bsf	22,0	;volatile
   460  0023                     l812:
   461                           
   462                           ;main.c: 54:     IOCBbits.IOCB1 = 1;
   463  0023  1496               	bsf	22,1	;volatile
   464  0024                     l814:
   465                           
   466                           ;main.c: 55:     ANSEL = 0;
   467  0024  1683               	bsf	3,5	;RP0=1, select bank3
   468  0025  1703               	bsf	3,6	;RP1=1, select bank3
   469  0026  0188               	clrf	8	;volatile
   470  0027                     l816:
   471                           
   472                           ;main.c: 56:     ANSELH = 0;
   473  0027  0189               	clrf	9	;volatile
   474  0028                     l818:
   475                           
   476                           ;main.c: 57:     TRISA = 0b00000000;
   477  0028  1683               	bsf	3,5	;RP0=1, select bank1
   478  0029  1303               	bcf	3,6	;RP1=0, select bank1
   479  002A  0185               	clrf	5	;volatile
   480  002B                     l820:
   481                           
   482                           ;main.c: 58:     PORTA = 0;
   483  002B  1283               	bcf	3,5	;RP0=0, select bank0
   484  002C  1303               	bcf	3,6	;RP1=0, select bank0
   485  002D  0185               	clrf	5	;volatile
   486  002E                     l822:
   487                           
   488                           ;main.c: 59:     TRISB = 0b00000011;
   489  002E  3003               	movlw	3
   490  002F  1683               	bsf	3,5	;RP0=1, select bank1
   491  0030  1303               	bcf	3,6	;RP1=0, select bank1
   492  0031  0086               	movwf	6	;volatile
   493  0032                     l824:
   494                           
   495                           ;main.c: 60:     TRISC = 0;
   496  0032  0187               	clrf	7	;volatile
   497  0033                     l826:
   498                           
   499                           ;main.c: 61:     PORTB = 0;
   500  0033  1283               	bcf	3,5	;RP0=0, select bank0
   501  0034  1303               	bcf	3,6	;RP1=0, select bank0
   502  0035  0186               	clrf	6	;volatile
   503  0036                     l828:
   504                           
   505                           ;main.c: 62:     TRISD = 0;
   506  0036  1683               	bsf	3,5	;RP0=1, select bank1
   507  0037  1303               	bcf	3,6	;RP1=0, select bank1
   508  0038  0188               	clrf	8	;volatile
   509  0039                     l830:
   510                           
   511                           ;main.c: 63:     PORTD = 0;
   512  0039  1283               	bcf	3,5	;RP0=0, select bank0
   513  003A  1303               	bcf	3,6	;RP1=0, select bank0
   514  003B  0188               	clrf	8	;volatile
   515  003C                     l832:
   516                           
   517                           ;main.c: 64:     TRISC = 0b00010000;
   518  003C  3010               	movlw	16
   519  003D  1683               	bsf	3,5	;RP0=1, select bank1
   520  003E  1303               	bcf	3,6	;RP1=0, select bank1
   521  003F  0087               	movwf	7	;volatile
   522  0040                     l834:
   523                           
   524                           ;main.c: 65:     TRISA5 = 1;
   525  0040  1685               	bsf	5,5	;volatile
   526  0041                     l836:
   527                           
   528                           ;main.c: 66:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, SP
      +                          I_IDLE_2_ACTIVE);
   529  0041  01F3               	clrf	spiInit@sDataSample
   530  0042  01F4               	clrf	spiInit@sClockIdle
   531  0043  01F5               	clrf	spiInit@sTransmitEdge
   532  0044  3024               	movlw	36
   533  0045  120A  118A  2092  120A  118A  	fcall	_spiInit
   534  004A                     l838:
   535                           
   536                           ;main.c: 69:         PORTD = Counter;
   537  004A  0877               	movf	_Counter,w
   538  004B  1283               	bcf	3,5	;RP0=0, select bank0
   539  004C  1303               	bcf	3,6	;RP1=0, select bank0
   540  004D  0088               	movwf	8	;volatile
   541  004E                     l840:
   542                           
   543                           ;main.c: 70:         spiWrite(Counter);
   544  004E  0877               	movf	_Counter,w
   545  004F  120A  118A  20A8  120A  118A  	fcall	_spiWrite
   546  0054  284A               	goto	l838
   547  0055  120A  118A  280C   	ljmp	start
   548  0058                     __end_of_main:
   549                           
   550                           	psect	text1
   551  00A8                     __ptext1:	
   552 ;; *************** function _spiWrite *****************
   553 ;; Defined at:
   554 ;;		line 34 in file "SPI.c"
   555 ;; Parameters:    Size  Location     Type
   556 ;;  dat             1    wreg     unsigned char 
   557 ;; Auto vars:     Size  Location     Type
   558 ;;  dat             1    3[COMMON] unsigned char 
   559 ;; Return value:  Size  Location     Type
   560 ;;                  1    wreg      void 
   561 ;; Registers used:
   562 ;;		wreg
   563 ;; Tracked objects:
   564 ;;		On entry : 0/0
   565 ;;		On exit  : 0/0
   566 ;;		Unchanged: 0/0
   567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   568 ;;      Params:         0       0       0       0       0
   569 ;;      Locals:         1       0       0       0       0
   570 ;;      Temps:          0       0       0       0       0
   571 ;;      Totals:         1       0       0       0       0
   572 ;;Total ram usage:        1 bytes
   573 ;; Hardware stack levels used:    1
   574 ;; Hardware stack levels required when called:    1
   575 ;; This function calls:
   576 ;;		Nothing
   577 ;; This function is called by:
   578 ;;		_main
   579 ;; This function uses a non-reentrant model
   580 ;;
   581                           
   582                           
   583                           ;psect for function _spiWrite
   584  00A8                     _spiWrite:
   585                           
   586                           ;incstack = 0
   587                           ; Regs used in _spiWrite: [wreg]
   588                           ;spiWrite@dat stored from wreg
   589  00A8  00F3               	movwf	spiWrite@dat
   590  00A9                     l692:
   591                           
   592                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
   593  00A9  0873               	movf	spiWrite@dat,w
   594  00AA  1283               	bcf	3,5	;RP0=0, select bank0
   595  00AB  1303               	bcf	3,6	;RP1=0, select bank0
   596  00AC  0093               	movwf	19	;volatile
   597  00AD                     l82:
   598  00AD  0008               	return
   599  00AE                     __end_of_spiWrite:
   600                           
   601                           	psect	text2
   602  0092                     __ptext2:	
   603 ;; *************** function _spiInit *****************
   604 ;; Defined at:
   605 ;;		line 12 in file "SPI.c"
   606 ;; Parameters:    Size  Location     Type
   607 ;;  sType           1    wreg     enum E1264
   608 ;;  sDataSample     1    3[COMMON] enum E1272
   609 ;;  sClockIdle      1    4[COMMON] enum E1276
   610 ;;  sTransmitEdg    1    5[COMMON] enum E1280
   611 ;; Auto vars:     Size  Location     Type
   612 ;;  sType           1    6[COMMON] enum E1264
   613 ;; Return value:  Size  Location     Type
   614 ;;                  1    wreg      void 
   615 ;; Registers used:
   616 ;;		wreg, status,2, status,0
   617 ;; Tracked objects:
   618 ;;		On entry : 0/0
   619 ;;		On exit  : 0/0
   620 ;;		Unchanged: 0/0
   621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   622 ;;      Params:         3       0       0       0       0
   623 ;;      Locals:         1       0       0       0       0
   624 ;;      Temps:          0       0       0       0       0
   625 ;;      Totals:         4       0       0       0       0
   626 ;;Total ram usage:        4 bytes
   627 ;; Hardware stack levels used:    1
   628 ;; Hardware stack levels required when called:    1
   629 ;; This function calls:
   630 ;;		Nothing
   631 ;; This function is called by:
   632 ;;		_main
   633 ;; This function uses a non-reentrant model
   634 ;;
   635                           
   636                           
   637                           ;psect for function _spiInit
   638  0092                     _spiInit:
   639                           
   640                           ;incstack = 0
   641                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   642                           ;spiInit@sType stored from wreg
   643  0092  00F6               	movwf	spiInit@sType
   644  0093                     l782:
   645                           
   646                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   647  0093  1683               	bsf	3,5	;RP0=1, select bank1
   648  0094  1303               	bcf	3,6	;RP1=0, select bank1
   649  0095  1287               	bcf	7,5	;volatile
   650                           
   651                           ;SPI.c: 15:     if(sType & 0b00000100)
   652  0096  1D76               	btfss	spiInit@sType,2
   653  0097  2899               	goto	u101
   654  0098  289A               	goto	u100
   655  0099                     u101:
   656  0099  289E               	goto	l788
   657  009A                     u100:
   658  009A                     l784:
   659                           
   660                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   661  009A  0875               	movf	spiInit@sTransmitEdge,w
   662  009B  0094               	movwf	20	;volatile
   663  009C                     l786:
   664                           
   665                           ;SPI.c: 18:         TRISC3 = 1;
   666  009C  1587               	bsf	7,3	;volatile
   667                           
   668                           ;SPI.c: 19:     }
   669  009D  28A2               	goto	l72
   670  009E                     l788:
   671                           
   672                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   673  009E  0873               	movf	spiInit@sDataSample,w
   674  009F  0475               	iorwf	spiInit@sTransmitEdge,w
   675  00A0  0094               	movwf	20	;volatile
   676  00A1                     l790:
   677                           
   678                           ;SPI.c: 23:         TRISC3 = 0;
   679  00A1  1187               	bcf	7,3	;volatile
   680  00A2                     l72:	
   681                           ;SPI.c: 24:     }
   682                           
   683                           
   684                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   685  00A2  0876               	movf	spiInit@sType,w
   686  00A3  0474               	iorwf	spiInit@sClockIdle,w
   687  00A4  1283               	bcf	3,5	;RP0=0, select bank0
   688  00A5  1303               	bcf	3,6	;RP1=0, select bank0
   689  00A6  0094               	movwf	20	;volatile
   690  00A7                     l73:
   691  00A7  0008               	return
   692  00A8                     __end_of_spiInit:
   693                           
   694                           	psect	text3
   695  0058                     __ptext3:	
   696 ;; *************** function _ISR *****************
   697 ;; Defined at:
   698 ;;		line 76 in file "main.c"
   699 ;; Parameters:    Size  Location     Type
   700 ;;		None
   701 ;; Auto vars:     Size  Location     Type
   702 ;;		None
   703 ;; Return value:  Size  Location     Type
   704 ;;                  1    wreg      void 
   705 ;; Registers used:
   706 ;;		wreg, status,2, status,0
   707 ;; Tracked objects:
   708 ;;		On entry : 0/0
   709 ;;		On exit  : 0/0
   710 ;;		Unchanged: 0/0
   711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   712 ;;      Params:         0       0       0       0       0
   713 ;;      Locals:         0       0       0       0       0
   714 ;;      Temps:          3       0       0       0       0
   715 ;;      Totals:         3       0       0       0       0
   716 ;;Total ram usage:        3 bytes
   717 ;; Hardware stack levels used:    1
   718 ;; This function calls:
   719 ;;		Nothing
   720 ;; This function is called by:
   721 ;;		Interrupt level 1
   722 ;; This function uses a non-reentrant model
   723 ;;
   724                           
   725                           
   726                           ;psect for function _ISR
   727  0058                     _ISR:
   728  0058                     i1l746:
   729                           
   730                           ;main.c: 77:     if (INTCONbits.RBIF == 1) {
   731  0058  1C0B               	btfss	11,0	;volatile
   732  0059  285B               	goto	u3_21
   733  005A  285C               	goto	u3_20
   734  005B                     u3_21:
   735  005B  288B               	goto	i1l54
   736  005C                     u3_20:
   737  005C                     i1l748:
   738                           
   739                           ;main.c: 78:         if (PORTBbits.RB0 == 1) {
   740  005C  1283               	bcf	3,5	;RP0=0, select bank0
   741  005D  1303               	bcf	3,6	;RP1=0, select bank0
   742  005E  1C06               	btfss	6,0	;volatile
   743  005F  2861               	goto	u4_21
   744  0060  2862               	goto	u4_20
   745  0061                     u4_21:
   746  0061  2864               	goto	i1l52
   747  0062                     u4_20:
   748  0062                     i1l750:
   749                           
   750                           ;main.c: 79:             Incremento = 1;
   751  0062  01F9               	clrf	_Incremento
   752  0063  0AF9               	incf	_Incremento,f
   753  0064                     i1l52:	
   754                           ;main.c: 80:         }
   755                           
   756                           
   757                           ;main.c: 81:         if (PORTBbits.RB0 == 0 && Incremento == 1) {
   758  0064  1806               	btfsc	6,0	;volatile
   759  0065  2867               	goto	u5_21
   760  0066  2868               	goto	u5_20
   761  0067                     u5_21:
   762  0067  2874               	goto	i1l53
   763  0068                     u5_20:
   764  0068                     i1l752:
   765  0068  0379               	decf	_Incremento,w
   766  0069  1D03               	btfss	3,2
   767  006A  286C               	goto	u6_21
   768  006B  286D               	goto	u6_20
   769  006C                     u6_21:
   770  006C  2874               	goto	i1l53
   771  006D                     u6_20:
   772  006D                     i1l754:
   773                           
   774                           ;main.c: 82:             Incremento = 0;
   775  006D  01F9               	clrf	_Incremento
   776  006E                     i1l756:
   777                           
   778                           ;main.c: 83:             Counter = Counter + 1;
   779  006E  0877               	movf	_Counter,w
   780  006F  3E01               	addlw	1
   781  0070  00F0               	movwf	??_ISR
   782  0071  0870               	movf	??_ISR,w
   783  0072  00F7               	movwf	_Counter
   784  0073  288B               	goto	i1l54
   785  0074                     i1l53:	
   786                           ;main.c: 85:         }
   787                           
   788                           
   789                           ;main.c: 86:         if (PORTBbits.RB1 == 1) {
   790  0074  1C86               	btfss	6,1	;volatile
   791  0075  2877               	goto	u7_21
   792  0076  2878               	goto	u7_20
   793  0077                     u7_21:
   794  0077  287A               	goto	i1l55
   795  0078                     u7_20:
   796  0078                     i1l760:
   797                           
   798                           ;main.c: 87:             Decremento = 1;
   799  0078  01F8               	clrf	_Decremento
   800  0079  0AF8               	incf	_Decremento,f
   801  007A                     i1l55:	
   802                           ;main.c: 88:         }
   803                           
   804                           
   805                           ;main.c: 89:         if (PORTBbits.RB1 == 0 && Decremento == 1) {
   806  007A  1886               	btfsc	6,1	;volatile
   807  007B  287D               	goto	u8_21
   808  007C  287E               	goto	u8_20
   809  007D                     u8_21:
   810  007D  288A               	goto	i1l56
   811  007E                     u8_20:
   812  007E                     i1l762:
   813  007E  0378               	decf	_Decremento,w
   814  007F  1D03               	btfss	3,2
   815  0080  2882               	goto	u9_21
   816  0081  2883               	goto	u9_20
   817  0082                     u9_21:
   818  0082  288A               	goto	i1l56
   819  0083                     u9_20:
   820  0083                     i1l764:
   821                           
   822                           ;main.c: 90:             Decremento = 0;
   823  0083  01F8               	clrf	_Decremento
   824  0084                     i1l766:
   825                           
   826                           ;main.c: 91:             Counter = Counter - 1;
   827  0084  0877               	movf	_Counter,w
   828  0085  3EFF               	addlw	255
   829  0086  00F0               	movwf	??_ISR
   830  0087  0870               	movf	??_ISR,w
   831  0088  00F7               	movwf	_Counter
   832  0089  288B               	goto	i1l54
   833  008A                     i1l56:	
   834                           ;main.c: 93:         }
   835                           
   836                           
   837                           ;main.c: 95:         INTCONbits.RBIF = 0;
   838  008A  100B               	bcf	11,0	;volatile
   839  008B                     i1l54:	
   840                           ;main.c: 96:         return;
   841                           
   842  008B  0872               	movf	??_ISR+2,w
   843  008C  008A               	movwf	10
   844  008D  0E71               	swapf	??_ISR+1,w
   845  008E  0083               	movwf	3
   846  008F  0EFE               	swapf	btemp,f
   847  0090  0E7E               	swapf	btemp,w
   848  0091  0009               	retfie
   849  0092                     __end_of_ISR:
   850  007E                     btemp	set	126	;btemp
   851  007E                     wtemp0	set	126
   852                           
   853                           	psect	intentry
   854  0004                     __pintentry:	
   855                           ;incstack = 0
   856                           ; Regs used in _ISR: [wreg+status,2+status,0]
   857                           
   858  0004                     interrupt_function:
   859  007E                     saved_w	set	btemp
   860  0004  00FE               	movwf	btemp
   861  0005  0E03               	swapf	3,w
   862  0006  00F1               	movwf	??_ISR+1
   863  0007  080A               	movf	10,w
   864  0008  00F2               	movwf	??_ISR+2
   865  0009  120A  118A  2858   	ljmp	_ISR
   866                           
   867                           	psect	config
   868                           
   869                           ;Config register CONFIG1 @ 0x2007
   870                           ;	Oscillator Selection bits
   871                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   872                           ;	Watchdog Timer Enable bit
   873                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   874                           ;	Power-up Timer Enable bit
   875                           ;	PWRTE = OFF, PWRT disabled
   876                           ;	RE3/MCLR pin function select bit
   877                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
   878                           ;	Code Protection bit
   879                           ;	CP = OFF, Program memory code protection is disabled
   880                           ;	Data Code Protection bit
   881                           ;	CPD = OFF, Data memory code protection is disabled
   882                           ;	Brown Out Reset Selection bits
   883                           ;	BOREN = OFF, BOR disabled
   884                           ;	Internal External Switchover bit
   885                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   886                           ;	Fail-Safe Clock Monitor Enabled bit
   887                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   888                           ;	Low Voltage Programming Enable bit
   889                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   890                           ;	In-Circuit Debugger Mode bit
   891                           ;	DEBUG = 0x1, unprogrammed default
   892  2007                     	org	8199
   893  2007  20F4               	dw	8436
   894                           
   895                           ;Config register CONFIG2 @ 0x2008
   896                           ;	Brown-out Reset Selection bit
   897                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   898                           ;	Flash Program Memory Self Write Enable bits
   899                           ;	WRT = OFF, Write protection off
   900  2008                     	org	8200
   901  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_spiInit

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     375
                            _spiInit
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      15
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     360
                                              3 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _spiInit
   _spiWrite

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       A      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Feb 24 22:06:39 2021

            _SSPSTATbits 0094                       l72 00A2                       l73 00A7  
                     l82 00AD                      l800 001D                      l810 0022  
                    l802 001E                      l820 002B                      l812 0023  
                    l804 001F                      l830 0039                      l822 002E  
                    l814 0024                      l806 0020                      l840 004E  
                    l832 003C                      l824 0032                      l816 0027  
                    l808 0021                      l834 0040                      l826 0033  
                    l818 0028                      l692 00A9                      l836 0041  
                    l828 0036                      l790 00A1                      l782 0093  
                    l838 004A                      l784 009A                      l792 0016  
                    l786 009C                      l794 001A                      l788 009E  
                    l796 001B                      l798 001C                      u100 009A  
                    u101 0099                      _ISR 0058                     ?_ISR 0070  
                   i1l52 0064                     i1l53 0074                     i1l54 008B  
                   i1l55 007A                     i1l56 008A                     u3_20 005C  
                   u3_21 005B                     u4_20 0062                     u4_21 0061  
                   u5_20 0068                     u5_21 0067                     u6_20 006D  
                   u6_21 006C                     u7_20 0078                     u7_21 0077  
                   u8_20 007E                     u8_21 007D                     u9_20 0083  
                   u9_21 0082               _Decremento 0078                     _main 0016  
                   btemp 007E                     start 000C                    ??_ISR 0070  
                  ?_main 0070                    _ANSEL 0188                    i1l750 0062  
                  i1l760 0078                    i1l752 0068                    i1l762 007E  
                  i1l754 006D                    i1l746 0058                    i1l764 0083  
                  i1l756 006E                    i1l748 005C                    i1l766 0084  
                  _PORTA 0005                    _PORTB 0006                    _PORTD 0008  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    pclath 000A          __end_of_spiInit 00A8  
                  status 0003                    wtemp0 007E               _Incremento 0079  
        __initialization 000F             __end_of_main 0058                   ??_main 0077  
                 _ANSELH 0189                   _TRISA5 042D                   _TRISC3 043B  
                 _TRISC5 043D                   _SSPCON 0014                   _SSPBUF 0013  
                 saved_w 007E         __end_of_spiWrite 00AE                ??_spiInit 0076  
__end_of__initialization 0012           __pcstackCOMMON 0070               __pmaintext 0016  
             __pintentry 0004                  _SSPSTAT 0094                  _Counter 0077  
              ?_spiWrite 0070                  __ptext1 00A8                  __ptext2 0092  
                __ptext3 0058             __size_of_ISR 003A                  _spiInit 0092  
   end_of_initialization 0012               ??_spiWrite 0073                _PORTBbits 0006  
            spiWrite@dat 0073      start_initialization 000F              __end_of_ISR 0092  
            __pbssCOMMON 0077                ___latbits 0002        __size_of_spiWrite 0006  
               ?_spiInit 0073     spiInit@sTransmitEdge 0075        interrupt_function 0004  
               _IOCBbits 0096       spiInit@sDataSample 0073         __size_of_spiInit 0016  
          __size_of_main 0042                 _spiWrite 00A8             spiInit@sType 0076  
      spiInit@sClockIdle 0074               _INTCONbits 000B                 intlevel1 0000  
             _OSCCONbits 008F  
